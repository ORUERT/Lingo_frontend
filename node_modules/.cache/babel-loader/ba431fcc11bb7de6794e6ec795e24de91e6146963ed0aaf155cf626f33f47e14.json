{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { MessageOutlined } from '@ant-design/icons-vue';\nimport axios from \"@/axios\";\nimport { defineComponent } from \"vue\";\n// import request from \"@/utils/request\";\n// let socket;\nexport default defineComponent({\n  components: {\n    MessageOutlined: MessageOutlined\n  },\n  data: function data() {\n    return {\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\n      user: {},\n      isCollapse: false,\n      users: [],\n      chatUser: '',\n      text: \"\",\n      messages: [],\n      content: ''\n    };\n  },\n  computed: {\n    isTextEmpty: function isTextEmpty() {\n      return this.text.length === 0; // 判断文本是否为空\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    onck: function onck() {\n      if (!this.isTextEmpty) {\n        this.messages.push({\n          user: this.user.username,\n          content: this.text\n        });\n        this.text = '';\n        this.send();\n      }\n    },\n    send: function send() {\n      var _this2 = this;\n      // 组装待发送的消息 json\n      // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\n      var temptext = this.messages.at(-1);\n      console.log(temptext);\n      var message = {\n        from: \"this.user.username\",\n        to: \"this.chatUser\",\n        content: temptext.content\n      };\n      axios.post('/message', message, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token')\n        }\n      }).then(function (res) {\n        if (res.data.code === '200') {\n          console.log(res.data);\n\n          // 构建消息内容，本人消息\n          _this2.createContent(null, _this2.user.username, temptext.content);\n          console.log(\"data\", res.data.data);\n          _this2.createContent(\"ai\", null, res.data.data.data);\n        } else {\n          _this2.messages.pop();\n          //create error message\n          // this.$message.error('登录失败')\n        }\n      })[\"catch\"](function (err) {\n        _this2.messages.pop();\n        console.log(err);\n      });\n    },\n    createContent: function createContent(remoteUser, nowUser, text) {\n      // 这个方法是用来将 json的聊天消息数据转换成 html的。\n      var html;\n      // 当前用户消息\n      if (nowUser) {\n        // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\n        html = \"<div class=\\\"a-row\\\" style=\\\"padding: 5px 0\\\">\\n\" + \"  <div class=\\\"a-col a-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" + \"    <div class=\\\"tip left\\\">\" + text + \"</div>\\n\" + \"  </div>\\n\" + \"  <div class=\\\"a-col a-col-2\\\">\\n\" + \"  <span class=\\\"a-avatar a-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" + \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" + \"  </span>\\n\" + \"  </div>\\n\" + \"</div>\";\n      } else if (remoteUser) {\n        // remoteUser表示远程用户聊天消息，蓝色的气泡\n        html = \"<div class=\\\"a-row\\\" style=\\\"padding: 5px 0\\\">\\n\" + \"  <div class=\\\"a-col a-col-2\\\" style=\\\"text-align: right\\\">\\n\" + \"  <span class=\\\"a-avatar a-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" + \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" + \"  </span>\\n\" + \"  </div>\\n\" + \"  <div class=\\\"a-col a-col-22\\\" style=\\\"text-align: left; padding-left: 10px\\\">\\n\" + \"    <div class=\\\"tip right\\\">\" + text + \"</div>\\n\" + \"  </div>\\n\" + \"</div>\";\n      }\n      console.log(html);\n      this.content += html;\n    },\n    init: function init() {\n      this.user = sessionStorage.getItem(\"userInfo\") ? JSON.parse(sessionStorage.getItem(\"userInfo\")) : {};\n      var username = this.user.nickname;\n      var _this = this;\n    }\n  }\n});","map":{"version":3,"names":["MessageOutlined","axios","defineComponent","components","data","circleUrl","user","isCollapse","users","chatUser","text","messages","content","computed","isTextEmpty","length","created","init","methods","onck","push","username","send","_this2","temptext","at","console","log","message","from","to","post","headers","localStorage","getItem","then","res","code","createContent","pop","err","remoteUser","nowUser","html","sessionStorage","JSON","parse","nickname","_this"],"sources":["C:\\Users\\zhouy\\WebstormProjects\\lingo\\src\\view\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <div  style=\"padding: 10px; margin-bottom: 50px\">\r\n    <a-row >\r\n      <a-col class=\"chat-col\" :span=\"16\">\r\n        <div class=\"chat-box\">\r\n          <div class=\"chat-title\">\r\n            Web聊天室（{{ chatUser }}）\r\n          </div>\r\n          <div class=\"chat-content\" v-html=\"content\">\r\n            <div class=\"message-box\" id=\"scroll-box\">\r\n              <div class=\"scroll_content\">\r\n                <ul>\r\n                  <li v-for=\"(item, index) in records\" :key=\"index\">\r\n                    <p class=\"time\">\r\n                      <span>{{ item.time }}</span>\r\n                    </p>\r\n                    <div :class=\"{ self: item.self }\" class>\r\n                      <div class=\"nickname\">{{ item.nickname }}</div>\r\n                      <img\r\n                          src=\"~/assets/avatar.png\"\r\n                          class=\"avatar\"\r\n                          width=\"30\"\r\n                          height=\"30\"\r\n                          @click=\"handlerAddFrind(item.sender)\"\r\n                      />\r\n                      <div class=\"text\">\r\n                        <span v-html=\"item.content\" />\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"chat-input\">\r\n            <a-input-group >\r\n              <a-input class=\"chat-a-input\" v-model:value=\"text\" size=\"small\">\r\n                <template #suffix>\r\n                  <div class=\"icon-wrapper\">\r\n                  <message-outlined :style=\"{fontSize: '20px', color:'#000000'}\" v-if=\"text.length > 0\" @click=\"onck\" />\r\n                  <message-outlined\r\n                      :style=\"{ fontSize: '20px', color: '#AAAAAA' }\"\r\n                      v-show=\"text.length === 0\"\r\n                  />\r\n                    </div>\r\n                </template>\r\n              </a-input>\r\n            </a-input-group>\r\n          </div>\r\n\r\n        </div>\r\n      </a-col>\r\n    </a-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { MessageOutlined  } from '@ant-design/icons-vue';\r\nimport axios from \"@/axios\";\r\nimport {defineComponent} from \"vue\";\r\n// import request from \"@/utils/request\";\r\n// let socket;\r\nexport default defineComponent( {\r\n  components: {\r\n    MessageOutlined\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      user: {},\r\n      isCollapse: false,\r\n      users: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n  },\r\n  computed: {\r\n    isTextEmpty() {\r\n      return this.text.length === 0; // 判断文本是否为空\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    onck() {\r\n      if(!this.isTextEmpty){\r\n        this.messages.push({user: this.user.username, content: this.text})\r\n        this.text = ''\r\n        this.send()\r\n      }\r\n\r\n    },\r\n    send() {\r\n        // 组装待发送的消息 json\r\n        // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n      let temptext = this.messages.at(-1)\r\n      console.log(temptext)\r\n      let message = {from: \"this.user.username\", to: \"this.chatUser\", content: temptext.content}\r\n      axios.post('/message',message,{\r\n        headers:{\r\n          'Content-Type':'application/json',\r\n          'Authorization':localStorage.getItem('token')\r\n        }\r\n      }).then(res=>{\r\n        if(res.data.code === '200'){\r\n          console.log(res.data)\r\n\r\n          // 构建消息内容，本人消息\r\n          this.createContent(null, this.user.username, temptext.content)\r\n          console.log(\"data\",res.data.data)\r\n          this.createContent(\"ai\",null,res.data.data.data)\r\n        }else{\r\n          this.messages.pop()\r\n          //create error message\r\n          // this.$message.error('登录失败')\r\n        }\r\n      }).catch(err=>{\r\n        this.messages.pop()\r\n        console.log(err)\r\n      })\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"a-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"a-col a-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip left\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"a-col a-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"a-avatar a-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"a-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"a-col a-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"a-avatar a-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"a-col a-col-22\\\" style=\\\"text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip right\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      console.log(html)\r\n      this.content += html;\r\n    },\r\n    init() {\r\n      this.user = sessionStorage.getItem(\"userInfo\") ? JSON.parse(sessionStorage.getItem(\"userInfo\")) : {}\r\n      let username = this.user.nickname;\r\n      let _this = this;\r\n    }\r\n  }\r\n})\r\n</script>\r\n<style>\r\n@import \"../scss/pages/_chat.scss\";\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}