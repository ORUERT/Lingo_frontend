{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createBlock as _createBlock, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, withCtx as _withCtx } from \"vue\";\nimport _imports_0 from '../assets/logo.png';\nvar _hoisted_1 = {\n  style: {\n    \"padding\": \"10px\",\n    \"margin-bottom\": \"50px\"\n  }\n};\nvar _hoisted_2 = {\n  \"class\": \"chat-box\"\n};\nvar _hoisted_3 = {\n  \"class\": \"chat-title\"\n};\nvar _hoisted_4 = {\n  \"class\": \"chat-content\"\n};\nvar _hoisted_5 = {\n  \"class\": \"message-box\",\n  id: \"scroll-box\"\n};\nvar _hoisted_6 = {\n  \"class\": \"scroll_content\"\n};\nvar _hoisted_7 = {\n  \"class\": \"list\"\n};\nvar _hoisted_8 = {\n  key: 0,\n  \"class\": \"nickname\"\n};\nvar _hoisted_9 = {\n  key: 1,\n  \"class\": \"nickname\"\n};\nvar _hoisted_10 = [\"onClick\"];\nvar _hoisted_11 = {\n  \"class\": \"text\"\n};\nvar _hoisted_12 = [\"innerHTML\"];\nvar _hoisted_13 = {\n  \"class\": \"chat-input\"\n};\nvar _hoisted_14 = {\n  \"class\": \"icon-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_message_outlined = _resolveComponent(\"message-outlined\");\n  var _component_a_input = _resolveComponent(\"a-input\");\n  var _component_a_input_group = _resolveComponent(\"a-input-group\");\n  var _component_a_col = _resolveComponent(\"a-col\");\n  var _component_a_row = _resolveComponent(\"a-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_row, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_a_col, {\n        \"class\": \"chat-col\",\n        span: 16\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, \" Web聊天室（\" + _toDisplayString(_ctx.chatUser) + \"） \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"ul\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.messages, function (item, index) {\n            return _openBlock(), _createElementBlock(\"li\", {\n              key: index\n            }, [_createElementVNode(\"div\", {\n              \"class\": _normalizeClass([{\n                self: item.self\n              }, \"\"])\n            }, [item.self ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \"self\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"teacher\")), _createElementVNode(\"img\", {\n              src: _imports_0,\n              \"class\": \"avatar\",\n              width: \"30\",\n              height: \"30\",\n              onClick: function onClick($event) {\n                return _ctx.handlerAddFrind(item.sender);\n              }\n            }, null, 8 /* PROPS */, _hoisted_10), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"span\", {\n              innerHTML: item.content\n            }, null, 8 /* PROPS */, _hoisted_12)])], 2 /* CLASS */)]);\n          }), 128 /* KEYED_FRAGMENT */))])])])]), _createElementVNode(\"div\", _hoisted_13, [_createVNode(_component_a_input_group, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_a_input, {\n                \"class\": \"chat-a-input\",\n                value: _ctx.text,\n                \"onUpdate:value\": _cache[0] || (_cache[0] = function ($event) {\n                  return _ctx.text = $event;\n                }),\n                size: \"small\"\n              }, {\n                suffix: _withCtx(function () {\n                  return [_createElementVNode(\"div\", _hoisted_14, [_ctx.text.length > 0 ? (_openBlock(), _createBlock(_component_message_outlined, {\n                    key: 0,\n                    style: {\n                      fontSize: '20px',\n                      color: '#000000'\n                    },\n                    onClick: _ctx.onck\n                  }, null, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _withDirectives(_createVNode(_component_message_outlined, {\n                    style: {\n                      fontSize: '20px',\n                      color: '#AAAAAA'\n                    }\n                  }, null, 512 /* NEED_PATCH */), [[_vShow, _ctx.text.length === 0]])])];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"value\"])];\n            }),\n            _: 1 /* STABLE */\n          })])])];\n        }),\n\n        _: 1 /* STABLE */\n      })];\n    }),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_imports_0","style","id","_createElementBlock","_hoisted_1","_createVNode","_component_a_row","_component_a_col","span","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","chatUser","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_Fragment","_renderList","messages","item","index","key","_normalizeClass","self","_hoisted_8","_hoisted_9","src","width","height","onClick","$event","handlerAddFrind","sender","_hoisted_11","innerHTML","content","_hoisted_13","_component_a_input_group","_component_a_input","value","text","size","suffix","_withCtx","_hoisted_14","length","_createBlock","_component_message_outlined","fontSize","color","onck"],"sources":["C:\\Users\\zhouy\\WebstormProjects\\lingo\\src\\view\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <div  style=\"padding: 10px; margin-bottom: 50px\">\r\n    <a-row >\r\n      <a-col class=\"chat-col\" :span=\"16\">\r\n        <div class=\"chat-box\">\r\n          <div class=\"chat-title\">\r\n            Web聊天室（{{ chatUser }}）\r\n          </div>\r\n          <div class=\"chat-content\" >\r\n            <div class=\"message-box\" id=\"scroll-box\">\r\n              <div class=\"scroll_content\">\r\n                <ul class=\"list\">\r\n                  <li v-for=\"(item, index) in messages\" :key=\"index\">\r\n                    <div :class=\"{ self: item.self }\" class>\r\n                      <div class=\"nickname\" v-if=\"item.self\">self</div>\r\n                      <div class=\"nickname\" v-else>teacher</div>\r\n                      <img\r\n                          src=\"../assets/logo.png\"\r\n                          class=\"avatar\"\r\n                          width=\"30\"\r\n                          height=\"30\"\r\n                          @click=\"handlerAddFrind(item.sender)\"\r\n                      />\r\n                      <div class=\"text\">\r\n                        <span v-html=\"item.content\" />\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"chat-input\">\r\n            <a-input-group >\r\n              <a-input class=\"chat-a-input\" v-model:value=\"text\" size=\"small\">\r\n                <template #suffix>\r\n                  <div class=\"icon-wrapper\">\r\n                  <message-outlined :style=\"{fontSize: '20px', color:'#000000'}\" v-if=\"text.length > 0\" @click=\"onck\" />\r\n                  <message-outlined\r\n                      :style=\"{ fontSize: '20px', color: '#AAAAAA' }\"\r\n                      v-show=\"text.length === 0\"\r\n                  />\r\n                    </div>\r\n                </template>\r\n              </a-input>\r\n            </a-input-group>\r\n          </div>\r\n\r\n        </div>\r\n      </a-col>\r\n    </a-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { MessageOutlined  } from '@ant-design/icons-vue';\r\nimport axios from \"@/axios\";\r\nimport {defineComponent} from \"vue\";\r\n// import request from \"@/utils/request\";\r\n// let socket;\r\nexport default defineComponent( {\r\n  components: {\r\n    MessageOutlined\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      user: {},\r\n      isCollapse: false,\r\n      nickname: '',\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n  },\r\n  computed: {\r\n    isTextEmpty() {\r\n      return this.text.length === 0; // 判断文本是否为空\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    onck() {\r\n      if(!this.isTextEmpty){\r\n        this.messages.push({self:true, content: this.text})\r\n        this.text = ''\r\n        this.send()\r\n      }\r\n\r\n    },\r\n    send() {\r\n        // 组装待发送的消息 json\r\n        // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n      let temptext = this.messages.at(-1)\r\n      console.log(temptext)\r\n      let message = {self:true, content: temptext.content}\r\n      axios.post('/message',message,{\r\n        headers:{\r\n          'Content-Type':'application/json',\r\n          'Authorization':localStorage.getItem('token')\r\n        }\r\n      }).then(res=>{\r\n        if(res.data.code === '200'){\r\n          console.log(res.data)\r\n          // 构建消息内容，本人消息\r\n          this.messages.push({self:false,content:res.data.data.data})\r\n        }else{\r\n          this.messages.pop()\r\n          //create error message\r\n          // this.$message.error('登录失败')\r\n        }\r\n      }).catch(err=>{\r\n        this.messages.pop()\r\n        console.log(err)\r\n      })\r\n    },\r\n    init() {\r\n      this.user = sessionStorage.getItem(\"userInfo\") ? JSON.parse(sessionStorage.getItem(\"userInfo\")) : {}\r\n      this.nickname = this.user.nickname;\r\n    }\r\n  }\r\n})\r\n</script>\r\n<style>\r\n@import \"../scss/pages/_chat.scss\";\r\n</style>\r\n"],"mappings":";OAiB0BA,UAAwB;;EAhB1CC,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;;EAGrC,SAAM;AAAU;;EACd,SAAM;AAAY;;EAGlB,SAAM;AAAc;;EAClB,SAAM,aAAa;EAACC,EAAE,EAAC;;;EACrB,SAAM;AAAgB;;EACrB,SAAM;AAAM;;;EAGL,SAAM;;;;EACN,SAAM;;;;EAQN,SAAM;AAAM;;;EASxB,SAAM;AAAY;;EAIV,SAAM;AAAc;;;;;;;uBAnCzCC,mBAAA,CAkDM,OAlDNC,UAkDM,GAjDJC,YAAA,CAgDQC,gBAAA;wBA/CN;MAAA,OA8CQ,CA9CRD,YAAA,CA8CQE,gBAAA;QA9CD,SAAM,UAAU;QAAEC,IAAI,EAAE;;4BAC7B;UAAA,OA4CM,CA5CNC,mBAAA,CA4CM,OA5CNC,UA4CM,GA3CJD,mBAAA,CAEM,OAFNE,UAEM,EAFkB,UACf,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,QAAQ,IAAG,IACvB,iBACAL,mBAAA,CAuBM,OAvBNM,UAuBM,GAtBJN,mBAAA,CAqBM,OArBNO,UAqBM,GApBJP,mBAAA,CAmBM,OAnBNQ,UAmBM,GAlBJR,mBAAA,CAiBK,MAjBLS,UAiBK,I,kBAhBHf,mBAAA,CAeKgB,SAAA,QAAAC,WAAA,CAfuBP,IAAA,CAAAQ,QAAQ,YAAxBC,IAAI,EAAEC,KAAK;iCAAvBpB,mBAAA,CAeK;cAfkCqB,GAAG,EAAED;YAAK,IAC/Cd,mBAAA,CAaM;cAbA,SAAKgB,eAAA;gBAAAC,IAAA,EAAUJ,IAAI,CAACI;cAAI,GAAI,EAAK;gBACTJ,IAAI,CAACI,IAAI,I,cAArCvB,mBAAA,CAAiD,OAAjDwB,UAAiD,EAAV,MAAI,M,cAC3CxB,mBAAA,CAA0C,OAA1CyB,UAA0C,EAAb,SAAO,IACpCnB,mBAAA,CAME;cALEoB,GAAwB,EAAxB7B,UAAwB;cACxB,SAAM,QAAQ;cACd8B,KAAK,EAAC,IAAI;cACVC,MAAM,EAAC,IAAI;cACVC,OAAK,WAAAA,QAAAC,MAAA;gBAAA,OAAEpB,IAAA,CAAAqB,eAAe,CAACZ,IAAI,CAACa,MAAM;cAAA;kDAEvC1B,mBAAA,CAEM,OAFN2B,WAEM,GADJ3B,mBAAA,CAA8B;cAAxB4B,SAAqB,EAAbf,IAAI,CAACgB;;kDAQjC7B,mBAAA,CAcM,OAdN8B,WAcM,GAbJlC,YAAA,CAYgBmC,wBAAA;gCAXd;cAAA,OAUU,CAVVnC,YAAA,CAUUoC,kBAAA;gBAVD,SAAM,cAAc;gBAASC,KAAK,EAAE7B,IAAA,CAAA8B,IAAI;;yBAAJ9B,IAAA,CAAA8B,IAAI,GAAAV,MAAA;gBAAA;gBAAEW,IAAI,EAAC;;gBAC3CC,MAAM,EAAAC,QAAA,CACf;kBAAA,OAMQ,CANRrC,mBAAA,CAMQ,OANRsC,WAMQ,GAL6DlC,IAAA,CAAA8B,IAAI,CAACK,MAAM,Q,cAAhFC,YAAA,CAAsGC,2BAAA;;oBAAnFjD,KAAK,EAAE;sBAAAkD,QAAA;sBAAAC,KAAA;oBAAA,CAAmC;oBAA0BpB,OAAK,EAAEnB,IAAA,CAAAwC;6GAC9FhD,YAAA,CAGE6C,2BAAA;oBAFGjD,KAAK,EAAE;sBAAAkD,QAAA;sBAAAC,KAAA;oBAAA;kBAAsC,iC,SACtCvC,IAAA,CAAA8B,IAAI,CAACK,MAAM,Q"},"metadata":{},"sourceType":"module","externalDependencies":[]}