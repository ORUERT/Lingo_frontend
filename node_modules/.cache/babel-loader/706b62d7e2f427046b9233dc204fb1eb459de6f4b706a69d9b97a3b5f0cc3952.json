{"ast":null,"code":"import _defineProperty from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport classNames from '../_util/classNames';\nimport { initDefaultProps } from '../_util/props-util';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport Element from './Element';\nimport useStyle from './style';\nexport var skeletonProps = function skeletonProps() {\n  return {\n    active: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    loading: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    prefixCls: String,\n    avatar: {\n      type: [Boolean, Object],\n      \"default\": undefined\n    },\n    title: {\n      type: [Boolean, Object],\n      \"default\": undefined\n    },\n    paragraph: {\n      type: [Boolean, Object],\n      \"default\": undefined\n    },\n    round: {\n      type: Boolean,\n      \"default\": undefined\n    }\n  };\n};\nfunction getComponentProps(prop) {\n  if (prop && _typeof(prop) === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  var basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nvar Skeleton = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ASkeleton',\n  props: initDefaultProps(skeletonProps(), {\n    avatar: false,\n    title: true,\n    paragraph: true\n  }),\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var _useConfigInject = useConfigInject('skeleton', props),\n      prefixCls = _useConfigInject.prefixCls,\n      direction = _useConfigInject.direction;\n    var _useStyle = useStyle(prefixCls),\n      _useStyle2 = _slicedToArray(_useStyle, 2),\n      wrapSSR = _useStyle2[0],\n      hashId = _useStyle2[1];\n    return function () {\n      var _a;\n      var loading = props.loading,\n        avatar = props.avatar,\n        title = props.title,\n        paragraph = props.paragraph,\n        active = props.active,\n        round = props.round;\n      var pre = prefixCls.value;\n      if (loading || props.loading === undefined) {\n        var _classNames;\n        var hasAvatar = !!avatar || avatar === '';\n        var hasTitle = !!title || title === '';\n        var hasParagraph = !!paragraph || paragraph === '';\n        // Avatar\n        var avatarNode;\n        if (hasAvatar) {\n          var avatarProps = _extends(_extends({\n            prefixCls: \"\".concat(pre, \"-avatar\")\n          }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n          avatarNode = _createVNode(\"div\", {\n            \"class\": \"\".concat(pre, \"-header\")\n          }, [_createVNode(Element, avatarProps, null)]);\n        }\n        var contentNode;\n        if (hasTitle || hasParagraph) {\n          // Title\n          var $title;\n          if (hasTitle) {\n            var titleProps = _extends(_extends({\n              prefixCls: \"\".concat(pre, \"-title\")\n            }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n            $title = _createVNode(Title, titleProps, null);\n          }\n          // Paragraph\n          var paragraphNode;\n          if (hasParagraph) {\n            var paragraphProps = _extends(_extends({\n              prefixCls: \"\".concat(pre, \"-paragraph\")\n            }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n            paragraphNode = _createVNode(Paragraph, paragraphProps, null);\n          }\n          contentNode = _createVNode(\"div\", {\n            \"class\": \"\".concat(pre, \"-content\")\n          }, [$title, paragraphNode]);\n        }\n        var cls = classNames(pre, (_classNames = {}, _defineProperty(_classNames, \"\".concat(pre, \"-with-avatar\"), hasAvatar), _defineProperty(_classNames, \"\".concat(pre, \"-active\"), active), _defineProperty(_classNames, \"\".concat(pre, \"-rtl\"), direction.value === 'rtl'), _defineProperty(_classNames, \"\".concat(pre, \"-round\"), round), _defineProperty(_classNames, hashId.value, true), _classNames));\n        return wrapSSR(_createVNode(\"div\", {\n          \"class\": cls\n        }, [avatarNode, contentNode]));\n      }\n      return (_a = slots[\"default\"]) === null || _a === void 0 ? void 0 : _a.call(slots);\n    };\n  }\n});\nexport default Skeleton;","map":{"version":3,"names":["_extends","createVNode","_createVNode","defineComponent","classNames","initDefaultProps","Title","Paragraph","useConfigInject","Element","useStyle","skeletonProps","active","type","Boolean","undefined","loading","prefixCls","String","avatar","Object","title","paragraph","round","getComponentProps","prop","_typeof","getAvatarBasicProps","hasTitle","hasParagraph","size","shape","getTitleBasicProps","hasAvatar","width","getParagraphBasicProps","basicProps","rows","Skeleton","compatConfig","MODE","name","props","setup","_ref","slots","_useConfigInject","direction","_useStyle","_useStyle2","_slicedToArray","wrapSSR","hashId","_a","pre","value","_classNames","avatarNode","avatarProps","concat","contentNode","$title","titleProps","paragraphNode","paragraphProps","cls","_defineProperty","call"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/skeleton/Skeleton.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { defineComponent } from 'vue';\nimport classNames from '../_util/classNames';\nimport { initDefaultProps } from '../_util/props-util';\nimport Title from './Title';\nimport Paragraph from './Paragraph';\nimport useConfigInject from '../config-provider/hooks/useConfigInject';\nimport Element from './Element';\nimport useStyle from './style';\nexport const skeletonProps = () => ({\n  active: {\n    type: Boolean,\n    default: undefined\n  },\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  prefixCls: String,\n  avatar: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  title: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  paragraph: {\n    type: [Boolean, Object],\n    default: undefined\n  },\n  round: {\n    type: Boolean,\n    default: undefined\n  }\n});\nfunction getComponentProps(prop) {\n  if (prop && typeof prop === 'object') {\n    return prop;\n  }\n  return {};\n}\nfunction getAvatarBasicProps(hasTitle, hasParagraph) {\n  if (hasTitle && !hasParagraph) {\n    // Square avatar\n    return {\n      size: 'large',\n      shape: 'square'\n    };\n  }\n  return {\n    size: 'large',\n    shape: 'circle'\n  };\n}\nfunction getTitleBasicProps(hasAvatar, hasParagraph) {\n  if (!hasAvatar && hasParagraph) {\n    return {\n      width: '38%'\n    };\n  }\n  if (hasAvatar && hasParagraph) {\n    return {\n      width: '50%'\n    };\n  }\n  return {};\n}\nfunction getParagraphBasicProps(hasAvatar, hasTitle) {\n  const basicProps = {};\n  // Width\n  if (!hasAvatar || !hasTitle) {\n    basicProps.width = '61%';\n  }\n  // Rows\n  if (!hasAvatar && hasTitle) {\n    basicProps.rows = 3;\n  } else {\n    basicProps.rows = 2;\n  }\n  return basicProps;\n}\nconst Skeleton = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'ASkeleton',\n  props: initDefaultProps(skeletonProps(), {\n    avatar: false,\n    title: true,\n    paragraph: true\n  }),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      prefixCls,\n      direction\n    } = useConfigInject('skeleton', props);\n    const [wrapSSR, hashId] = useStyle(prefixCls);\n    return () => {\n      var _a;\n      const {\n        loading,\n        avatar,\n        title,\n        paragraph,\n        active,\n        round\n      } = props;\n      const pre = prefixCls.value;\n      if (loading || props.loading === undefined) {\n        const hasAvatar = !!avatar || avatar === '';\n        const hasTitle = !!title || title === '';\n        const hasParagraph = !!paragraph || paragraph === '';\n        // Avatar\n        let avatarNode;\n        if (hasAvatar) {\n          const avatarProps = _extends(_extends({\n            prefixCls: `${pre}-avatar`\n          }, getAvatarBasicProps(hasTitle, hasParagraph)), getComponentProps(avatar));\n          avatarNode = _createVNode(\"div\", {\n            \"class\": `${pre}-header`\n          }, [_createVNode(Element, avatarProps, null)]);\n        }\n        let contentNode;\n        if (hasTitle || hasParagraph) {\n          // Title\n          let $title;\n          if (hasTitle) {\n            const titleProps = _extends(_extends({\n              prefixCls: `${pre}-title`\n            }, getTitleBasicProps(hasAvatar, hasParagraph)), getComponentProps(title));\n            $title = _createVNode(Title, titleProps, null);\n          }\n          // Paragraph\n          let paragraphNode;\n          if (hasParagraph) {\n            const paragraphProps = _extends(_extends({\n              prefixCls: `${pre}-paragraph`\n            }, getParagraphBasicProps(hasAvatar, hasTitle)), getComponentProps(paragraph));\n            paragraphNode = _createVNode(Paragraph, paragraphProps, null);\n          }\n          contentNode = _createVNode(\"div\", {\n            \"class\": `${pre}-content`\n          }, [$title, paragraphNode]);\n        }\n        const cls = classNames(pre, {\n          [`${pre}-with-avatar`]: hasAvatar,\n          [`${pre}-active`]: active,\n          [`${pre}-rtl`]: direction.value === 'rtl',\n          [`${pre}-round`]: round,\n          [hashId.value]: true\n        });\n        return wrapSSR(_createVNode(\"div\", {\n          \"class\": cls\n        }, [avatarNode, contentNode]));\n      }\n      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);\n    };\n  }\n});\nexport default Skeleton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}