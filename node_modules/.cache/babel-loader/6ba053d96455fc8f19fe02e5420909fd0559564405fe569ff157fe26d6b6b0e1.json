{"ast":null,"code":"import _defineProperty from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { useInjectCascader } from '../context';\nexport default function Checkbox(_ref) {\n  var _class;\n  var prefixCls = _ref.prefixCls,\n    checked = _ref.checked,\n    halfChecked = _ref.halfChecked,\n    disabled = _ref.disabled,\n    onClick = _ref.onClick;\n  var _useInjectCascader = useInjectCascader(),\n    customSlots = _useInjectCascader.customSlots,\n    checkable = _useInjectCascader.checkable;\n  var mergedCheckable = checkable.value !== false ? customSlots.value.checkable : checkable.value;\n  var customCheckbox = typeof mergedCheckable === 'function' ? mergedCheckable() : typeof mergedCheckable === 'boolean' ? null : mergedCheckable;\n  return _createVNode(\"span\", {\n    \"class\": (_class = {}, _defineProperty(_class, prefixCls, true), _defineProperty(_class, \"\".concat(prefixCls, \"-checked\"), checked), _defineProperty(_class, \"\".concat(prefixCls, \"-indeterminate\"), !checked && halfChecked), _defineProperty(_class, \"\".concat(prefixCls, \"-disabled\"), disabled), _class),\n    \"onClick\": onClick\n  }, [customCheckbox]);\n}\nCheckbox.props = ['prefixCls', 'checked', 'halfChecked', 'disabled', 'onClick'];\nCheckbox.displayName = 'Checkbox';\nCheckbox.inheritAttrs = false;","map":{"version":3,"names":["createVNode","_createVNode","useInjectCascader","Checkbox","_ref","_class","prefixCls","checked","halfChecked","disabled","onClick","_useInjectCascader","customSlots","checkable","mergedCheckable","value","customCheckbox","_defineProperty","concat","props","displayName","inheritAttrs"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-cascader/OptionList/Checkbox.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport { useInjectCascader } from '../context';\nexport default function Checkbox(_ref) {\n  let {\n    prefixCls,\n    checked,\n    halfChecked,\n    disabled,\n    onClick\n  } = _ref;\n  const {\n    customSlots,\n    checkable\n  } = useInjectCascader();\n  const mergedCheckable = checkable.value !== false ? customSlots.value.checkable : checkable.value;\n  const customCheckbox = typeof mergedCheckable === 'function' ? mergedCheckable() : typeof mergedCheckable === 'boolean' ? null : mergedCheckable;\n  return _createVNode(\"span\", {\n    \"class\": {\n      [prefixCls]: true,\n      [`${prefixCls}-checked`]: checked,\n      [`${prefixCls}-indeterminate`]: !checked && halfChecked,\n      [`${prefixCls}-disabled`]: disabled\n    },\n    \"onClick\": onClick\n  }, [customCheckbox]);\n}\nCheckbox.props = ['prefixCls', 'checked', 'halfChecked', 'disabled', 'onClick'];\nCheckbox.displayName = 'Checkbox';\nCheckbox.inheritAttrs = false;"],"mappings":";AAAA,SAASA,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,SAASC,iBAAiB,QAAQ,YAAY;AAC9C,eAAe,SAASC,QAAQA,CAACC,IAAI,EAAE;EAAA,IAAAC,MAAA;EACrC,IACEC,SAAS,GAKPF,IAAI,CALNE,SAAS;IACTC,OAAO,GAILH,IAAI,CAJNG,OAAO;IACPC,WAAW,GAGTJ,IAAI,CAHNI,WAAW;IACXC,QAAQ,GAENL,IAAI,CAFNK,QAAQ;IACRC,OAAO,GACLN,IAAI,CADNM,OAAO;EAET,IAAAC,kBAAA,GAGIT,iBAAiB,CAAC,CAAC;IAFrBU,WAAW,GAAAD,kBAAA,CAAXC,WAAW;IACXC,SAAS,GAAAF,kBAAA,CAATE,SAAS;EAEX,IAAMC,eAAe,GAAGD,SAAS,CAACE,KAAK,KAAK,KAAK,GAAGH,WAAW,CAACG,KAAK,CAACF,SAAS,GAAGA,SAAS,CAACE,KAAK;EACjG,IAAMC,cAAc,GAAG,OAAOF,eAAe,KAAK,UAAU,GAAGA,eAAe,CAAC,CAAC,GAAG,OAAOA,eAAe,KAAK,SAAS,GAAG,IAAI,GAAGA,eAAe;EAChJ,OAAOb,YAAY,CAAC,MAAM,EAAE;IAC1B,OAAO,GAAAI,MAAA,OAAAY,eAAA,CAAAZ,MAAA,EACJC,SAAS,EAAG,IAAI,GAAAW,eAAA,CAAAZ,MAAA,KAAAa,MAAA,CACbZ,SAAS,eAAaC,OAAO,GAAAU,eAAA,CAAAZ,MAAA,KAAAa,MAAA,CAC7BZ,SAAS,qBAAmB,CAACC,OAAO,IAAIC,WAAW,GAAAS,eAAA,CAAAZ,MAAA,KAAAa,MAAA,CACnDZ,SAAS,gBAAcG,QAAQ,GAAAJ,MAAA,CACpC;IACD,SAAS,EAAEK;EACb,CAAC,EAAE,CAACM,cAAc,CAAC,CAAC;AACtB;AACAb,QAAQ,CAACgB,KAAK,GAAG,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,EAAE,UAAU,EAAE,SAAS,CAAC;AAC/EhB,QAAQ,CAACiB,WAAW,GAAG,UAAU;AACjCjB,QAAQ,CAACkB,YAAY,GAAG,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}