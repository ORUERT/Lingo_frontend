{"ast":null,"code":"import \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { watch, toRaw, computed, shallowRef } from 'vue';\n/**\n * This function will try to call requestIdleCallback if available to save performance.\n * No need `getLabel` here since already fetch on `rawLabeledValue`.\n */\nexport default (function (values) {\n  var cacheRef = shallowRef({\n    valueLabels: new Map()\n  });\n  var mergedValues = shallowRef();\n  watch(values, function () {\n    mergedValues.value = toRaw(values.value);\n  }, {\n    immediate: true\n  });\n  var newFilledValues = computed(function () {\n    var valueLabels = cacheRef.value.valueLabels;\n    var valueLabelsCache = new Map();\n    var filledValues = mergedValues.value.map(function (item) {\n      var _a;\n      var value = item.value;\n      var mergedLabel = (_a = item.label) !== null && _a !== void 0 ? _a : valueLabels.get(value);\n      // Save in cache\n      valueLabelsCache.set(value, mergedLabel);\n      return _extends(_extends({}, item), {\n        label: mergedLabel\n      });\n    });\n    cacheRef.value.valueLabels = valueLabelsCache;\n    return filledValues;\n  });\n  return [newFilledValues];\n});","map":{"version":3,"names":["_extends","watch","toRaw","computed","shallowRef","values","cacheRef","valueLabels","Map","mergedValues","value","immediate","newFilledValues","valueLabelsCache","filledValues","map","item","_a","mergedLabel","label","get","set"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-tree-select/hooks/useCache.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { watch, toRaw, computed, shallowRef } from 'vue';\n/**\n * This function will try to call requestIdleCallback if available to save performance.\n * No need `getLabel` here since already fetch on `rawLabeledValue`.\n */\nexport default (values => {\n  const cacheRef = shallowRef({\n    valueLabels: new Map()\n  });\n  const mergedValues = shallowRef();\n  watch(values, () => {\n    mergedValues.value = toRaw(values.value);\n  }, {\n    immediate: true\n  });\n  const newFilledValues = computed(() => {\n    const {\n      valueLabels\n    } = cacheRef.value;\n    const valueLabelsCache = new Map();\n    const filledValues = mergedValues.value.map(item => {\n      var _a;\n      const {\n        value\n      } = item;\n      const mergedLabel = (_a = item.label) !== null && _a !== void 0 ? _a : valueLabels.get(value);\n      // Save in cache\n      valueLabelsCache.set(value, mergedLabel);\n      return _extends(_extends({}, item), {\n        label: mergedLabel\n      });\n    });\n    cacheRef.value.valueLabels = valueLabelsCache;\n    return filledValues;\n  });\n  return [newFilledValues];\n});"],"mappings":";;;;;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,KAAK,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,KAAK;AACxD;AACA;AACA;AACA;AACA,gBAAgB,UAAAC,MAAM,EAAI;EACxB,IAAMC,QAAQ,GAAGF,UAAU,CAAC;IAC1BG,WAAW,EAAE,IAAIC,GAAG,CAAC;EACvB,CAAC,CAAC;EACF,IAAMC,YAAY,GAAGL,UAAU,CAAC,CAAC;EACjCH,KAAK,CAACI,MAAM,EAAE,YAAM;IAClBI,YAAY,CAACC,KAAK,GAAGR,KAAK,CAACG,MAAM,CAACK,KAAK,CAAC;EAC1C,CAAC,EAAE;IACDC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,IAAMC,eAAe,GAAGT,QAAQ,CAAC,YAAM;IACrC,IACEI,WAAW,GACTD,QAAQ,CAACI,KAAK,CADhBH,WAAW;IAEb,IAAMM,gBAAgB,GAAG,IAAIL,GAAG,CAAC,CAAC;IAClC,IAAMM,YAAY,GAAGL,YAAY,CAACC,KAAK,CAACK,GAAG,CAAC,UAAAC,IAAI,EAAI;MAClD,IAAIC,EAAE;MACN,IACEP,KAAK,GACHM,IAAI,CADNN,KAAK;MAEP,IAAMQ,WAAW,GAAG,CAACD,EAAE,GAAGD,IAAI,CAACG,KAAK,MAAM,IAAI,IAAIF,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGV,WAAW,CAACa,GAAG,CAACV,KAAK,CAAC;MAC7F;MACAG,gBAAgB,CAACQ,GAAG,CAACX,KAAK,EAAEQ,WAAW,CAAC;MACxC,OAAOlB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEgB,IAAI,CAAC,EAAE;QAClCG,KAAK,EAAED;MACT,CAAC,CAAC;IACJ,CAAC,CAAC;IACFZ,QAAQ,CAACI,KAAK,CAACH,WAAW,GAAGM,gBAAgB;IAC7C,OAAOC,YAAY;EACrB,CAAC,CAAC;EACF,OAAO,CAACF,eAAe,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}