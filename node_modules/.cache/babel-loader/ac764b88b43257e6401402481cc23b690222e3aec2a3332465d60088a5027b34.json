{"ast":null,"code":"import _typeof from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _toConsumableArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { useProvideKeysState, TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nimport { computed, defineComponent, onUnmounted, reactive, shallowRef, watch, watchEffect, nextTick, toRaw } from 'vue';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { treeProps } from './props';\nimport { warning } from '../vc-util/warning';\nimport KeyCode from '../_util/KeyCode';\nimport classNames from '../_util/classNames';\nimport pickAttrs from '../_util/pickAttrs';\nimport useMaxLevel from './useMaxLevel';\nvar MAX_RETRY_TIMES = 10;\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Tree',\n  inheritAttrs: false,\n  props: initDefaultProps(treeProps(), {\n    prefixCls: 'vc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    expandAction: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: [],\n    dropIndicatorRender: DropIndicator,\n    allowDrop: function allowDrop() {\n      return true;\n    }\n  }),\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      slots = _ref.slots,\n      expose = _ref.expose;\n    var destroyed = shallowRef(false);\n    var delayedDragEnterLogic = {};\n    var indent = shallowRef();\n    var selectedKeys = shallowRef([]);\n    var checkedKeys = shallowRef([]);\n    var halfCheckedKeys = shallowRef([]);\n    var loadedKeys = shallowRef([]);\n    var loadingKeys = shallowRef([]);\n    var expandedKeys = shallowRef([]);\n    var loadingRetryTimes = {};\n    var dragState = reactive({\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null\n    });\n    var treeData = shallowRef([]);\n    watch([function () {\n      return props.treeData;\n    }, function () {\n      return props.children;\n    }], function () {\n      treeData.value = props.treeData !== undefined ? toRaw(props.treeData).slice() : convertTreeToData(toRaw(props.children));\n    }, {\n      immediate: true,\n      deep: true\n    });\n    var keyEntities = shallowRef({});\n    var focused = shallowRef(false);\n    var activeKey = shallowRef(null);\n    var listChanging = shallowRef(false);\n    var fieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames);\n    });\n    var listRef = shallowRef();\n    var dragStartMousePosition = null;\n    var dragNode = null;\n    var currentMouseOverDroppableNodeKey = null;\n    var treeNodeRequiredProps = computed(function () {\n      return {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey: dragState.dragOverNodeKey,\n        dropPosition: dragState.dropPosition,\n        keyEntities: keyEntities.value\n      };\n    });\n    var expandedKeysSet = computed(function () {\n      return new Set(expandedKeys.value);\n    });\n    var selectedKeysSet = computed(function () {\n      return new Set(selectedKeys.value);\n    });\n    var loadedKeysSet = computed(function () {\n      return new Set(loadedKeys.value);\n    });\n    var loadingKeysSet = computed(function () {\n      return new Set(loadingKeys.value);\n    });\n    var checkedKeysSet = computed(function () {\n      return new Set(checkedKeys.value);\n    });\n    var halfCheckedKeysSet = computed(function () {\n      return new Set(halfCheckedKeys.value);\n    });\n    watchEffect(function () {\n      if (treeData.value) {\n        var entitiesMap = convertDataToEntities(treeData.value, {\n          fieldNames: fieldNames.value\n        });\n        keyEntities.value = _extends(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities);\n      }\n    });\n    var init = false; // 处理 defaultXxxx api, 仅仅首次有效\n    watch([function () {\n      return props.expandedKeys;\n    }, function () {\n      return props.autoExpandParent;\n    }, keyEntities],\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    function (_ref2, _ref3) {\n      var _ref6 = _slicedToArray(_ref2, 2),\n        _newKeys = _ref6[0],\n        newAutoExpandParent = _ref6[1];\n      var _ref7 = _slicedToArray(_ref3, 2),\n        _oldKeys = _ref7[0],\n        oldAutoExpandParent = _ref7[1];\n      var keys = expandedKeys.value;\n      // ================ expandedKeys =================\n      if (props.expandedKeys !== undefined || init && newAutoExpandParent !== oldAutoExpandParent) {\n        keys = props.autoExpandParent || !init && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities.value) : props.expandedKeys;\n      } else if (!init && props.defaultExpandAll) {\n        var cloneKeyEntities = _extends({}, keyEntities.value);\n        delete cloneKeyEntities[MOTION_KEY];\n        keys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!init && props.defaultExpandedKeys) {\n        keys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities.value) : props.defaultExpandedKeys;\n      }\n      if (keys) {\n        expandedKeys.value = keys;\n      }\n      init = true;\n    }, {\n      immediate: true\n    });\n    // ================ flattenNodes =================\n    var flattenNodes = shallowRef([]);\n    watchEffect(function () {\n      flattenNodes.value = flattenTreeData(treeData.value, expandedKeys.value, fieldNames.value);\n    });\n    // ================ selectedKeys =================\n    watchEffect(function () {\n      if (props.selectable) {\n        if (props.selectedKeys !== undefined) {\n          selectedKeys.value = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!init && props.defaultSelectedKeys) {\n          selectedKeys.value = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n    });\n    var _useMaxLevel = useMaxLevel(keyEntities),\n      maxLevel = _useMaxLevel.maxLevel,\n      levelEntities = _useMaxLevel.levelEntities;\n    // ================= checkedKeys =================\n    watchEffect(function () {\n      if (props.checkable) {\n        var checkedKeyEntity;\n        if (props.checkedKeys !== undefined) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!init && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData.value) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: checkedKeys.value,\n            halfCheckedKeys: halfCheckedKeys.value\n          };\n        }\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n            _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n            newCheckedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n            _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n            newHalfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(newCheckedKeys, true, keyEntities.value, maxLevel.value, levelEntities.value);\n            newCheckedKeys = conductKeys.checkedKeys;\n            newHalfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n          checkedKeys.value = newCheckedKeys;\n          halfCheckedKeys.value = newHalfCheckedKeys;\n        }\n      }\n    });\n    // ================= loadedKeys ==================\n    watchEffect(function () {\n      if (props.loadedKeys) {\n        loadedKeys.value = props.loadedKeys;\n      }\n    });\n    var resetDragState = function resetDragState() {\n      _extends(dragState, {\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    };\n    var scrollTo = function scrollTo(scroll) {\n      listRef.value.scrollTo(scroll);\n    };\n    watch(function () {\n      return props.activeKey;\n    }, function () {\n      if (props.activeKey !== undefined) {\n        activeKey.value = props.activeKey;\n      }\n    }, {\n      immediate: true\n    });\n    watch(activeKey, function (val) {\n      nextTick(function () {\n        if (val !== null) {\n          scrollTo({\n            key: val\n          });\n        }\n      });\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    // =========================== Expanded ===========================\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n    var setExpandedKeys = function setExpandedKeys(keys) {\n      if (props.expandedKeys === undefined) {\n        expandedKeys.value = keys;\n      }\n    };\n    var cleanDragState = function cleanDragState() {\n      if (dragState.draggingNodeKey !== null) {\n        _extends(dragState, {\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n      dragStartMousePosition = null;\n      currentMouseOverDroppableNodeKey = null;\n    };\n    // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n    var onNodeDragEnd = function onNodeDragEnd(event, node) {\n      var onDragend = props.onDragend;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      onDragend === null || onDragend === void 0 ? void 0 : onDragend({\n        event: event,\n        node: node.eventData\n      });\n      dragNode = null;\n    };\n    // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n    var onWindowDragEnd = function onWindowDragEnd(event) {\n      onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', onWindowDragEnd);\n    };\n    var onNodeDragStart = function onNodeDragStart(event, node) {\n      var onDragstart = props.onDragstart;\n      var eventKey = node.eventKey,\n        eventData = node.eventData;\n      dragNode = node;\n      dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys.value, eventKey);\n      dragState.draggingNodeKey = eventKey;\n      dragState.dragChildrenKeys = getDragChildrenKeys(eventKey, keyEntities.value);\n      indent.value = listRef.value.getIndentWidth();\n      setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', onWindowDragEnd);\n      if (onDragstart) {\n        onDragstart({\n          event: event,\n          node: eventData\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    var onNodeDragEnter = function onNodeDragEnter(event, node) {\n      var onDragenter = props.onDragenter,\n        onExpand = props.onExpand,\n        allowDrop = props.allowDrop,\n        direction = props.direction;\n      var pos = node.pos,\n        eventKey = node.eventKey;\n      // record the key of node which is latest entered, used in dragleave event.\n      if (currentMouseOverDroppableNodeKey !== eventKey) {\n        currentMouseOverDroppableNodeKey = eventKey;\n      }\n      if (!dragNode) {\n        resetDragState();\n        return;\n      }\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n        dropPosition = _calcDropPosition.dropPosition,\n        dropLevelOffset = _calcDropPosition.dropLevelOffset,\n        dropTargetKey = _calcDropPosition.dropTargetKey,\n        dropContainerKey = _calcDropPosition.dropContainerKey,\n        dropTargetPos = _calcDropPosition.dropTargetPos,\n        dropAllowed = _calcDropPosition.dropAllowed,\n        dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n      if (\n      // don't allow drop inside its children\n      dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 ||\n      // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        resetDragState();\n        return;\n      }\n      // Side effect for delay drag\n      if (!delayedDragEnterLogic) {\n        delayedDragEnterLogic = {};\n      }\n      Object.keys(delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(delayedDragEnterLogic[key]);\n      });\n      if (dragNode.eventKey !== node.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (dragState.draggingNodeKey === null) return;\n          var newExpandedKeys = expandedKeys.value.slice();\n          var entity = keyEntities.value[node.eventKey];\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys.value, node.eventKey);\n          }\n          setExpandedKeys(newExpandedKeys);\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: node.eventData,\n              expanded: true,\n              nativeEvent: event\n            });\n          }\n        }, 800);\n      }\n      // Skip if drag node is self\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        resetDragState();\n        return;\n      }\n      // Update drag over node and drag state\n      _extends(dragState, {\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n      if (onDragenter) {\n        onDragenter({\n          event: event,\n          node: node.eventData,\n          expandedKeys: expandedKeys.value\n        });\n      }\n    };\n    var onNodeDragOver = function onNodeDragOver(event, node) {\n      var onDragover = props.onDragover,\n        allowDrop = props.allowDrop,\n        direction = props.direction;\n      if (!dragNode) {\n        return;\n      }\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction),\n        dropPosition = _calcDropPosition2.dropPosition,\n        dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n        dropTargetKey = _calcDropPosition2.dropTargetKey,\n        dropContainerKey = _calcDropPosition2.dropContainerKey,\n        dropAllowed = _calcDropPosition2.dropAllowed,\n        dropTargetPos = _calcDropPosition2.dropTargetPos,\n        dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n      if (dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      }\n      // Update drag position\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(dragState.dropPosition === null && dragState.dropLevelOffset === null && dragState.dropTargetKey === null && dragState.dropContainerKey === null && dragState.dropTargetPos === null && dragState.dropAllowed === false && dragState.dragOverNodeKey === null)) {\n          resetDragState();\n        }\n      } else if (!(dropPosition === dragState.dropPosition && dropLevelOffset === dragState.dropLevelOffset && dropTargetKey === dragState.dropTargetKey && dropContainerKey === dragState.dropContainerKey && dropTargetPos === dragState.dropTargetPos && dropAllowed === dragState.dropAllowed && dragOverNodeKey === dragState.dragOverNodeKey)) {\n        _extends(dragState, {\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n      if (onDragover) {\n        onDragover({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n    var onNodeDragLeave = function onNodeDragLeave(event, node) {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (currentMouseOverDroppableNodeKey === node.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        resetDragState();\n        currentMouseOverDroppableNodeKey = null;\n      }\n      var onDragleave = props.onDragleave;\n      if (onDragleave) {\n        onDragleave({\n          event: event,\n          node: node.eventData\n        });\n      }\n    };\n    var onNodeDrop = function onNodeDrop(event, _node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _a;\n      var dragChildrenKeys = dragState.dragChildrenKeys,\n        dropPosition = dragState.dropPosition,\n        dropTargetKey = dragState.dropTargetKey,\n        dropTargetPos = dragState.dropTargetPos,\n        dropAllowed = dragState.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = props.onDrop;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      if (dropTargetKey === null) return;\n      var abstractDropNodeProps = _extends(_extends({}, getTreeNodeProps(dropTargetKey, toRaw(treeNodeRequiredProps.value))), {\n        active: ((_a = activeItem.value) === null || _a === void 0 ? void 0 : _a.key) === dropTargetKey,\n        data: keyEntities.value[dropTargetKey].node\n      });\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. Maybe this is a bug of ant-design-vue. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: dragNode ? dragNode.eventData : null,\n        dragNodesKeys: [dragNode.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n      dragNode = null;\n    };\n    var triggerExpandActionExpand = function triggerExpandActionExpand(e, treeNode) {\n      var expanded = treeNode.expanded,\n        key = treeNode.key;\n      var node = flattenNodes.value.filter(function (nodeItem) {\n        return nodeItem.key === key;\n      })[0];\n      var eventNode = convertNodePropsToEventData(_extends(_extends({}, getTreeNodeProps(key, treeNodeRequiredProps.value)), {\n        data: node.data\n      }));\n      setExpandedKeys(expanded ? arrDel(expandedKeys.value, key) : arrAdd(expandedKeys.value, key));\n      onNodeExpand(e, eventNode);\n    };\n    var onNodeClick = function onNodeClick(e, treeNode) {\n      var onClick = props.onClick,\n        expandAction = props.expandAction;\n      if (expandAction === 'click') {\n        triggerExpandActionExpand(e, treeNode);\n      }\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n    var onNodeDoubleClick = function onNodeDoubleClick(e, treeNode) {\n      var onDblclick = props.onDblclick,\n        expandAction = props.expandAction;\n      if (expandAction === 'doubleclick' || expandAction === 'dblclick') {\n        triggerExpandActionExpand(e, treeNode);\n      }\n      if (onDblclick) {\n        onDblclick(e, treeNode);\n      }\n    };\n    var onNodeSelect = function onNodeSelect(e, treeNode) {\n      var newSelectedKeys = selectedKeys.value;\n      var onSelect = props.onSelect,\n        multiple = props.multiple;\n      var selected = treeNode.selected;\n      var key = treeNode[fieldNames.value.key];\n      var targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        newSelectedKeys = arrDel(newSelectedKeys, key);\n      } else if (!multiple) {\n        newSelectedKeys = [key];\n      } else {\n        newSelectedKeys = arrAdd(newSelectedKeys, key);\n      }\n      // [Legacy] Not found related usage in doc or upper libs\n      var keyEntitiesValue = keyEntities.value;\n      var selectedNodes = newSelectedKeys.map(function (selectedKey) {\n        var entity = keyEntitiesValue[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n      if (props.selectedKeys === undefined) {\n        selectedKeys.value = newSelectedKeys;\n      }\n      if (onSelect) {\n        onSelect(newSelectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e\n        });\n      }\n    };\n    var onNodeCheck = function onNodeCheck(e, treeNode, checked) {\n      var checkStrictly = props.checkStrictly,\n        onCheck = props.onCheck;\n      var key = treeNode[fieldNames.value.key];\n      // Prepare trigger arguments\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e\n      };\n      var keyEntitiesValue = keyEntities.value;\n      if (checkStrictly) {\n        var newCheckedKeys = checked ? arrAdd(checkedKeys.value, key) : arrDel(checkedKeys.value, key);\n        var newHalfCheckedKeys = arrDel(halfCheckedKeys.value, key);\n        checkedObj = {\n          checked: newCheckedKeys,\n          halfChecked: newHalfCheckedKeys\n        };\n        eventObj.checkedNodes = newCheckedKeys.map(function (checkedKey) {\n          return keyEntitiesValue[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = newCheckedKeys;\n        }\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(checkedKeys.value), [key]), true, keyEntitiesValue, maxLevel.value, levelEntities.value),\n          _newCheckedKeys = _conductCheck.checkedKeys,\n          _newHalfCheckedKeys = _conductCheck.halfCheckedKeys;\n        // If remove, we do it again to correction\n        if (!checked) {\n          var keySet = new Set(_newCheckedKeys);\n          keySet[\"delete\"](key);\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _newHalfCheckedKeys\n          }, keyEntitiesValue, maxLevel.value, levelEntities.value);\n          _newCheckedKeys = _conductCheck2.checkedKeys;\n          _newHalfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n        checkedObj = _newCheckedKeys;\n        // [Legacy] This is used for vc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _newHalfCheckedKeys;\n        _newCheckedKeys.forEach(function (checkedKey) {\n          var entity = keyEntitiesValue[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n            pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = _newCheckedKeys;\n          halfCheckedKeys.value = _newHalfCheckedKeys;\n        }\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n    var onNodeLoad = function onNodeLoad(treeNode) {\n      var key = treeNode[fieldNames.value.key];\n      var loadPromise = new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        var loadData = props.loadData,\n          onLoad = props.onLoad;\n        if (!loadData || loadedKeysSet.value.has(key) || loadingKeysSet.value.has(key)) {\n          return null;\n        }\n        // Process load data\n        var promise = loadData(treeNode);\n        promise.then(function () {\n          var newLoadedKeys = arrAdd(loadedKeys.value, key);\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n          // https://github.com/ant-design/ant-design/issues/12464\n          if (onLoad) {\n            onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n          }\n          if (props.loadedKeys === undefined) {\n            loadedKeys.value = newLoadedKeys;\n          }\n          loadingKeys.value = newLoadingKeys;\n          resolve();\n        })[\"catch\"](function (e) {\n          var newLoadingKeys = arrDel(loadingKeys.value, key);\n          loadingKeys.value = newLoadingKeys;\n          // If exceed max retry times, we give up retry\n          loadingRetryTimes[key] = (loadingRetryTimes[key] || 0) + 1;\n          if (loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n            warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n            var newLoadedKeys = arrAdd(loadedKeys.value, key);\n            if (props.loadedKeys === undefined) {\n              loadedKeys.value = newLoadedKeys;\n            }\n            resolve();\n          }\n          reject(e);\n        });\n        loadingKeys.value = arrAdd(loadingKeys.value, key);\n      });\n      // Not care warning if we ignore this\n      loadPromise[\"catch\"](function () {});\n      return loadPromise;\n    };\n    var onNodeMouseEnter = function onNodeMouseEnter(event, node) {\n      var onMouseenter = props.onMouseenter;\n      if (onMouseenter) {\n        onMouseenter({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onNodeMouseLeave = function onNodeMouseLeave(event, node) {\n      var onMouseleave = props.onMouseleave;\n      if (onMouseleave) {\n        onMouseleave({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onNodeContextMenu = function onNodeContextMenu(event, node) {\n      var onRightClick = props.onRightClick;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n    var onFocus = function onFocus(e) {\n      var onFocus = props.onFocus;\n      focused.value = true;\n      if (onFocus) {\n        onFocus(e);\n      }\n    };\n    var onBlur = function onBlur(e) {\n      var onBlur = props.onBlur;\n      focused.value = false;\n      onActiveChange(null);\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n    var onNodeExpand = function onNodeExpand(e, treeNode) {\n      var newExpandedKeys = expandedKeys.value;\n      var onExpand = props.onExpand,\n        loadData = props.loadData;\n      var expanded = treeNode.expanded;\n      var key = treeNode[fieldNames.value.key];\n      // Do nothing when motion is in progress\n      if (listChanging.value) {\n        return;\n      }\n      // Update selected keys\n      var index = newExpandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        newExpandedKeys = arrAdd(newExpandedKeys, key);\n      } else {\n        newExpandedKeys = arrDel(newExpandedKeys, key);\n      }\n      setExpandedKeys(newExpandedKeys);\n      if (onExpand) {\n        onExpand(newExpandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e\n        });\n      }\n      // Async Load data\n      if (targetExpanded && loadData) {\n        var loadPromise = onNodeLoad(treeNode);\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            // const newFlattenTreeData = flattenTreeData(\n            //   treeData.value,\n            //   newExpandedKeys,\n            //   fieldNames.value,\n            // );\n            // flattenNodes.value = newFlattenTreeData;\n          })[\"catch\"](function (e) {\n            var expandedKeysToRestore = arrDel(expandedKeys.value, key);\n            setExpandedKeys(expandedKeysToRestore);\n            Promise.reject(e);\n          });\n        }\n      }\n    };\n    var onListChangeStart = function onListChangeStart() {\n      listChanging.value = true;\n    };\n    var onListChangeEnd = function onListChangeEnd() {\n      setTimeout(function () {\n        listChanging.value = false;\n      });\n    };\n    // =========================== Keyboard ===========================\n    var onActiveChange = function onActiveChange(newActiveKey) {\n      var onActiveChange = props.onActiveChange;\n      if (activeKey.value === newActiveKey) {\n        return;\n      }\n      if (props.activeKey !== undefined) {\n        activeKey.value = newActiveKey;\n      }\n      if (newActiveKey !== null) {\n        scrollTo({\n          key: newActiveKey\n        });\n      }\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n    var activeItem = computed(function () {\n      if (activeKey.value === null) {\n        return null;\n      }\n      return flattenNodes.value.find(function (_ref4) {\n        var key = _ref4.key;\n        return key === activeKey.value;\n      }) || null;\n    });\n    var offsetActiveKey = function offsetActiveKey(offset) {\n      var index = flattenNodes.value.findIndex(function (_ref5) {\n        var key = _ref5.key;\n        return key === activeKey.value;\n      });\n      // Align with index\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.value.length;\n      }\n      index = (index + offset + flattenNodes.value.length) % flattenNodes.value.length;\n      var item = flattenNodes.value[index];\n      if (item) {\n        var key = item.key;\n        onActiveChange(key);\n      } else {\n        onActiveChange(null);\n      }\n    };\n    var activeItemEventNode = computed(function () {\n      return convertNodePropsToEventData(_extends(_extends({}, getTreeNodeProps(activeKey.value, treeNodeRequiredProps.value)), {\n        data: activeItem.value.data,\n        active: true\n      }));\n    });\n    var onKeydown = function onKeydown(event) {\n      var onKeydown = props.onKeydown,\n        checkable = props.checkable,\n        selectable = props.selectable;\n      // >>>>>>>>>> Direction\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n        case KeyCode.DOWN:\n          {\n            offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      }\n      // >>>>>>>>>> Expand & Selection\n      var item = activeItem.value;\n      if (item && item.data) {\n        var expandable = item.data.isLeaf === false || !!(item.data.children || []).length;\n        var eventNode = activeItemEventNode.value;\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.parent) {\n                onActiveChange(item.parent.key);\n              }\n              event.preventDefault();\n              break;\n            }\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.children && item.children.length) {\n                onActiveChange(item.children[0].key);\n              }\n              event.preventDefault();\n              break;\n            }\n          // Selection\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                onNodeCheck({}, eventNode, !checkedKeysSet.value.has(activeKey.value));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                onNodeSelect({}, eventNode);\n              }\n              break;\n            }\n        }\n      }\n      if (onKeydown) {\n        onKeydown(event);\n      }\n    };\n    expose({\n      onNodeExpand: onNodeExpand,\n      scrollTo: scrollTo,\n      onKeydown: onKeydown,\n      selectedKeys: computed(function () {\n        return selectedKeys.value;\n      }),\n      checkedKeys: computed(function () {\n        return checkedKeys.value;\n      }),\n      halfCheckedKeys: computed(function () {\n        return halfCheckedKeys.value;\n      }),\n      loadedKeys: computed(function () {\n        return loadedKeys.value;\n      }),\n      loadingKeys: computed(function () {\n        return loadingKeys.value;\n      }),\n      expandedKeys: computed(function () {\n        return expandedKeys.value;\n      })\n    });\n    onUnmounted(function () {\n      window.removeEventListener('dragend', onWindowDragEnd);\n      destroyed.value = true;\n    });\n    useProvideKeysState({\n      expandedKeys: expandedKeys,\n      selectedKeys: selectedKeys,\n      loadedKeys: loadedKeys,\n      loadingKeys: loadingKeys,\n      checkedKeys: checkedKeys,\n      halfCheckedKeys: halfCheckedKeys,\n      expandedKeysSet: expandedKeysSet,\n      selectedKeysSet: selectedKeysSet,\n      loadedKeysSet: loadedKeysSet,\n      loadingKeysSet: loadingKeysSet,\n      checkedKeysSet: checkedKeysSet,\n      halfCheckedKeysSet: halfCheckedKeysSet,\n      flattenNodes: flattenNodes\n    });\n    return function () {\n      var draggingNodeKey = dragState.draggingNodeKey,\n        dropLevelOffset = dragState.dropLevelOffset,\n        dropContainerKey = dragState.dropContainerKey,\n        dropTargetKey = dragState.dropTargetKey,\n        dropPosition = dragState.dropPosition,\n        dragOverNodeKey = dragState.dragOverNodeKey;\n      var prefixCls = props.prefixCls,\n        showLine = props.showLine,\n        focusable = props.focusable,\n        _props$tabindex = props.tabindex,\n        tabindex = _props$tabindex === void 0 ? 0 : _props$tabindex,\n        selectable = props.selectable,\n        showIcon = props.showIcon,\n        _props$icon = props.icon,\n        icon = _props$icon === void 0 ? slots.icon : _props$icon,\n        switcherIcon = props.switcherIcon,\n        draggable = props.draggable,\n        checkable = props.checkable,\n        checkStrictly = props.checkStrictly,\n        disabled = props.disabled,\n        motion = props.motion,\n        loadData = props.loadData,\n        filterTreeNode = props.filterTreeNode,\n        height = props.height,\n        itemHeight = props.itemHeight,\n        virtual = props.virtual,\n        dropIndicatorRender = props.dropIndicatorRender,\n        onContextmenu = props.onContextmenu,\n        onScroll = props.onScroll,\n        direction = props.direction,\n        rootClassName = props.rootClassName,\n        rootStyle = props.rootStyle;\n      var className = attrs[\"class\"],\n        style = attrs.style;\n      var domProps = pickAttrs(_extends(_extends({}, props), attrs), {\n        aria: true,\n        data: true\n      });\n      // It's better move to hooks but we just simply keep here\n      var draggableConfig;\n      if (draggable) {\n        if (_typeof(draggable) === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      } else {\n        draggableConfig = false;\n      }\n      return _createVNode(TreeContext, {\n        \"value\": {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey: draggingNodeKey,\n          checkable: checkable,\n          customCheckable: slots.checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities.value,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          dragging: draggingNodeKey !== null,\n          indent: indent.value,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          onNodeClick: onNodeClick,\n          onNodeDoubleClick: onNodeDoubleClick,\n          onNodeExpand: onNodeExpand,\n          onNodeSelect: onNodeSelect,\n          onNodeCheck: onNodeCheck,\n          onNodeLoad: onNodeLoad,\n          onNodeMouseEnter: onNodeMouseEnter,\n          onNodeMouseLeave: onNodeMouseLeave,\n          onNodeContextMenu: onNodeContextMenu,\n          onNodeDragStart: onNodeDragStart,\n          onNodeDragEnter: onNodeDragEnter,\n          onNodeDragOver: onNodeDragOver,\n          onNodeDragLeave: onNodeDragLeave,\n          onNodeDragEnd: onNodeDragEnd,\n          onNodeDrop: onNodeDrop,\n          slots: slots\n        }\n      }, {\n        \"default\": function _default() {\n          var _classNames;\n          return [_createVNode(\"div\", {\n            \"role\": \"tree\",\n            \"class\": classNames(prefixCls, className, rootClassName, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused.value), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey.value !== null), _classNames)),\n            \"style\": rootStyle\n          }, [_createVNode(NodeList, _objectSpread({\n            \"ref\": listRef,\n            \"prefixCls\": prefixCls,\n            \"style\": style,\n            \"disabled\": disabled,\n            \"selectable\": selectable,\n            \"checkable\": !!checkable,\n            \"motion\": motion,\n            \"height\": height,\n            \"itemHeight\": itemHeight,\n            \"virtual\": virtual,\n            \"focusable\": focusable,\n            \"focused\": focused.value,\n            \"tabindex\": tabindex,\n            \"activeItem\": activeItem.value,\n            \"onFocus\": onFocus,\n            \"onBlur\": onBlur,\n            \"onKeydown\": onKeydown,\n            \"onActiveChange\": onActiveChange,\n            \"onListChangeStart\": onListChangeStart,\n            \"onListChangeEnd\": onListChangeEnd,\n            \"onContextmenu\": onContextmenu,\n            \"onScroll\": onScroll\n          }, domProps), null)])];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_extends","createVNode","_createVNode","useProvideKeysState","TreeContext","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","convertNodePropsToEventData","getTreeNodeProps","fillFieldNames","NodeList","MOTION_KEY","MotionEntity","conductCheck","DropIndicator","computed","defineComponent","onUnmounted","reactive","shallowRef","watch","watchEffect","nextTick","toRaw","initDefaultProps","treeProps","warning","KeyCode","classNames","pickAttrs","useMaxLevel","MAX_RETRY_TIMES","compatConfig","MODE","name","inheritAttrs","props","prefixCls","showLine","showIcon","selectable","multiple","checkable","disabled","checkStrictly","draggable","expandAction","defaultExpandParent","autoExpandParent","defaultExpandAll","defaultExpandedKeys","defaultCheckedKeys","defaultSelectedKeys","dropIndicatorRender","allowDrop","setup","_ref","attrs","slots","expose","destroyed","delayedDragEnterLogic","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","loadingRetryTimes","dragState","draggingNodeKey","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","children","value","undefined","slice","immediate","deep","keyEntities","focused","activeKey","listChanging","fieldNames","listRef","dragStartMousePosition","dragNode","currentMouseOverDroppableNodeKey","treeNodeRequiredProps","expandedKeysSet","selectedKeysSet","loadedKeysSet","loadingKeysSet","checkedKeysSet","halfCheckedKeysSet","Set","entitiesMap","_defineProperty","init","_ref2","_ref3","_ref6","_slicedToArray","_newKeys","newAutoExpandParent","_ref7","_oldKeys","oldAutoExpandParent","keys","cloneKeyEntities","Object","map","key","flattenNodes","_useMaxLevel","maxLevel","levelEntities","checkedKeyEntity","_checkedKeyEntity","_checkedKeyEntity$che","newCheckedKeys","_checkedKeyEntity$hal","newHalfCheckedKeys","conductKeys","resetDragState","scrollTo","scroll","val","flush","setExpandedKeys","cleanDragState","onNodeDragEnd","event","node","onDragend","eventData","onWindowDragEnd","window","removeEventListener","onNodeDragStart","onDragstart","eventKey","x","clientX","y","clientY","newExpandedKeys","getIndentWidth","addEventListener","onNodeDragEnter","onDragenter","onExpand","direction","pos","_calcDropPosition","indexOf","forEach","clearTimeout","setTimeout","entity","length","expanded","nativeEvent","onNodeDragOver","onDragover","_calcDropPosition2","onNodeDragLeave","currentTarget","contains","relatedTarget","onDragleave","onNodeDrop","_node","outsideTree","arguments","_a","onDrop","abstractDropNodeProps","active","activeItem","data","dropToChild","posArr","dropResult","dragNodesKeys","concat","dropToGap","Number","triggerExpandActionExpand","e","treeNode","filter","nodeItem","eventNode","onNodeExpand","onNodeClick","onClick","onNodeDoubleClick","onDblclick","onNodeSelect","newSelectedKeys","onSelect","selected","targetSelected","keyEntitiesValue","selectedNodes","selectedKey","onNodeCheck","checked","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_toConsumableArray","keySet","_conductCheck2","Array","from","checkedNodesPositions","push","onNodeLoad","loadPromise","Promise","resolve","reject","loadData","onLoad","has","promise","then","newLoadedKeys","newLoadingKeys","onNodeMouseEnter","onMouseenter","onNodeMouseLeave","onMouseleave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","index","targetExpanded","expandedKeysToRestore","onListChangeStart","onListChangeEnd","newActiveKey","find","_ref4","offsetActiveKey","offset","findIndex","_ref5","item","activeItemEventNode","onKeydown","which","UP","DOWN","expandable","isLeaf","LEFT","parent","RIGHT","ENTER","SPACE","disableCheckbox","focusable","_props$tabindex","tabindex","_props$icon","icon","switcherIcon","motion","filterTreeNode","height","itemHeight","virtual","onContextmenu","onScroll","rootClassName","rootStyle","className","style","domProps","aria","draggableConfig","_typeof","nodeDraggable","customCheckable","dragging","_default","_classNames"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-tree/Tree.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { useProvideKeysState, TreeContext } from './contextTypes';\nimport { getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, convertNodePropsToEventData, getTreeNodeProps, fillFieldNames } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\nimport { computed, defineComponent, onUnmounted, reactive, shallowRef, watch, watchEffect, nextTick, toRaw } from 'vue';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport { treeProps } from './props';\nimport { warning } from '../vc-util/warning';\nimport KeyCode from '../_util/KeyCode';\nimport classNames from '../_util/classNames';\nimport pickAttrs from '../_util/pickAttrs';\nimport useMaxLevel from './useMaxLevel';\nconst MAX_RETRY_TIMES = 10;\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Tree',\n  inheritAttrs: false,\n  props: initDefaultProps(treeProps(), {\n    prefixCls: 'vc-tree',\n    showLine: false,\n    showIcon: true,\n    selectable: true,\n    multiple: false,\n    checkable: false,\n    disabled: false,\n    checkStrictly: false,\n    draggable: false,\n    expandAction: false,\n    defaultExpandParent: true,\n    autoExpandParent: false,\n    defaultExpandAll: false,\n    defaultExpandedKeys: [],\n    defaultCheckedKeys: [],\n    defaultSelectedKeys: [],\n    dropIndicatorRender: DropIndicator,\n    allowDrop: () => true\n  }),\n  setup(props, _ref) {\n    let {\n      attrs,\n      slots,\n      expose\n    } = _ref;\n    const destroyed = shallowRef(false);\n    let delayedDragEnterLogic = {};\n    const indent = shallowRef();\n    const selectedKeys = shallowRef([]);\n    const checkedKeys = shallowRef([]);\n    const halfCheckedKeys = shallowRef([]);\n    const loadedKeys = shallowRef([]);\n    const loadingKeys = shallowRef([]);\n    const expandedKeys = shallowRef([]);\n    const loadingRetryTimes = {};\n    const dragState = reactive({\n      draggingNodeKey: null,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null\n    });\n    const treeData = shallowRef([]);\n    watch([() => props.treeData, () => props.children], () => {\n      treeData.value = props.treeData !== undefined ? toRaw(props.treeData).slice() : convertTreeToData(toRaw(props.children));\n    }, {\n      immediate: true,\n      deep: true\n    });\n    const keyEntities = shallowRef({});\n    const focused = shallowRef(false);\n    const activeKey = shallowRef(null);\n    const listChanging = shallowRef(false);\n    const fieldNames = computed(() => fillFieldNames(props.fieldNames));\n    const listRef = shallowRef();\n    let dragStartMousePosition = null;\n    let dragNode = null;\n    let currentMouseOverDroppableNodeKey = null;\n    const treeNodeRequiredProps = computed(() => {\n      return {\n        expandedKeysSet: expandedKeysSet.value,\n        selectedKeysSet: selectedKeysSet.value,\n        loadedKeysSet: loadedKeysSet.value,\n        loadingKeysSet: loadingKeysSet.value,\n        checkedKeysSet: checkedKeysSet.value,\n        halfCheckedKeysSet: halfCheckedKeysSet.value,\n        dragOverNodeKey: dragState.dragOverNodeKey,\n        dropPosition: dragState.dropPosition,\n        keyEntities: keyEntities.value\n      };\n    });\n    const expandedKeysSet = computed(() => {\n      return new Set(expandedKeys.value);\n    });\n    const selectedKeysSet = computed(() => {\n      return new Set(selectedKeys.value);\n    });\n    const loadedKeysSet = computed(() => {\n      return new Set(loadedKeys.value);\n    });\n    const loadingKeysSet = computed(() => {\n      return new Set(loadingKeys.value);\n    });\n    const checkedKeysSet = computed(() => {\n      return new Set(checkedKeys.value);\n    });\n    const halfCheckedKeysSet = computed(() => {\n      return new Set(halfCheckedKeys.value);\n    });\n    watchEffect(() => {\n      if (treeData.value) {\n        const entitiesMap = convertDataToEntities(treeData.value, {\n          fieldNames: fieldNames.value\n        });\n        keyEntities.value = _extends({\n          [MOTION_KEY]: MotionEntity\n        }, entitiesMap.keyEntities);\n      }\n    });\n    let init = false; // 处理 defaultXxxx api, 仅仅首次有效\n    watch([() => props.expandedKeys, () => props.autoExpandParent, keyEntities],\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    (_ref2, _ref3) => {\n      let [_newKeys, newAutoExpandParent] = _ref2;\n      let [_oldKeys, oldAutoExpandParent] = _ref3;\n      let keys = expandedKeys.value;\n      // ================ expandedKeys =================\n      if (props.expandedKeys !== undefined || init && newAutoExpandParent !== oldAutoExpandParent) {\n        keys = props.autoExpandParent || !init && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities.value) : props.expandedKeys;\n      } else if (!init && props.defaultExpandAll) {\n        const cloneKeyEntities = _extends({}, keyEntities.value);\n        delete cloneKeyEntities[MOTION_KEY];\n        keys = Object.keys(cloneKeyEntities).map(key => cloneKeyEntities[key].key);\n      } else if (!init && props.defaultExpandedKeys) {\n        keys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities.value) : props.defaultExpandedKeys;\n      }\n      if (keys) {\n        expandedKeys.value = keys;\n      }\n      init = true;\n    }, {\n      immediate: true\n    });\n    // ================ flattenNodes =================\n    const flattenNodes = shallowRef([]);\n    watchEffect(() => {\n      flattenNodes.value = flattenTreeData(treeData.value, expandedKeys.value, fieldNames.value);\n    });\n    // ================ selectedKeys =================\n    watchEffect(() => {\n      if (props.selectable) {\n        if (props.selectedKeys !== undefined) {\n          selectedKeys.value = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!init && props.defaultSelectedKeys) {\n          selectedKeys.value = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      }\n    });\n    const {\n      maxLevel,\n      levelEntities\n    } = useMaxLevel(keyEntities);\n    // ================= checkedKeys =================\n    watchEffect(() => {\n      if (props.checkable) {\n        let checkedKeyEntity;\n        if (props.checkedKeys !== undefined) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!init && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData.value) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: checkedKeys.value,\n            halfCheckedKeys: halfCheckedKeys.value\n          };\n        }\n        if (checkedKeyEntity) {\n          let {\n            checkedKeys: newCheckedKeys = [],\n            halfCheckedKeys: newHalfCheckedKeys = []\n          } = checkedKeyEntity;\n          if (!props.checkStrictly) {\n            const conductKeys = conductCheck(newCheckedKeys, true, keyEntities.value, maxLevel.value, levelEntities.value);\n            ({\n              checkedKeys: newCheckedKeys,\n              halfCheckedKeys: newHalfCheckedKeys\n            } = conductKeys);\n          }\n          checkedKeys.value = newCheckedKeys;\n          halfCheckedKeys.value = newHalfCheckedKeys;\n        }\n      }\n    });\n    // ================= loadedKeys ==================\n    watchEffect(() => {\n      if (props.loadedKeys) {\n        loadedKeys.value = props.loadedKeys;\n      }\n    });\n    const resetDragState = () => {\n      _extends(dragState, {\n        dragOverNodeKey: null,\n        dropPosition: null,\n        dropLevelOffset: null,\n        dropTargetKey: null,\n        dropContainerKey: null,\n        dropTargetPos: null,\n        dropAllowed: false\n      });\n    };\n    const scrollTo = scroll => {\n      listRef.value.scrollTo(scroll);\n    };\n    watch(() => props.activeKey, () => {\n      if (props.activeKey !== undefined) {\n        activeKey.value = props.activeKey;\n      }\n    }, {\n      immediate: true\n    });\n    watch(activeKey, val => {\n      nextTick(() => {\n        if (val !== null) {\n          scrollTo({\n            key: val\n          });\n        }\n      });\n    }, {\n      immediate: true,\n      flush: 'post'\n    });\n    // =========================== Expanded ===========================\n    /** Set uncontrolled `expandedKeys`. This will also auto update `flattenNodes`. */\n    const setExpandedKeys = keys => {\n      if (props.expandedKeys === undefined) {\n        expandedKeys.value = keys;\n      }\n    };\n    const cleanDragState = () => {\n      if (dragState.draggingNodeKey !== null) {\n        _extends(dragState, {\n          draggingNodeKey: null,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n      dragStartMousePosition = null;\n      currentMouseOverDroppableNodeKey = null;\n    };\n    // if onNodeDragEnd is called, onWindowDragEnd won't be called since stopPropagation() is called\n    const onNodeDragEnd = (event, node) => {\n      const {\n        onDragend\n      } = props;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      onDragend === null || onDragend === void 0 ? void 0 : onDragend({\n        event,\n        node: node.eventData\n      });\n      dragNode = null;\n    };\n    // since stopPropagation() is called in treeNode\n    // if onWindowDrag is called, whice means state is keeped, drag state should be cleared\n    const onWindowDragEnd = event => {\n      onNodeDragEnd(event, null, true);\n      window.removeEventListener('dragend', onWindowDragEnd);\n    };\n    const onNodeDragStart = (event, node) => {\n      const {\n        onDragstart\n      } = props;\n      const {\n        eventKey,\n        eventData\n      } = node;\n      dragNode = node;\n      dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      const newExpandedKeys = arrDel(expandedKeys.value, eventKey);\n      dragState.draggingNodeKey = eventKey;\n      dragState.dragChildrenKeys = getDragChildrenKeys(eventKey, keyEntities.value);\n      indent.value = listRef.value.getIndentWidth();\n      setExpandedKeys(newExpandedKeys);\n      window.addEventListener('dragend', onWindowDragEnd);\n      if (onDragstart) {\n        onDragstart({\n          event,\n          node: eventData\n        });\n      }\n    };\n    /**\n     * [Legacy] Select handler is smaller than node,\n     * so that this will trigger when drag enter node or select handler.\n     * This is a little tricky if customize css without padding.\n     * Better for use mouse move event to refresh drag state.\n     * But let's just keep it to avoid event trigger logic change.\n     */\n    const onNodeDragEnter = (event, node) => {\n      const {\n        onDragenter,\n        onExpand,\n        allowDrop,\n        direction\n      } = props;\n      const {\n        pos,\n        eventKey\n      } = node;\n      // record the key of node which is latest entered, used in dragleave event.\n      if (currentMouseOverDroppableNodeKey !== eventKey) {\n        currentMouseOverDroppableNodeKey = eventKey;\n      }\n      if (!dragNode) {\n        resetDragState();\n        return;\n      }\n      const {\n        dropPosition,\n        dropLevelOffset,\n        dropTargetKey,\n        dropContainerKey,\n        dropTargetPos,\n        dropAllowed,\n        dragOverNodeKey\n      } = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction);\n      if (\n      // don't allow drop inside its children\n      dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 ||\n      // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        resetDragState();\n        return;\n      }\n      // Side effect for delay drag\n      if (!delayedDragEnterLogic) {\n        delayedDragEnterLogic = {};\n      }\n      Object.keys(delayedDragEnterLogic).forEach(key => {\n        clearTimeout(delayedDragEnterLogic[key]);\n      });\n      if (dragNode.eventKey !== node.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        delayedDragEnterLogic[pos] = window.setTimeout(() => {\n          if (dragState.draggingNodeKey === null) return;\n          let newExpandedKeys = expandedKeys.value.slice();\n          const entity = keyEntities.value[node.eventKey];\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys.value, node.eventKey);\n          }\n          setExpandedKeys(newExpandedKeys);\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: node.eventData,\n              expanded: true,\n              nativeEvent: event\n            });\n          }\n        }, 800);\n      }\n      // Skip if drag node is self\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        resetDragState();\n        return;\n      }\n      // Update drag over node and drag state\n      _extends(dragState, {\n        dragOverNodeKey,\n        dropPosition,\n        dropLevelOffset,\n        dropTargetKey,\n        dropContainerKey,\n        dropTargetPos,\n        dropAllowed\n      });\n      if (onDragenter) {\n        onDragenter({\n          event,\n          node: node.eventData,\n          expandedKeys: expandedKeys.value\n        });\n      }\n    };\n    const onNodeDragOver = (event, node) => {\n      const {\n        onDragover,\n        allowDrop,\n        direction\n      } = props;\n      if (!dragNode) {\n        return;\n      }\n      const {\n        dropPosition,\n        dropLevelOffset,\n        dropTargetKey,\n        dropContainerKey,\n        dropAllowed,\n        dropTargetPos,\n        dragOverNodeKey\n      } = calcDropPosition(event, dragNode, node, indent.value, dragStartMousePosition, allowDrop, flattenNodes.value, keyEntities.value, expandedKeysSet.value, direction);\n      if (dragState.dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      }\n      // Update drag position\n      if (dragNode.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(dragState.dropPosition === null && dragState.dropLevelOffset === null && dragState.dropTargetKey === null && dragState.dropContainerKey === null && dragState.dropTargetPos === null && dragState.dropAllowed === false && dragState.dragOverNodeKey === null)) {\n          resetDragState();\n        }\n      } else if (!(dropPosition === dragState.dropPosition && dropLevelOffset === dragState.dropLevelOffset && dropTargetKey === dragState.dropTargetKey && dropContainerKey === dragState.dropContainerKey && dropTargetPos === dragState.dropTargetPos && dropAllowed === dragState.dropAllowed && dragOverNodeKey === dragState.dragOverNodeKey)) {\n        _extends(dragState, {\n          dropPosition,\n          dropLevelOffset,\n          dropTargetKey,\n          dropContainerKey,\n          dropTargetPos,\n          dropAllowed,\n          dragOverNodeKey\n        });\n      }\n      if (onDragover) {\n        onDragover({\n          event,\n          node: node.eventData\n        });\n      }\n    };\n    const onNodeDragLeave = (event, node) => {\n      // if it is outside the droppable area\n      // currentMouseOverDroppableNodeKey will be updated in dragenter event when into another droppable receiver.\n      if (currentMouseOverDroppableNodeKey === node.eventKey && !event.currentTarget.contains(event.relatedTarget)) {\n        resetDragState();\n        currentMouseOverDroppableNodeKey = null;\n      }\n      const {\n        onDragleave\n      } = props;\n      if (onDragleave) {\n        onDragleave({\n          event,\n          node: node.eventData\n        });\n      }\n    };\n    const onNodeDrop = function (event, _node) {\n      let outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _a;\n      const {\n        dragChildrenKeys,\n        dropPosition,\n        dropTargetKey,\n        dropTargetPos,\n        dropAllowed\n      } = dragState;\n      if (!dropAllowed) return;\n      const {\n        onDrop\n      } = props;\n      dragState.dragOverNodeKey = null;\n      cleanDragState();\n      if (dropTargetKey === null) return;\n      const abstractDropNodeProps = _extends(_extends({}, getTreeNodeProps(dropTargetKey, toRaw(treeNodeRequiredProps.value))), {\n        active: ((_a = activeItem.value) === null || _a === void 0 ? void 0 : _a.key) === dropTargetKey,\n        data: keyEntities.value[dropTargetKey].node\n      });\n      const dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. Maybe this is a bug of ant-design-vue. Please report an issue.\");\n      const posArr = posToArr(dropTargetPos);\n      const dropResult = {\n        event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: dragNode ? dragNode.eventData : null,\n        dragNodesKeys: [dragNode.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n      if (!outsideTree) {\n        onDrop === null || onDrop === void 0 ? void 0 : onDrop(dropResult);\n      }\n      dragNode = null;\n    };\n    const triggerExpandActionExpand = (e, treeNode) => {\n      const {\n        expanded,\n        key\n      } = treeNode;\n      const node = flattenNodes.value.filter(nodeItem => nodeItem.key === key)[0];\n      const eventNode = convertNodePropsToEventData(_extends(_extends({}, getTreeNodeProps(key, treeNodeRequiredProps.value)), {\n        data: node.data\n      }));\n      setExpandedKeys(expanded ? arrDel(expandedKeys.value, key) : arrAdd(expandedKeys.value, key));\n      onNodeExpand(e, eventNode);\n    };\n    const onNodeClick = (e, treeNode) => {\n      const {\n        onClick,\n        expandAction\n      } = props;\n      if (expandAction === 'click') {\n        triggerExpandActionExpand(e, treeNode);\n      }\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n    const onNodeDoubleClick = (e, treeNode) => {\n      const {\n        onDblclick,\n        expandAction\n      } = props;\n      if (expandAction === 'doubleclick' || expandAction === 'dblclick') {\n        triggerExpandActionExpand(e, treeNode);\n      }\n      if (onDblclick) {\n        onDblclick(e, treeNode);\n      }\n    };\n    const onNodeSelect = (e, treeNode) => {\n      let newSelectedKeys = selectedKeys.value;\n      const {\n        onSelect,\n        multiple\n      } = props;\n      const {\n        selected\n      } = treeNode;\n      const key = treeNode[fieldNames.value.key];\n      const targetSelected = !selected;\n      // Update selected keys\n      if (!targetSelected) {\n        newSelectedKeys = arrDel(newSelectedKeys, key);\n      } else if (!multiple) {\n        newSelectedKeys = [key];\n      } else {\n        newSelectedKeys = arrAdd(newSelectedKeys, key);\n      }\n      // [Legacy] Not found related usage in doc or upper libs\n      const keyEntitiesValue = keyEntities.value;\n      const selectedNodes = newSelectedKeys.map(selectedKey => {\n        const entity = keyEntitiesValue[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(node => node);\n      if (props.selectedKeys === undefined) {\n        selectedKeys.value = newSelectedKeys;\n      }\n      if (onSelect) {\n        onSelect(newSelectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes,\n          nativeEvent: e\n        });\n      }\n    };\n    const onNodeCheck = (e, treeNode, checked) => {\n      const {\n        checkStrictly,\n        onCheck\n      } = props;\n      const key = treeNode[fieldNames.value.key];\n      // Prepare trigger arguments\n      let checkedObj;\n      const eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked,\n        nativeEvent: e\n      };\n      const keyEntitiesValue = keyEntities.value;\n      if (checkStrictly) {\n        const newCheckedKeys = checked ? arrAdd(checkedKeys.value, key) : arrDel(checkedKeys.value, key);\n        const newHalfCheckedKeys = arrDel(halfCheckedKeys.value, key);\n        checkedObj = {\n          checked: newCheckedKeys,\n          halfChecked: newHalfCheckedKeys\n        };\n        eventObj.checkedNodes = newCheckedKeys.map(checkedKey => keyEntitiesValue[checkedKey]).filter(entity => entity).map(entity => entity.node);\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = newCheckedKeys;\n        }\n      } else {\n        // Always fill first\n        let {\n          checkedKeys: newCheckedKeys,\n          halfCheckedKeys: newHalfCheckedKeys\n        } = conductCheck([...checkedKeys.value, key], true, keyEntitiesValue, maxLevel.value, levelEntities.value);\n        // If remove, we do it again to correction\n        if (!checked) {\n          const keySet = new Set(newCheckedKeys);\n          keySet.delete(key);\n          ({\n            checkedKeys: newCheckedKeys,\n            halfCheckedKeys: newHalfCheckedKeys\n          } = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: newHalfCheckedKeys\n          }, keyEntitiesValue, maxLevel.value, levelEntities.value));\n        }\n        checkedObj = newCheckedKeys;\n        // [Legacy] This is used for vc-tree-select`\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = newHalfCheckedKeys;\n        newCheckedKeys.forEach(checkedKey => {\n          const entity = keyEntitiesValue[checkedKey];\n          if (!entity) return;\n          const {\n            node,\n            pos\n          } = entity;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node,\n            pos\n          });\n        });\n        if (props.checkedKeys === undefined) {\n          checkedKeys.value = newCheckedKeys;\n          halfCheckedKeys.value = newHalfCheckedKeys;\n        }\n      }\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n    const onNodeLoad = treeNode => {\n      const key = treeNode[fieldNames.value.key];\n      const loadPromise = new Promise((resolve, reject) => {\n        // We need to get the latest state of loading/loaded keys\n        const {\n          loadData,\n          onLoad\n        } = props;\n        if (!loadData || loadedKeysSet.value.has(key) || loadingKeysSet.value.has(key)) {\n          return null;\n        }\n        // Process load data\n        const promise = loadData(treeNode);\n        promise.then(() => {\n          const newLoadedKeys = arrAdd(loadedKeys.value, key);\n          const newLoadingKeys = arrDel(loadingKeys.value, key);\n          // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n          // https://github.com/ant-design/ant-design/issues/12464\n          if (onLoad) {\n            onLoad(newLoadedKeys, {\n              event: 'load',\n              node: treeNode\n            });\n          }\n          if (props.loadedKeys === undefined) {\n            loadedKeys.value = newLoadedKeys;\n          }\n          loadingKeys.value = newLoadingKeys;\n          resolve();\n        }).catch(e => {\n          const newLoadingKeys = arrDel(loadingKeys.value, key);\n          loadingKeys.value = newLoadingKeys;\n          // If exceed max retry times, we give up retry\n          loadingRetryTimes[key] = (loadingRetryTimes[key] || 0) + 1;\n          if (loadingRetryTimes[key] >= MAX_RETRY_TIMES) {\n            warning(false, 'Retry for `loadData` many times but still failed. No more retry.');\n            const newLoadedKeys = arrAdd(loadedKeys.value, key);\n            if (props.loadedKeys === undefined) {\n              loadedKeys.value = newLoadedKeys;\n            }\n            resolve();\n          }\n          reject(e);\n        });\n        loadingKeys.value = arrAdd(loadingKeys.value, key);\n      });\n      // Not care warning if we ignore this\n      loadPromise.catch(() => {});\n      return loadPromise;\n    };\n    const onNodeMouseEnter = (event, node) => {\n      const {\n        onMouseenter\n      } = props;\n      if (onMouseenter) {\n        onMouseenter({\n          event,\n          node\n        });\n      }\n    };\n    const onNodeMouseLeave = (event, node) => {\n      const {\n        onMouseleave\n      } = props;\n      if (onMouseleave) {\n        onMouseleave({\n          event,\n          node\n        });\n      }\n    };\n    const onNodeContextMenu = (event, node) => {\n      const {\n        onRightClick\n      } = props;\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event,\n          node\n        });\n      }\n    };\n    const onFocus = e => {\n      const {\n        onFocus\n      } = props;\n      focused.value = true;\n      if (onFocus) {\n        onFocus(e);\n      }\n    };\n    const onBlur = e => {\n      const {\n        onBlur\n      } = props;\n      focused.value = false;\n      onActiveChange(null);\n      if (onBlur) {\n        onBlur(e);\n      }\n    };\n    const onNodeExpand = (e, treeNode) => {\n      let newExpandedKeys = expandedKeys.value;\n      const {\n        onExpand,\n        loadData\n      } = props;\n      const {\n        expanded\n      } = treeNode;\n      const key = treeNode[fieldNames.value.key];\n      // Do nothing when motion is in progress\n      if (listChanging.value) {\n        return;\n      }\n      // Update selected keys\n      const index = newExpandedKeys.indexOf(key);\n      const targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n      if (targetExpanded) {\n        newExpandedKeys = arrAdd(newExpandedKeys, key);\n      } else {\n        newExpandedKeys = arrDel(newExpandedKeys, key);\n      }\n      setExpandedKeys(newExpandedKeys);\n      if (onExpand) {\n        onExpand(newExpandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e\n        });\n      }\n      // Async Load data\n      if (targetExpanded && loadData) {\n        const loadPromise = onNodeLoad(treeNode);\n        if (loadPromise) {\n          loadPromise.then(() => {\n            // [Legacy] Refresh logic\n            // const newFlattenTreeData = flattenTreeData(\n            //   treeData.value,\n            //   newExpandedKeys,\n            //   fieldNames.value,\n            // );\n            // flattenNodes.value = newFlattenTreeData;\n          }).catch(e => {\n            const expandedKeysToRestore = arrDel(expandedKeys.value, key);\n            setExpandedKeys(expandedKeysToRestore);\n            Promise.reject(e);\n          });\n        }\n      }\n    };\n    const onListChangeStart = () => {\n      listChanging.value = true;\n    };\n    const onListChangeEnd = () => {\n      setTimeout(() => {\n        listChanging.value = false;\n      });\n    };\n    // =========================== Keyboard ===========================\n    const onActiveChange = newActiveKey => {\n      const {\n        onActiveChange\n      } = props;\n      if (activeKey.value === newActiveKey) {\n        return;\n      }\n      if (props.activeKey !== undefined) {\n        activeKey.value = newActiveKey;\n      }\n      if (newActiveKey !== null) {\n        scrollTo({\n          key: newActiveKey\n        });\n      }\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n    const activeItem = computed(() => {\n      if (activeKey.value === null) {\n        return null;\n      }\n      return flattenNodes.value.find(_ref4 => {\n        let {\n          key\n        } = _ref4;\n        return key === activeKey.value;\n      }) || null;\n    });\n    const offsetActiveKey = offset => {\n      let index = flattenNodes.value.findIndex(_ref5 => {\n        let {\n          key\n        } = _ref5;\n        return key === activeKey.value;\n      });\n      // Align with index\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.value.length;\n      }\n      index = (index + offset + flattenNodes.value.length) % flattenNodes.value.length;\n      const item = flattenNodes.value[index];\n      if (item) {\n        const {\n          key\n        } = item;\n        onActiveChange(key);\n      } else {\n        onActiveChange(null);\n      }\n    };\n    const activeItemEventNode = computed(() => {\n      return convertNodePropsToEventData(_extends(_extends({}, getTreeNodeProps(activeKey.value, treeNodeRequiredProps.value)), {\n        data: activeItem.value.data,\n        active: true\n      }));\n    });\n    const onKeydown = event => {\n      const {\n        onKeydown,\n        checkable,\n        selectable\n      } = props;\n      // >>>>>>>>>> Direction\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            offsetActiveKey(-1);\n            event.preventDefault();\n            break;\n          }\n        case KeyCode.DOWN:\n          {\n            offsetActiveKey(1);\n            event.preventDefault();\n            break;\n          }\n      }\n      // >>>>>>>>>> Expand & Selection\n      const item = activeItem.value;\n      if (item && item.data) {\n        const expandable = item.data.isLeaf === false || !!(item.data.children || []).length;\n        const eventNode = activeItemEventNode.value;\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.parent) {\n                onActiveChange(item.parent.key);\n              }\n              event.preventDefault();\n              break;\n            }\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeysSet.value.has(activeKey.value)) {\n                onNodeExpand({}, eventNode);\n              } else if (item.children && item.children.length) {\n                onActiveChange(item.children[0].key);\n              }\n              event.preventDefault();\n              break;\n            }\n          // Selection\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                onNodeCheck({}, eventNode, !checkedKeysSet.value.has(activeKey.value));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                onNodeSelect({}, eventNode);\n              }\n              break;\n            }\n        }\n      }\n      if (onKeydown) {\n        onKeydown(event);\n      }\n    };\n    expose({\n      onNodeExpand,\n      scrollTo,\n      onKeydown,\n      selectedKeys: computed(() => selectedKeys.value),\n      checkedKeys: computed(() => checkedKeys.value),\n      halfCheckedKeys: computed(() => halfCheckedKeys.value),\n      loadedKeys: computed(() => loadedKeys.value),\n      loadingKeys: computed(() => loadingKeys.value),\n      expandedKeys: computed(() => expandedKeys.value)\n    });\n    onUnmounted(() => {\n      window.removeEventListener('dragend', onWindowDragEnd);\n      destroyed.value = true;\n    });\n    useProvideKeysState({\n      expandedKeys,\n      selectedKeys,\n      loadedKeys,\n      loadingKeys,\n      checkedKeys,\n      halfCheckedKeys,\n      expandedKeysSet,\n      selectedKeysSet,\n      loadedKeysSet,\n      loadingKeysSet,\n      checkedKeysSet,\n      halfCheckedKeysSet,\n      flattenNodes\n    });\n    return () => {\n      const {\n        // focused,\n        // flattenNodes,\n        // keyEntities,\n        draggingNodeKey,\n        // activeKey,\n        dropLevelOffset,\n        dropContainerKey,\n        dropTargetKey,\n        dropPosition,\n        dragOverNodeKey\n        // indent,\n      } = dragState;\n      const {\n        prefixCls,\n        showLine,\n        focusable,\n        tabindex = 0,\n        selectable,\n        showIcon,\n        icon = slots.icon,\n        switcherIcon,\n        draggable,\n        checkable,\n        checkStrictly,\n        disabled,\n        motion,\n        loadData,\n        filterTreeNode,\n        height,\n        itemHeight,\n        virtual,\n        dropIndicatorRender,\n        onContextmenu,\n        onScroll,\n        direction,\n        rootClassName,\n        rootStyle\n      } = props;\n      const {\n        class: className,\n        style\n      } = attrs;\n      const domProps = pickAttrs(_extends(_extends({}, props), attrs), {\n        aria: true,\n        data: true\n      });\n      // It's better move to hooks but we just simply keep here\n      let draggableConfig;\n      if (draggable) {\n        if (typeof draggable === 'object') {\n          draggableConfig = draggable;\n        } else if (typeof draggable === 'function') {\n          draggableConfig = {\n            nodeDraggable: draggable\n          };\n        } else {\n          draggableConfig = {};\n        }\n      } else {\n        draggableConfig = false;\n      }\n      return _createVNode(TreeContext, {\n        \"value\": {\n          prefixCls,\n          selectable,\n          showIcon,\n          icon,\n          switcherIcon,\n          draggable: draggableConfig,\n          draggingNodeKey,\n          checkable,\n          customCheckable: slots.checkable,\n          checkStrictly,\n          disabled,\n          keyEntities: keyEntities.value,\n          dropLevelOffset,\n          dropContainerKey,\n          dropTargetKey,\n          dropPosition,\n          dragOverNodeKey,\n          dragging: draggingNodeKey !== null,\n          indent: indent.value,\n          direction,\n          dropIndicatorRender,\n          loadData,\n          filterTreeNode,\n          onNodeClick,\n          onNodeDoubleClick,\n          onNodeExpand,\n          onNodeSelect,\n          onNodeCheck,\n          onNodeLoad,\n          onNodeMouseEnter,\n          onNodeMouseLeave,\n          onNodeContextMenu,\n          onNodeDragStart,\n          onNodeDragEnter,\n          onNodeDragOver,\n          onNodeDragLeave,\n          onNodeDragEnd,\n          onNodeDrop,\n          slots\n        }\n      }, {\n        default: () => [_createVNode(\"div\", {\n          \"role\": \"tree\",\n          \"class\": classNames(prefixCls, className, rootClassName, {\n            [`${prefixCls}-show-line`]: showLine,\n            [`${prefixCls}-focused`]: focused.value,\n            [`${prefixCls}-active-focused`]: activeKey.value !== null\n          }),\n          \"style\": rootStyle\n        }, [_createVNode(NodeList, _objectSpread({\n          \"ref\": listRef,\n          \"prefixCls\": prefixCls,\n          \"style\": style,\n          \"disabled\": disabled,\n          \"selectable\": selectable,\n          \"checkable\": !!checkable,\n          \"motion\": motion,\n          \"height\": height,\n          \"itemHeight\": itemHeight,\n          \"virtual\": virtual,\n          \"focusable\": focusable,\n          \"focused\": focused.value,\n          \"tabindex\": tabindex,\n          \"activeItem\": activeItem.value,\n          \"onFocus\": onFocus,\n          \"onBlur\": onBlur,\n          \"onKeydown\": onKeydown,\n          \"onActiveChange\": onActiveChange,\n          \"onListChangeStart\": onListChangeStart,\n          \"onListChangeEnd\": onListChangeEnd,\n          \"onContextmenu\": onContextmenu,\n          \"onScroll\": onScroll\n        }, domProps), null)])]\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}