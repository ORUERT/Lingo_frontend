{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport { computed, inject, provide } from 'vue';\nimport { objectType } from '../_util/type';\nexport var defaultIconPrefixCls = 'anticon';\nexport var GlobalFormContextKey = Symbol('GlobalFormContextKey');\nexport var useProvideGlobalForm = function useProvideGlobalForm(state) {\n  provide(GlobalFormContextKey, state);\n};\nexport var useInjectGlobalForm = function useInjectGlobalForm() {\n  return inject(GlobalFormContextKey, {\n    validateMessages: computed(function () {\n      return undefined;\n    })\n  });\n};\nexport var GlobalConfigContextKey = Symbol('GlobalConfigContextKey');\nexport var configProviderProps = function configProviderProps() {\n  return {\n    iconPrefixCls: String,\n    getTargetContainer: {\n      type: Function\n    },\n    getPopupContainer: {\n      type: Function\n    },\n    prefixCls: String,\n    getPrefixCls: {\n      type: Function\n    },\n    renderEmpty: {\n      type: Function\n    },\n    transformCellText: {\n      type: Function\n    },\n    csp: objectType(),\n    input: objectType(),\n    autoInsertSpaceInButton: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    locale: objectType(),\n    pageHeader: objectType(),\n    componentSize: {\n      type: String\n    },\n    componentDisabled: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    direction: {\n      type: String\n    },\n    space: objectType(),\n    virtual: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    dropdownMatchSelectWidth: {\n      type: [Number, Boolean],\n      \"default\": true\n    },\n    form: objectType(),\n    pagination: objectType(),\n    theme: objectType(),\n    select: objectType()\n  };\n};\nexport var configProviderKey = Symbol('configProvider');\nexport var defaultConfigProvider = {\n  getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n    if (customizePrefixCls) return customizePrefixCls;\n    return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n  },\n  iconPrefixCls: computed(function () {\n    return defaultIconPrefixCls;\n  }),\n  getPopupContainer: computed(function () {\n    return function () {\n      return document.body;\n    };\n  })\n};\nexport var useConfigContextInject = function useConfigContextInject() {\n  return inject(configProviderKey, defaultConfigProvider);\n};\nexport var useConfigContextProvider = function useConfigContextProvider(props) {\n  return provide(configProviderKey, props);\n};","map":{"version":3,"names":["computed","inject","provide","objectType","defaultIconPrefixCls","GlobalFormContextKey","Symbol","useProvideGlobalForm","state","useInjectGlobalForm","validateMessages","undefined","GlobalConfigContextKey","configProviderProps","iconPrefixCls","String","getTargetContainer","type","Function","getPopupContainer","prefixCls","getPrefixCls","renderEmpty","transformCellText","csp","input","autoInsertSpaceInButton","Boolean","locale","pageHeader","componentSize","componentDisabled","direction","space","virtual","dropdownMatchSelectWidth","Number","form","pagination","theme","select","configProviderKey","defaultConfigProvider","suffixCls","customizePrefixCls","concat","document","body","useConfigContextInject","useConfigContextProvider","props"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/config-provider/context.js"],"sourcesContent":["import { computed, inject, provide } from 'vue';\nimport { objectType } from '../_util/type';\nexport const defaultIconPrefixCls = 'anticon';\nexport const GlobalFormContextKey = Symbol('GlobalFormContextKey');\nexport const useProvideGlobalForm = state => {\n  provide(GlobalFormContextKey, state);\n};\nexport const useInjectGlobalForm = () => {\n  return inject(GlobalFormContextKey, {\n    validateMessages: computed(() => undefined)\n  });\n};\nexport const GlobalConfigContextKey = Symbol('GlobalConfigContextKey');\nexport const configProviderProps = () => ({\n  iconPrefixCls: String,\n  getTargetContainer: {\n    type: Function\n  },\n  getPopupContainer: {\n    type: Function\n  },\n  prefixCls: String,\n  getPrefixCls: {\n    type: Function\n  },\n  renderEmpty: {\n    type: Function\n  },\n  transformCellText: {\n    type: Function\n  },\n  csp: objectType(),\n  input: objectType(),\n  autoInsertSpaceInButton: {\n    type: Boolean,\n    default: undefined\n  },\n  locale: objectType(),\n  pageHeader: objectType(),\n  componentSize: {\n    type: String\n  },\n  componentDisabled: {\n    type: Boolean,\n    default: undefined\n  },\n  direction: {\n    type: String\n  },\n  space: objectType(),\n  virtual: {\n    type: Boolean,\n    default: undefined\n  },\n  dropdownMatchSelectWidth: {\n    type: [Number, Boolean],\n    default: true\n  },\n  form: objectType(),\n  pagination: objectType(),\n  theme: objectType(),\n  select: objectType()\n});\nexport const configProviderKey = Symbol('configProvider');\nexport const defaultConfigProvider = {\n  getPrefixCls: (suffixCls, customizePrefixCls) => {\n    if (customizePrefixCls) return customizePrefixCls;\n    return suffixCls ? `ant-${suffixCls}` : 'ant';\n  },\n  iconPrefixCls: computed(() => defaultIconPrefixCls),\n  getPopupContainer: computed(() => () => document.body)\n};\nexport const useConfigContextInject = () => {\n  return inject(configProviderKey, defaultConfigProvider);\n};\nexport const useConfigContextProvider = props => {\n  return provide(configProviderKey, props);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}