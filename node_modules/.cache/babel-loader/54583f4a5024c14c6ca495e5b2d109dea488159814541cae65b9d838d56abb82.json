{"ast":null,"code":"import _toConsumableArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _typeof from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.every.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport { toPathOptions } from '../utils/treeUtil';\nimport { toPathKey } from '../utils/commonUtil';\nimport { computed } from 'vue';\nimport { isValidElement } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nexport default (function (rawValues, options, fieldNames, multiple, displayRender) {\n  return computed(function () {\n    var mergedDisplayRender = displayRender.value ||\n    // Default displayRender\n    function (_ref) {\n      var labels = _ref.labels;\n      var mergedLabels = multiple.value ? labels.slice(-1) : labels;\n      var SPLIT = ' / ';\n      if (mergedLabels.every(function (label) {\n        return ['string', 'number'].includes(_typeof(label));\n      })) {\n        return mergedLabels.join(SPLIT);\n      }\n      // If exist non-string value, use VueNode instead\n      return mergedLabels.reduce(function (list, label, index) {\n        var keyedLabel = isValidElement(label) ? cloneElement(label, {\n          key: index\n        }) : label;\n        if (index === 0) {\n          return [keyedLabel];\n        }\n        return [].concat(_toConsumableArray(list), [SPLIT, keyedLabel]);\n      }, []);\n    };\n    return rawValues.value.map(function (valueCells) {\n      var valueOptions = toPathOptions(valueCells, options.value, fieldNames.value);\n      var label = mergedDisplayRender({\n        labels: valueOptions.map(function (_ref2) {\n          var option = _ref2.option,\n            value = _ref2.value;\n          var _a;\n          return (_a = option === null || option === void 0 ? void 0 : option[fieldNames.value.label]) !== null && _a !== void 0 ? _a : value;\n        }),\n        selectedOptions: valueOptions.map(function (_ref3) {\n          var option = _ref3.option;\n          return option;\n        })\n      });\n      var value = toPathKey(valueCells);\n      return {\n        label: label,\n        value: value,\n        key: value,\n        valueCells: valueCells\n      };\n    });\n  });\n});","map":{"version":3,"names":["toPathOptions","toPathKey","computed","isValidElement","cloneElement","rawValues","options","fieldNames","multiple","displayRender","mergedDisplayRender","value","_ref","labels","mergedLabels","slice","SPLIT","every","label","includes","_typeof","join","reduce","list","index","keyedLabel","key","concat","_toConsumableArray","map","valueCells","valueOptions","_ref2","option","_a","selectedOptions","_ref3"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-cascader/hooks/useDisplayValues.js"],"sourcesContent":["import { toPathOptions } from '../utils/treeUtil';\nimport { toPathKey } from '../utils/commonUtil';\nimport { computed } from 'vue';\nimport { isValidElement } from '../../_util/props-util';\nimport { cloneElement } from '../../_util/vnode';\nexport default ((rawValues, options, fieldNames, multiple, displayRender) => {\n  return computed(() => {\n    const mergedDisplayRender = displayRender.value || (\n    // Default displayRender\n    _ref => {\n      let {\n        labels\n      } = _ref;\n      const mergedLabels = multiple.value ? labels.slice(-1) : labels;\n      const SPLIT = ' / ';\n      if (mergedLabels.every(label => ['string', 'number'].includes(typeof label))) {\n        return mergedLabels.join(SPLIT);\n      }\n      // If exist non-string value, use VueNode instead\n      return mergedLabels.reduce((list, label, index) => {\n        const keyedLabel = isValidElement(label) ? cloneElement(label, {\n          key: index\n        }) : label;\n        if (index === 0) {\n          return [keyedLabel];\n        }\n        return [...list, SPLIT, keyedLabel];\n      }, []);\n    });\n    return rawValues.value.map(valueCells => {\n      const valueOptions = toPathOptions(valueCells, options.value, fieldNames.value);\n      const label = mergedDisplayRender({\n        labels: valueOptions.map(_ref2 => {\n          let {\n            option,\n            value\n          } = _ref2;\n          var _a;\n          return (_a = option === null || option === void 0 ? void 0 : option[fieldNames.value.label]) !== null && _a !== void 0 ? _a : value;\n        }),\n        selectedOptions: valueOptions.map(_ref3 => {\n          let {\n            option\n          } = _ref3;\n          return option;\n        })\n      });\n      const value = toPathKey(valueCells);\n      return {\n        label,\n        value,\n        key: value,\n        valueCells\n      };\n    });\n  });\n});"],"mappings":";;;;;;;;;;AAAA,SAASA,aAAa,QAAQ,mBAAmB;AACjD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,QAAQ,QAAQ,KAAK;AAC9B,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,YAAY,QAAQ,mBAAmB;AAChD,gBAAgB,UAACC,SAAS,EAAEC,OAAO,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAK;EAC3E,OAAOP,QAAQ,CAAC,YAAM;IACpB,IAAMQ,mBAAmB,GAAGD,aAAa,CAACE,KAAK;IAC/C;IACA,UAAAC,IAAI,EAAI;MACN,IACEC,MAAM,GACJD,IAAI,CADNC,MAAM;MAER,IAAMC,YAAY,GAAGN,QAAQ,CAACG,KAAK,GAAGE,MAAM,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGF,MAAM;MAC/D,IAAMG,KAAK,GAAG,KAAK;MACnB,IAAIF,YAAY,CAACG,KAAK,CAAC,UAAAC,KAAK;QAAA,OAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAAC,OAAA,CAAQF,KAAK,EAAC;MAAA,EAAC,EAAE;QAC5E,OAAOJ,YAAY,CAACO,IAAI,CAACL,KAAK,CAAC;MACjC;MACA;MACA,OAAOF,YAAY,CAACQ,MAAM,CAAC,UAACC,IAAI,EAAEL,KAAK,EAAEM,KAAK,EAAK;QACjD,IAAMC,UAAU,GAAGtB,cAAc,CAACe,KAAK,CAAC,GAAGd,YAAY,CAACc,KAAK,EAAE;UAC7DQ,GAAG,EAAEF;QACP,CAAC,CAAC,GAAGN,KAAK;QACV,IAAIM,KAAK,KAAK,CAAC,EAAE;UACf,OAAO,CAACC,UAAU,CAAC;QACrB;QACA,UAAAE,MAAA,CAAAC,kBAAA,CAAWL,IAAI,IAAEP,KAAK,EAAES,UAAU;MACpC,CAAC,EAAE,EAAE,CAAC;IACR,CAAE;IACF,OAAOpB,SAAS,CAACM,KAAK,CAACkB,GAAG,CAAC,UAAAC,UAAU,EAAI;MACvC,IAAMC,YAAY,GAAG/B,aAAa,CAAC8B,UAAU,EAAExB,OAAO,CAACK,KAAK,EAAEJ,UAAU,CAACI,KAAK,CAAC;MAC/E,IAAMO,KAAK,GAAGR,mBAAmB,CAAC;QAChCG,MAAM,EAAEkB,YAAY,CAACF,GAAG,CAAC,UAAAG,KAAK,EAAI;UAChC,IACEC,MAAM,GAEJD,KAAK,CAFPC,MAAM;YACNtB,KAAK,GACHqB,KAAK,CADPrB,KAAK;UAEP,IAAIuB,EAAE;UACN,OAAO,CAACA,EAAE,GAAGD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC1B,UAAU,CAACI,KAAK,CAACO,KAAK,CAAC,MAAM,IAAI,IAAIgB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGvB,KAAK;QACrI,CAAC,CAAC;QACFwB,eAAe,EAAEJ,YAAY,CAACF,GAAG,CAAC,UAAAO,KAAK,EAAI;UACzC,IACEH,MAAM,GACJG,KAAK,CADPH,MAAM;UAER,OAAOA,MAAM;QACf,CAAC;MACH,CAAC,CAAC;MACF,IAAMtB,KAAK,GAAGV,SAAS,CAAC6B,UAAU,CAAC;MACnC,OAAO;QACLZ,KAAK,EAALA,KAAK;QACLP,KAAK,EAALA,KAAK;QACLe,GAAG,EAAEf,KAAK;QACVmB,UAAU,EAAVA;MACF,CAAC;IACH,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}