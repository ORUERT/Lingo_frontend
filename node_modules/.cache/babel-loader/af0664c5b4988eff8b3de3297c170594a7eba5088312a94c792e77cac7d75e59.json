{"ast":null,"code":"import \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { computed, defineComponent, shallowRef, watch } from 'vue';\nimport ResizeObserver from '../vc-resize-observer';\nimport classNames from '../_util/classNames';\nimport PropTypes from '../_util/vue-types';\nimport { OverflowContextProvider } from './context';\nimport Item from './Item';\nimport RawItem from './RawItem';\nvar RESPONSIVE = 'responsive';\nvar INVALIDATE = 'invalidate';\nfunction defaultRenderRest(omittedItems) {\n  return \"+ \".concat(omittedItems.length, \" ...\");\n}\nvar overflowProps = function overflowProps() {\n  return {\n    id: String,\n    prefixCls: String,\n    data: Array,\n    itemKey: [String, Number, Function],\n    /** Used for `responsive`. It will limit render node to avoid perf issue */\n    itemWidth: {\n      type: Number,\n      \"default\": 10\n    },\n    renderItem: Function,\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawItem: Function,\n    maxCount: [Number, String],\n    renderRest: Function,\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawRest: Function,\n    suffix: PropTypes.any,\n    component: String,\n    itemComponent: PropTypes.any,\n    /** @private This API may be refactor since not well design */\n    onVisibleChange: Function,\n    /** When set to `full`, ssr will render full items by default and remove at client side */\n    ssr: String,\n    onMousedown: Function\n  };\n};\nvar Overflow = defineComponent({\n  name: 'Overflow',\n  inheritAttrs: false,\n  props: overflowProps(),\n  emits: ['visibleChange'],\n  setup: function setup(props, _ref) {\n    var attrs = _ref.attrs,\n      emit = _ref.emit,\n      slots = _ref.slots;\n    var fullySSR = computed(function () {\n      return props.ssr === 'full';\n    });\n    var containerWidth = shallowRef(null);\n    var mergedContainerWidth = computed(function () {\n      return containerWidth.value || 0;\n    });\n    var itemWidths = shallowRef(new Map());\n    var prevRestWidth = shallowRef(0);\n    var restWidth = shallowRef(0);\n    var suffixWidth = shallowRef(0);\n    var suffixFixedStart = shallowRef(null);\n    var displayCount = shallowRef(null);\n    var mergedDisplayCount = computed(function () {\n      if (displayCount.value === null && fullySSR.value) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n      return displayCount.value || 0;\n    });\n    var restReady = shallowRef(false);\n    var itemPrefixCls = computed(function () {\n      return \"\".concat(props.prefixCls, \"-item\");\n    });\n    // Always use the max width to avoid blink\n    var mergedRestWidth = computed(function () {\n      return Math.max(prevRestWidth.value, restWidth.value);\n    });\n    // ================================= Data =================================\n    var isResponsive = computed(function () {\n      return !!(props.data.length && props.maxCount === RESPONSIVE);\n    });\n    var invalidate = computed(function () {\n      return props.maxCount === INVALIDATE;\n    });\n    /**\n     * When is `responsive`, we will always render rest node to get the real width of it for calculation\n     */\n    var showRest = computed(function () {\n      return isResponsive.value || typeof props.maxCount === 'number' && props.data.length > props.maxCount;\n    });\n    var mergedData = computed(function () {\n      var items = props.data;\n      if (isResponsive.value) {\n        if (containerWidth.value === null && fullySSR.value) {\n          items = props.data;\n        } else {\n          items = props.data.slice(0, Math.min(props.data.length, mergedContainerWidth.value / props.itemWidth));\n        }\n      } else if (typeof props.maxCount === 'number') {\n        items = props.data.slice(0, props.maxCount);\n      }\n      return items;\n    });\n    var omittedItems = computed(function () {\n      if (isResponsive.value) {\n        return props.data.slice(mergedDisplayCount.value + 1);\n      }\n      return props.data.slice(mergedData.value.length);\n    });\n    // ================================= Item =================================\n    var getKey = function getKey(item, index) {\n      var _a;\n      if (typeof props.itemKey === 'function') {\n        return props.itemKey(item);\n      }\n      return (_a = props.itemKey && (item === null || item === void 0 ? void 0 : item[props.itemKey])) !== null && _a !== void 0 ? _a : index;\n    };\n    var mergedRenderItem = computed(function () {\n      return props.renderItem || function (item) {\n        return item;\n      };\n    });\n    var updateDisplayCount = function updateDisplayCount(count, notReady) {\n      displayCount.value = count;\n      if (!notReady) {\n        restReady.value = count < props.data.length - 1;\n        emit('visibleChange', count);\n      }\n    };\n    // ================================= Size =================================\n    var onOverflowResize = function onOverflowResize(_, element) {\n      containerWidth.value = element.clientWidth;\n    };\n    var registerSize = function registerSize(key, width) {\n      var clone = new Map(itemWidths.value);\n      if (width === null) {\n        clone[\"delete\"](key);\n      } else {\n        clone.set(key, width);\n      }\n      itemWidths.value = clone;\n    };\n    var registerOverflowSize = function registerOverflowSize(_, width) {\n      prevRestWidth.value = restWidth.value;\n      restWidth.value = width;\n    };\n    var registerSuffixSize = function registerSuffixSize(_, width) {\n      suffixWidth.value = width;\n    };\n    // ================================ Effect ================================\n    var getItemWidth = function getItemWidth(index) {\n      return itemWidths.value.get(getKey(mergedData.value[index], index));\n    };\n    watch([mergedContainerWidth, itemWidths, restWidth, suffixWidth, function () {\n      return props.itemKey;\n    }, mergedData], function () {\n      if (mergedContainerWidth.value && mergedRestWidth.value && mergedData.value) {\n        var totalWidth = suffixWidth.value;\n        var len = mergedData.value.length;\n        var lastIndex = len - 1;\n        // When data count change to 0, reset this since not loop will reach\n        if (!len) {\n          updateDisplayCount(0);\n          suffixFixedStart.value = null;\n          return;\n        }\n        for (var i = 0; i < len; i += 1) {\n          var currentItemWidth = getItemWidth(i);\n          // Break since data not ready\n          if (currentItemWidth === undefined) {\n            updateDisplayCount(i - 1, true);\n            break;\n          }\n          // Find best match\n          totalWidth += currentItemWidth;\n          if (\n          // Only one means `totalWidth` is the final width\n          lastIndex === 0 && totalWidth <= mergedContainerWidth.value ||\n          // Last two width will be the final width\n          i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth.value) {\n            // Additional check if match the end\n            updateDisplayCount(lastIndex);\n            suffixFixedStart.value = null;\n            break;\n          } else if (totalWidth + mergedRestWidth.value > mergedContainerWidth.value) {\n            // Can not hold all the content to show rest\n            updateDisplayCount(i - 1);\n            suffixFixedStart.value = totalWidth - currentItemWidth - suffixWidth.value + restWidth.value;\n            break;\n          }\n        }\n        if (props.suffix && getItemWidth(0) + suffixWidth.value > mergedContainerWidth.value) {\n          suffixFixedStart.value = null;\n        }\n      }\n    });\n    return function () {\n      // ================================ Render ================================\n      var displayRest = restReady.value && !!omittedItems.value.length;\n      var itemComponent = props.itemComponent,\n        renderRawItem = props.renderRawItem,\n        renderRawRest = props.renderRawRest,\n        renderRest = props.renderRest,\n        _props$prefixCls = props.prefixCls,\n        prefixCls = _props$prefixCls === void 0 ? 'rc-overflow' : _props$prefixCls,\n        suffix = props.suffix,\n        _props$component = props.component,\n        Component = _props$component === void 0 ? 'div' : _props$component,\n        id = props.id,\n        onMousedown = props.onMousedown;\n      var className = attrs[\"class\"],\n        style = attrs.style,\n        restAttrs = __rest(attrs, [\"class\", \"style\"]);\n      var suffixStyle = {};\n      if (suffixFixedStart.value !== null && isResponsive.value) {\n        suffixStyle = {\n          position: 'absolute',\n          left: \"\".concat(suffixFixedStart.value, \"px\"),\n          top: 0\n        };\n      }\n      var itemSharedProps = {\n        prefixCls: itemPrefixCls.value,\n        responsive: isResponsive.value,\n        component: itemComponent,\n        invalidate: invalidate.value\n      };\n      // >>>>> Choice render fun by `renderRawItem`\n      var internalRenderItemNode = renderRawItem ? function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(OverflowContextProvider, {\n          \"key\": key,\n          \"value\": _extends(_extends({}, itemSharedProps), {\n            order: index,\n            item: item,\n            itemKey: key,\n            registerSize: registerSize,\n            display: index <= mergedDisplayCount.value\n          })\n        }, {\n          \"default\": function _default() {\n            return [renderRawItem(item, index)];\n          }\n        });\n      } : function (item, index) {\n        var key = getKey(item, index);\n        return _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n          \"order\": index,\n          \"key\": key,\n          \"item\": item,\n          \"renderItem\": mergedRenderItem.value,\n          \"itemKey\": key,\n          \"registerSize\": registerSize,\n          \"display\": index <= mergedDisplayCount.value\n        }), null);\n      };\n      // >>>>> Rest node\n      var restNode = function restNode() {\n        return null;\n      };\n      var restContextProps = {\n        order: displayRest ? mergedDisplayCount.value : Number.MAX_SAFE_INTEGER,\n        className: \"\".concat(itemPrefixCls.value, \" \").concat(itemPrefixCls.value, \"-rest\"),\n        registerSize: registerOverflowSize,\n        display: displayRest\n      };\n      if (!renderRawRest) {\n        var mergedRenderRest = renderRest || defaultRenderRest;\n        restNode = function restNode() {\n          return _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), restContextProps), {\n            \"default\": function _default() {\n              return typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems.value) : mergedRenderRest;\n            }\n          });\n        };\n      } else if (renderRawRest) {\n        restNode = function restNode() {\n          return _createVNode(OverflowContextProvider, {\n            \"value\": _extends(_extends({}, itemSharedProps), restContextProps)\n          }, {\n            \"default\": function _default() {\n              return [renderRawRest(omittedItems.value)];\n            }\n          });\n        };\n      }\n      var overflowNode = function overflowNode() {\n        var _a;\n        return _createVNode(Component, _objectSpread({\n          \"id\": id,\n          \"class\": classNames(!invalidate.value && prefixCls, className),\n          \"style\": style,\n          \"onMousedown\": onMousedown\n        }, restAttrs), {\n          \"default\": function _default() {\n            return [mergedData.value.map(internalRenderItemNode), showRest.value ? restNode() : null, suffix && _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n              \"order\": mergedDisplayCount.value,\n              \"class\": \"\".concat(itemPrefixCls.value, \"-suffix\"),\n              \"registerSize\": registerSuffixSize,\n              \"display\": true,\n              \"style\": suffixStyle\n            }), {\n              \"default\": function _default() {\n                return suffix;\n              }\n            }), (_a = slots[\"default\"]) === null || _a === void 0 ? void 0 : _a.call(slots)];\n          }\n        });\n      };\n      // 使用 disabled  避免结构不一致 导致子组件 rerender\n      return _createVNode(ResizeObserver, {\n        \"disabled\": !isResponsive.value,\n        \"onResize\": onOverflowResize\n      }, {\n        \"default\": overflowNode\n      });\n    };\n  }\n});\nOverflow.Item = RawItem;\nOverflow.RESPONSIVE = RESPONSIVE;\nOverflow.INVALIDATE = INVALIDATE;\nexport default Overflow;","map":{"version":3,"names":["_objectSpread","_extends","resolveDirective","_resolveDirective","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","computed","defineComponent","shallowRef","watch","ResizeObserver","classNames","PropTypes","OverflowContextProvider","Item","RawItem","RESPONSIVE","INVALIDATE","defaultRenderRest","omittedItems","concat","overflowProps","id","String","prefixCls","data","Array","itemKey","Number","Function","itemWidth","type","renderItem","renderRawItem","maxCount","renderRest","renderRawRest","suffix","any","component","itemComponent","onVisibleChange","ssr","onMousedown","Overflow","name","inheritAttrs","props","emits","setup","_ref","attrs","emit","slots","fullySSR","containerWidth","mergedContainerWidth","value","itemWidths","Map","prevRestWidth","restWidth","suffixWidth","suffixFixedStart","displayCount","mergedDisplayCount","MAX_SAFE_INTEGER","restReady","itemPrefixCls","mergedRestWidth","Math","max","isResponsive","invalidate","showRest","mergedData","items","slice","min","getKey","item","index","_a","mergedRenderItem","updateDisplayCount","count","notReady","onOverflowResize","_","element","clientWidth","registerSize","key","width","clone","set","registerOverflowSize","registerSuffixSize","getItemWidth","get","totalWidth","len","lastIndex","currentItemWidth","undefined","displayRest","_props$prefixCls","_props$component","Component","className","style","restAttrs","suffixStyle","position","left","top","itemSharedProps","responsive","internalRenderItemNode","order","display","_default","restNode","restContextProps","mergedRenderRest","overflowNode","map"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-overflow/Overflow.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport { computed, defineComponent, shallowRef, watch } from 'vue';\nimport ResizeObserver from '../vc-resize-observer';\nimport classNames from '../_util/classNames';\nimport PropTypes from '../_util/vue-types';\nimport { OverflowContextProvider } from './context';\nimport Item from './Item';\nimport RawItem from './RawItem';\nconst RESPONSIVE = 'responsive';\nconst INVALIDATE = 'invalidate';\nfunction defaultRenderRest(omittedItems) {\n  return `+ ${omittedItems.length} ...`;\n}\nconst overflowProps = () => {\n  return {\n    id: String,\n    prefixCls: String,\n    data: Array,\n    itemKey: [String, Number, Function],\n    /** Used for `responsive`. It will limit render node to avoid perf issue */\n    itemWidth: {\n      type: Number,\n      default: 10\n    },\n    renderItem: Function,\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawItem: Function,\n    maxCount: [Number, String],\n    renderRest: Function,\n    /** @private Do not use in your production. Render raw node that need wrap Item by developer self */\n    renderRawRest: Function,\n    suffix: PropTypes.any,\n    component: String,\n    itemComponent: PropTypes.any,\n    /** @private This API may be refactor since not well design */\n    onVisibleChange: Function,\n    /** When set to `full`, ssr will render full items by default and remove at client side */\n    ssr: String,\n    onMousedown: Function\n  };\n};\nconst Overflow = defineComponent({\n  name: 'Overflow',\n  inheritAttrs: false,\n  props: overflowProps(),\n  emits: ['visibleChange'],\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const fullySSR = computed(() => props.ssr === 'full');\n    const containerWidth = shallowRef(null);\n    const mergedContainerWidth = computed(() => containerWidth.value || 0);\n    const itemWidths = shallowRef(new Map());\n    const prevRestWidth = shallowRef(0);\n    const restWidth = shallowRef(0);\n    const suffixWidth = shallowRef(0);\n    const suffixFixedStart = shallowRef(null);\n    const displayCount = shallowRef(null);\n    const mergedDisplayCount = computed(() => {\n      if (displayCount.value === null && fullySSR.value) {\n        return Number.MAX_SAFE_INTEGER;\n      }\n      return displayCount.value || 0;\n    });\n    const restReady = shallowRef(false);\n    const itemPrefixCls = computed(() => `${props.prefixCls}-item`);\n    // Always use the max width to avoid blink\n    const mergedRestWidth = computed(() => Math.max(prevRestWidth.value, restWidth.value));\n    // ================================= Data =================================\n    const isResponsive = computed(() => !!(props.data.length && props.maxCount === RESPONSIVE));\n    const invalidate = computed(() => props.maxCount === INVALIDATE);\n    /**\n     * When is `responsive`, we will always render rest node to get the real width of it for calculation\n     */\n    const showRest = computed(() => isResponsive.value || typeof props.maxCount === 'number' && props.data.length > props.maxCount);\n    const mergedData = computed(() => {\n      let items = props.data;\n      if (isResponsive.value) {\n        if (containerWidth.value === null && fullySSR.value) {\n          items = props.data;\n        } else {\n          items = props.data.slice(0, Math.min(props.data.length, mergedContainerWidth.value / props.itemWidth));\n        }\n      } else if (typeof props.maxCount === 'number') {\n        items = props.data.slice(0, props.maxCount);\n      }\n      return items;\n    });\n    const omittedItems = computed(() => {\n      if (isResponsive.value) {\n        return props.data.slice(mergedDisplayCount.value + 1);\n      }\n      return props.data.slice(mergedData.value.length);\n    });\n    // ================================= Item =================================\n    const getKey = (item, index) => {\n      var _a;\n      if (typeof props.itemKey === 'function') {\n        return props.itemKey(item);\n      }\n      return (_a = props.itemKey && (item === null || item === void 0 ? void 0 : item[props.itemKey])) !== null && _a !== void 0 ? _a : index;\n    };\n    const mergedRenderItem = computed(() => props.renderItem || (item => item));\n    const updateDisplayCount = (count, notReady) => {\n      displayCount.value = count;\n      if (!notReady) {\n        restReady.value = count < props.data.length - 1;\n        emit('visibleChange', count);\n      }\n    };\n    // ================================= Size =================================\n    const onOverflowResize = (_, element) => {\n      containerWidth.value = element.clientWidth;\n    };\n    const registerSize = (key, width) => {\n      const clone = new Map(itemWidths.value);\n      if (width === null) {\n        clone.delete(key);\n      } else {\n        clone.set(key, width);\n      }\n      itemWidths.value = clone;\n    };\n    const registerOverflowSize = (_, width) => {\n      prevRestWidth.value = restWidth.value;\n      restWidth.value = width;\n    };\n    const registerSuffixSize = (_, width) => {\n      suffixWidth.value = width;\n    };\n    // ================================ Effect ================================\n    const getItemWidth = index => {\n      return itemWidths.value.get(getKey(mergedData.value[index], index));\n    };\n    watch([mergedContainerWidth, itemWidths, restWidth, suffixWidth, () => props.itemKey, mergedData], () => {\n      if (mergedContainerWidth.value && mergedRestWidth.value && mergedData.value) {\n        let totalWidth = suffixWidth.value;\n        const len = mergedData.value.length;\n        const lastIndex = len - 1;\n        // When data count change to 0, reset this since not loop will reach\n        if (!len) {\n          updateDisplayCount(0);\n          suffixFixedStart.value = null;\n          return;\n        }\n        for (let i = 0; i < len; i += 1) {\n          const currentItemWidth = getItemWidth(i);\n          // Break since data not ready\n          if (currentItemWidth === undefined) {\n            updateDisplayCount(i - 1, true);\n            break;\n          }\n          // Find best match\n          totalWidth += currentItemWidth;\n          if (\n          // Only one means `totalWidth` is the final width\n          lastIndex === 0 && totalWidth <= mergedContainerWidth.value ||\n          // Last two width will be the final width\n          i === lastIndex - 1 && totalWidth + getItemWidth(lastIndex) <= mergedContainerWidth.value) {\n            // Additional check if match the end\n            updateDisplayCount(lastIndex);\n            suffixFixedStart.value = null;\n            break;\n          } else if (totalWidth + mergedRestWidth.value > mergedContainerWidth.value) {\n            // Can not hold all the content to show rest\n            updateDisplayCount(i - 1);\n            suffixFixedStart.value = totalWidth - currentItemWidth - suffixWidth.value + restWidth.value;\n            break;\n          }\n        }\n        if (props.suffix && getItemWidth(0) + suffixWidth.value > mergedContainerWidth.value) {\n          suffixFixedStart.value = null;\n        }\n      }\n    });\n    return () => {\n      // ================================ Render ================================\n      const displayRest = restReady.value && !!omittedItems.value.length;\n      const {\n        itemComponent,\n        renderRawItem,\n        renderRawRest,\n        renderRest,\n        prefixCls = 'rc-overflow',\n        suffix,\n        component: Component = 'div',\n        id,\n        onMousedown\n      } = props;\n      const {\n          class: className,\n          style\n        } = attrs,\n        restAttrs = __rest(attrs, [\"class\", \"style\"]);\n      let suffixStyle = {};\n      if (suffixFixedStart.value !== null && isResponsive.value) {\n        suffixStyle = {\n          position: 'absolute',\n          left: `${suffixFixedStart.value}px`,\n          top: 0\n        };\n      }\n      const itemSharedProps = {\n        prefixCls: itemPrefixCls.value,\n        responsive: isResponsive.value,\n        component: itemComponent,\n        invalidate: invalidate.value\n      };\n      // >>>>> Choice render fun by `renderRawItem`\n      const internalRenderItemNode = renderRawItem ? (item, index) => {\n        const key = getKey(item, index);\n        return _createVNode(OverflowContextProvider, {\n          \"key\": key,\n          \"value\": _extends(_extends({}, itemSharedProps), {\n            order: index,\n            item,\n            itemKey: key,\n            registerSize,\n            display: index <= mergedDisplayCount.value\n          })\n        }, {\n          default: () => [renderRawItem(item, index)]\n        });\n      } : (item, index) => {\n        const key = getKey(item, index);\n        return _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n          \"order\": index,\n          \"key\": key,\n          \"item\": item,\n          \"renderItem\": mergedRenderItem.value,\n          \"itemKey\": key,\n          \"registerSize\": registerSize,\n          \"display\": index <= mergedDisplayCount.value\n        }), null);\n      };\n      // >>>>> Rest node\n      let restNode = () => null;\n      const restContextProps = {\n        order: displayRest ? mergedDisplayCount.value : Number.MAX_SAFE_INTEGER,\n        className: `${itemPrefixCls.value} ${itemPrefixCls.value}-rest`,\n        registerSize: registerOverflowSize,\n        display: displayRest\n      };\n      if (!renderRawRest) {\n        const mergedRenderRest = renderRest || defaultRenderRest;\n        restNode = () => _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), restContextProps), {\n          default: () => typeof mergedRenderRest === 'function' ? mergedRenderRest(omittedItems.value) : mergedRenderRest\n        });\n      } else if (renderRawRest) {\n        restNode = () => _createVNode(OverflowContextProvider, {\n          \"value\": _extends(_extends({}, itemSharedProps), restContextProps)\n        }, {\n          default: () => [renderRawRest(omittedItems.value)]\n        });\n      }\n      const overflowNode = () => {\n        var _a;\n        return _createVNode(Component, _objectSpread({\n          \"id\": id,\n          \"class\": classNames(!invalidate.value && prefixCls, className),\n          \"style\": style,\n          \"onMousedown\": onMousedown\n        }, restAttrs), {\n          default: () => [mergedData.value.map(internalRenderItemNode), showRest.value ? restNode() : null, suffix && _createVNode(Item, _objectSpread(_objectSpread({}, itemSharedProps), {}, {\n            \"order\": mergedDisplayCount.value,\n            \"class\": `${itemPrefixCls.value}-suffix`,\n            \"registerSize\": registerSuffixSize,\n            \"display\": true,\n            \"style\": suffixStyle\n          }), {\n            default: () => suffix\n          }), (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots)]\n        });\n      };\n      // 使用 disabled  避免结构不一致 导致子组件 rerender\n      return _createVNode(ResizeObserver, {\n        \"disabled\": !isResponsive.value,\n        \"onResize\": onOverflowResize\n      }, {\n        default: overflowNode\n      });\n    };\n  }\n});\nOverflow.Item = RawItem;\nOverflow.RESPONSIVE = RESPONSIVE;\nOverflow.INVALIDATE = INVALIDATE;\nexport default Overflow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}