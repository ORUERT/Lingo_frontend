{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.string.pad-end.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { createVNode as _createVNode } from \"vue\";\nvar StatisticNumber = function StatisticNumber(props) {\n  var value = props.value,\n    formatter = props.formatter,\n    precision = props.precision,\n    decimalSeparator = props.decimalSeparator,\n    _props$groupSeparator = props.groupSeparator,\n    groupSeparator = _props$groupSeparator === void 0 ? '' : _props$groupSeparator,\n    prefixCls = props.prefixCls;\n  var valueNode;\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter({\n      value: value\n    });\n  } else {\n    // Internal formatter\n    var val = String(value);\n    var cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n    // Process if illegal number\n    if (!cells) {\n      valueNode = val;\n    } else {\n      var negative = cells[1];\n      var _int = cells[2] || '0';\n      var decimal = cells[4] || '';\n      _int = _int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      if (typeof precision === 'number') {\n        decimal = decimal.padEnd(precision, '0').slice(0, precision > 0 ? precision : 0);\n      }\n      if (decimal) {\n        decimal = \"\".concat(decimalSeparator).concat(decimal);\n      }\n      valueNode = [_createVNode(\"span\", {\n        \"key\": \"int\",\n        \"class\": \"\".concat(prefixCls, \"-content-value-int\")\n      }, [negative, _int]), decimal && _createVNode(\"span\", {\n        \"key\": \"decimal\",\n        \"class\": \"\".concat(prefixCls, \"-content-value-decimal\")\n      }, [decimal])];\n    }\n  }\n  return _createVNode(\"span\", {\n    \"class\": \"\".concat(prefixCls, \"-content-value\")\n  }, [valueNode]);\n};\nStatisticNumber.displayName = 'StatisticNumber';\nexport default StatisticNumber;","map":{"version":3,"names":["createVNode","_createVNode","StatisticNumber","props","value","formatter","precision","decimalSeparator","_props$groupSeparator","groupSeparator","prefixCls","valueNode","val","String","cells","match","negative","int","decimal","replace","padEnd","slice","concat","displayName"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/statistic/Number.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nconst StatisticNumber = props => {\n  const {\n    value,\n    formatter,\n    precision,\n    decimalSeparator,\n    groupSeparator = '',\n    prefixCls\n  } = props;\n  let valueNode;\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter({\n      value\n    });\n  } else {\n    // Internal formatter\n    const val = String(value);\n    const cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n    // Process if illegal number\n    if (!cells) {\n      valueNode = val;\n    } else {\n      const negative = cells[1];\n      let int = cells[2] || '0';\n      let decimal = cells[4] || '';\n      int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      if (typeof precision === 'number') {\n        decimal = decimal.padEnd(precision, '0').slice(0, precision > 0 ? precision : 0);\n      }\n      if (decimal) {\n        decimal = `${decimalSeparator}${decimal}`;\n      }\n      valueNode = [_createVNode(\"span\", {\n        \"key\": \"int\",\n        \"class\": `${prefixCls}-content-value-int`\n      }, [negative, int]), decimal && _createVNode(\"span\", {\n        \"key\": \"decimal\",\n        \"class\": `${prefixCls}-content-value-decimal`\n      }, [decimal])];\n    }\n  }\n  return _createVNode(\"span\", {\n    \"class\": `${prefixCls}-content-value`\n  }, [valueNode]);\n};\nStatisticNumber.displayName = 'StatisticNumber';\nexport default StatisticNumber;"],"mappings":";;;;;;AAAA,SAASA,WAAW,IAAIC,YAAY,QAAQ,KAAK;AACjD,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAGC,KAAK,EAAI;EAC/B,IACEC,KAAK,GAMHD,KAAK,CANPC,KAAK;IACLC,SAAS,GAKPF,KAAK,CALPE,SAAS;IACTC,SAAS,GAIPH,KAAK,CAJPG,SAAS;IACTC,gBAAgB,GAGdJ,KAAK,CAHPI,gBAAgB;IAAAC,qBAAA,GAGdL,KAAK,CAFPM,cAAc;IAAdA,cAAc,GAAAD,qBAAA,cAAG,EAAE,GAAAA,qBAAA;IACnBE,SAAS,GACPP,KAAK,CADPO,SAAS;EAEX,IAAIC,SAAS;EACb,IAAI,OAAON,SAAS,KAAK,UAAU,EAAE;IACnC;IACAM,SAAS,GAAGN,SAAS,CAAC;MACpBD,KAAK,EAALA;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;IACL;IACA,IAAMQ,GAAG,GAAGC,MAAM,CAACT,KAAK,CAAC;IACzB,IAAMU,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,uBAAuB,CAAC;IAChD;IACA,IAAI,CAACD,KAAK,EAAE;MACVH,SAAS,GAAGC,GAAG;IACjB,CAAC,MAAM;MACL,IAAMI,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC;MACzB,IAAIG,IAAG,GAAGH,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;MACzB,IAAII,OAAO,GAAGJ,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;MAC5BG,IAAG,GAAGA,IAAG,CAACE,OAAO,CAAC,uBAAuB,EAAEV,cAAc,CAAC;MAC1D,IAAI,OAAOH,SAAS,KAAK,QAAQ,EAAE;QACjCY,OAAO,GAAGA,OAAO,CAACE,MAAM,CAACd,SAAS,EAAE,GAAG,CAAC,CAACe,KAAK,CAAC,CAAC,EAAEf,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC,CAAC;MAClF;MACA,IAAIY,OAAO,EAAE;QACXA,OAAO,MAAAI,MAAA,CAAMf,gBAAgB,EAAAe,MAAA,CAAGJ,OAAO,CAAE;MAC3C;MACAP,SAAS,GAAG,CAACV,YAAY,CAAC,MAAM,EAAE;QAChC,KAAK,EAAE,KAAK;QACZ,OAAO,KAAAqB,MAAA,CAAKZ,SAAS;MACvB,CAAC,EAAE,CAACM,QAAQ,EAAEC,IAAG,CAAC,CAAC,EAAEC,OAAO,IAAIjB,YAAY,CAAC,MAAM,EAAE;QACnD,KAAK,EAAE,SAAS;QAChB,OAAO,KAAAqB,MAAA,CAAKZ,SAAS;MACvB,CAAC,EAAE,CAACQ,OAAO,CAAC,CAAC,CAAC;IAChB;EACF;EACA,OAAOjB,YAAY,CAAC,MAAM,EAAE;IAC1B,OAAO,KAAAqB,MAAA,CAAKZ,SAAS;EACvB,CAAC,EAAE,CAACC,SAAS,CAAC,CAAC;AACjB,CAAC;AACDT,eAAe,CAACqB,WAAW,GAAG,iBAAiB;AAC/C,eAAerB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}