{"ast":null,"code":"import _slicedToArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport { useInjectCascader } from '../context';\nimport { watch } from 'vue';\nimport { useBaseProps } from '../../vc-select';\nimport useState from '../../_util/hooks/useState';\n/**\n * Control the active open options path.\n */\nexport default (function () {\n  var baseProps = useBaseProps();\n  var _useInjectCascader = useInjectCascader(),\n    values = _useInjectCascader.values;\n  // Record current dropdown active options\n  // This also control the open status\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    activeValueCells = _useState2[0],\n    setActiveValueCells = _useState2[1];\n  watch(function () {\n    return baseProps.open;\n  }, function () {\n    if (baseProps.open && !baseProps.multiple) {\n      var firstValueCells = values.value[0];\n      setActiveValueCells(firstValueCells || []);\n    }\n  }, {\n    immediate: true\n  });\n  return [activeValueCells, setActiveValueCells];\n});","map":{"version":3,"names":["useInjectCascader","watch","useBaseProps","useState","baseProps","_useInjectCascader","values","_useState","_useState2","_slicedToArray","activeValueCells","setActiveValueCells","open","multiple","firstValueCells","value","immediate"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-cascader/OptionList/useActive.js"],"sourcesContent":["import { useInjectCascader } from '../context';\nimport { watch } from 'vue';\nimport { useBaseProps } from '../../vc-select';\nimport useState from '../../_util/hooks/useState';\n/**\n * Control the active open options path.\n */\nexport default (() => {\n  const baseProps = useBaseProps();\n  const {\n    values\n  } = useInjectCascader();\n  // Record current dropdown active options\n  // This also control the open status\n  const [activeValueCells, setActiveValueCells] = useState([]);\n  watch(() => baseProps.open, () => {\n    if (baseProps.open && !baseProps.multiple) {\n      const firstValueCells = values.value[0];\n      setActiveValueCells(firstValueCells || []);\n    }\n  }, {\n    immediate: true\n  });\n  return [activeValueCells, setActiveValueCells];\n});"],"mappings":";;;AAAA,SAASA,iBAAiB,QAAQ,YAAY;AAC9C,SAASC,KAAK,QAAQ,KAAK;AAC3B,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD;AACA;AACA;AACA,gBAAgB,YAAM;EACpB,IAAMC,SAAS,GAAGF,YAAY,CAAC,CAAC;EAChC,IAAAG,kBAAA,GAEIL,iBAAiB,CAAC,CAAC;IADrBM,MAAM,GAAAD,kBAAA,CAANC,MAAM;EAER;EACA;EACA,IAAAC,SAAA,GAAgDJ,QAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,gBAAgB,GAAAF,UAAA;IAAEG,mBAAmB,GAAAH,UAAA;EAC5CP,KAAK,CAAC;IAAA,OAAMG,SAAS,CAACQ,IAAI;EAAA,GAAE,YAAM;IAChC,IAAIR,SAAS,CAACQ,IAAI,IAAI,CAACR,SAAS,CAACS,QAAQ,EAAE;MACzC,IAAMC,eAAe,GAAGR,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC;MACvCJ,mBAAmB,CAACG,eAAe,IAAI,EAAE,CAAC;IAC5C;EACF,CAAC,EAAE;IACDE,SAAS,EAAE;EACb,CAAC,CAAC;EACF,OAAO,CAACN,gBAAgB,EAAEC,mBAAmB,CAAC;AAChD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}