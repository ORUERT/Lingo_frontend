{"ast":null,"code":"import _defineProperty from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { computed } from 'vue';\nimport { fillLegacyProps } from '../utils/legacyUtil';\nexport default (function (treeData, searchValue, _ref) {\n  var treeNodeFilterProp = _ref.treeNodeFilterProp,\n    filterTreeNode = _ref.filterTreeNode,\n    fieldNames = _ref.fieldNames;\n  return computed(function () {\n    var fieldChildren = fieldNames.value.children;\n    var searchValueVal = searchValue.value;\n    var treeNodeFilterPropValue = treeNodeFilterProp === null || treeNodeFilterProp === void 0 ? void 0 : treeNodeFilterProp.value;\n    if (!searchValueVal || filterTreeNode.value === false) {\n      return treeData.value;\n    }\n    var filterOptionFunc;\n    if (typeof filterTreeNode.value === 'function') {\n      filterOptionFunc = filterTreeNode.value;\n    } else {\n      var upperStr = searchValueVal.toUpperCase();\n      filterOptionFunc = function filterOptionFunc(_, dataNode) {\n        var value = dataNode[treeNodeFilterPropValue];\n        return String(value).toUpperCase().includes(upperStr);\n      };\n    }\n    function dig(list) {\n      var keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = [];\n      for (var index = 0, len = list.length; index < len; index++) {\n        var dataNode = list[index];\n        var children = dataNode[fieldChildren];\n        var match = keepAll || filterOptionFunc(searchValueVal, fillLegacyProps(dataNode));\n        var childList = dig(children || [], match);\n        if (match || childList.length) {\n          res.push(_extends(_extends({}, dataNode), _defineProperty({}, fieldChildren, childList)));\n        }\n      }\n      return res;\n    }\n    return dig(treeData.value);\n  });\n});","map":{"version":3,"names":["_extends","computed","fillLegacyProps","treeData","searchValue","_ref","treeNodeFilterProp","filterTreeNode","fieldNames","fieldChildren","value","children","searchValueVal","treeNodeFilterPropValue","filterOptionFunc","upperStr","toUpperCase","_","dataNode","String","includes","dig","list","keepAll","arguments","length","undefined","res","index","len","match","childList","push","_defineProperty"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-tree-select/hooks/useFilterTreeData.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { computed } from 'vue';\nimport { fillLegacyProps } from '../utils/legacyUtil';\nexport default ((treeData, searchValue, _ref) => {\n  let {\n    treeNodeFilterProp,\n    filterTreeNode,\n    fieldNames\n  } = _ref;\n  return computed(() => {\n    const {\n      children: fieldChildren\n    } = fieldNames.value;\n    const searchValueVal = searchValue.value;\n    const treeNodeFilterPropValue = treeNodeFilterProp === null || treeNodeFilterProp === void 0 ? void 0 : treeNodeFilterProp.value;\n    if (!searchValueVal || filterTreeNode.value === false) {\n      return treeData.value;\n    }\n    let filterOptionFunc;\n    if (typeof filterTreeNode.value === 'function') {\n      filterOptionFunc = filterTreeNode.value;\n    } else {\n      const upperStr = searchValueVal.toUpperCase();\n      filterOptionFunc = (_, dataNode) => {\n        const value = dataNode[treeNodeFilterPropValue];\n        return String(value).toUpperCase().includes(upperStr);\n      };\n    }\n    function dig(list) {\n      let keepAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      const res = [];\n      for (let index = 0, len = list.length; index < len; index++) {\n        const dataNode = list[index];\n        const children = dataNode[fieldChildren];\n        const match = keepAll || filterOptionFunc(searchValueVal, fillLegacyProps(dataNode));\n        const childList = dig(children || [], match);\n        if (match || childList.length) {\n          res.push(_extends(_extends({}, dataNode), {\n            [fieldChildren]: childList\n          }));\n        }\n      }\n      return res;\n    }\n    return dig(treeData.value);\n  });\n});"],"mappings":";;;;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,QAAQ,QAAQ,KAAK;AAC9B,SAASC,eAAe,QAAQ,qBAAqB;AACrD,gBAAgB,UAACC,QAAQ,EAAEC,WAAW,EAAEC,IAAI,EAAK;EAC/C,IACEC,kBAAkB,GAGhBD,IAAI,CAHNC,kBAAkB;IAClBC,cAAc,GAEZF,IAAI,CAFNE,cAAc;IACdC,UAAU,GACRH,IAAI,CADNG,UAAU;EAEZ,OAAOP,QAAQ,CAAC,YAAM;IACpB,IACYQ,aAAa,GACrBD,UAAU,CAACE,KAAK,CADlBC,QAAQ;IAEV,IAAMC,cAAc,GAAGR,WAAW,CAACM,KAAK;IACxC,IAAMG,uBAAuB,GAAGP,kBAAkB,KAAK,IAAI,IAAIA,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAACI,KAAK;IAChI,IAAI,CAACE,cAAc,IAAIL,cAAc,CAACG,KAAK,KAAK,KAAK,EAAE;MACrD,OAAOP,QAAQ,CAACO,KAAK;IACvB;IACA,IAAII,gBAAgB;IACpB,IAAI,OAAOP,cAAc,CAACG,KAAK,KAAK,UAAU,EAAE;MAC9CI,gBAAgB,GAAGP,cAAc,CAACG,KAAK;IACzC,CAAC,MAAM;MACL,IAAMK,QAAQ,GAAGH,cAAc,CAACI,WAAW,CAAC,CAAC;MAC7CF,gBAAgB,GAAG,SAAAA,iBAACG,CAAC,EAAEC,QAAQ,EAAK;QAClC,IAAMR,KAAK,GAAGQ,QAAQ,CAACL,uBAAuB,CAAC;QAC/C,OAAOM,MAAM,CAACT,KAAK,CAAC,CAACM,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACL,QAAQ,CAAC;MACvD,CAAC;IACH;IACA,SAASM,GAAGA,CAACC,IAAI,EAAE;MACjB,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK;MACvF,IAAMG,GAAG,GAAG,EAAE;MACd,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEC,GAAG,GAAGP,IAAI,CAACG,MAAM,EAAEG,KAAK,GAAGC,GAAG,EAAED,KAAK,EAAE,EAAE;QAC3D,IAAMV,QAAQ,GAAGI,IAAI,CAACM,KAAK,CAAC;QAC5B,IAAMjB,QAAQ,GAAGO,QAAQ,CAACT,aAAa,CAAC;QACxC,IAAMqB,KAAK,GAAGP,OAAO,IAAIT,gBAAgB,CAACF,cAAc,EAAEV,eAAe,CAACgB,QAAQ,CAAC,CAAC;QACpF,IAAMa,SAAS,GAAGV,GAAG,CAACV,QAAQ,IAAI,EAAE,EAAEmB,KAAK,CAAC;QAC5C,IAAIA,KAAK,IAAIC,SAAS,CAACN,MAAM,EAAE;UAC7BE,GAAG,CAACK,IAAI,CAAChC,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEkB,QAAQ,CAAC,EAAAe,eAAA,KACrCxB,aAAa,EAAGsB,SAAS,CAC3B,CAAC,CAAC;QACL;MACF;MACA,OAAOJ,GAAG;IACZ;IACA,OAAON,GAAG,CAAClB,QAAQ,CAACO,KAAK,CAAC;EAC5B,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}