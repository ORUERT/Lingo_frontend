{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { MessageOutlined } from '@ant-design/icons-vue';\nimport axios from \"@/axios\";\nimport { defineComponent } from \"vue\";\n// import request from \"@/utils/request\";\n// let socket;\nexport default defineComponent({\n  components: {\n    MessageOutlined: MessageOutlined\n  },\n  data: function data() {\n    return {\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\n      user: {},\n      isCollapse: false,\n      nickname: '',\n      chatUser: '',\n      text: \"\",\n      messages: [],\n      content: ''\n    };\n  },\n  computed: {\n    isTextEmpty: function isTextEmpty() {\n      return this.text.length === 0; // 判断文本是否为空\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    onck: function onck() {\n      if (!this.isTextEmpty) {\n        this.messages.push({\n          self: true,\n          content: this.text\n        });\n        this.text = '';\n        this.send();\n      }\n    },\n    send: function send() {\n      var _this2 = this;\n      // 组装待发送的消息 json\n      // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\n      var temptext = this.messages.at(-1);\n      console.log(temptext);\n      var message = {\n        self: true,\n        content: temptext.content\n      };\n      axios.post('/message', message, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': localStorage.getItem('token')\n        }\n      }).then(function (res) {\n        if (res.data.code === '200') {\n          console.log(res.data);\n          // 构建消息内容，本人消息\n          _this2.messages.push({\n            self: false,\n            content: res.data.data.data\n          });\n        } else {\n          _this2.messages.pop();\n          //create error message\n          // this.$message.error('登录失败')\n        }\n      })[\"catch\"](function (err) {\n        _this2.messages.pop();\n        console.log(err);\n      });\n    },\n    init: function init() {\n      this.user = sessionStorage.getItem(\"userInfo\") ? JSON.parse(sessionStorage.getItem(\"userInfo\")) : {};\n      var username = this.user.nickname;\n      var _this = this;\n    }\n  }\n});","map":{"version":3,"names":["MessageOutlined","axios","defineComponent","components","data","circleUrl","user","isCollapse","nickname","chatUser","text","messages","content","computed","isTextEmpty","length","created","init","methods","onck","push","self","send","_this2","temptext","at","console","log","message","post","headers","localStorage","getItem","then","res","code","pop","err","sessionStorage","JSON","parse","username","_this"],"sources":["C:\\Users\\zhouy\\WebstormProjects\\lingo\\src\\view\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <div  style=\"padding: 10px; margin-bottom: 50px\">\r\n    <a-row >\r\n      <a-col class=\"chat-col\" :span=\"16\">\r\n        <div class=\"chat-box\">\r\n          <div class=\"chat-title\">\r\n            Web聊天室（{{ chatUser }}）\r\n          </div>\r\n          <div class=\"chat-content\" >\r\n            <div class=\"message-box\" id=\"scroll-box\">\r\n              <div class=\"scroll_content\">\r\n                <ul class=\"list\">\r\n                  <li v-for=\"(item, index) in messages\" :key=\"index\">\r\n                    <div :class=\"{ self: item.self }\" class>\r\n                      <div class=\"nickname\" v-if=\"item.self\">self</div>\r\n                      <div class=\"nickname\" v-else>teacher</div>\r\n                      <img\r\n                          src=\"../assets/logo.png\"\r\n                          class=\"avatar\"\r\n                          width=\"30\"\r\n                          height=\"30\"\r\n                          @click=\"handlerAddFrind(item.sender)\"\r\n                      />\r\n                      <div class=\"text\">\r\n                        <span v-html=\"item.content\" />\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"chat-input\">\r\n            <a-input-group >\r\n              <a-input class=\"chat-a-input\" v-model:value=\"text\" size=\"small\">\r\n                <template #suffix>\r\n                  <div class=\"icon-wrapper\">\r\n                  <message-outlined :style=\"{fontSize: '20px', color:'#000000'}\" v-if=\"text.length > 0\" @click=\"onck\" />\r\n                  <message-outlined\r\n                      :style=\"{ fontSize: '20px', color: '#AAAAAA' }\"\r\n                      v-show=\"text.length === 0\"\r\n                  />\r\n                    </div>\r\n                </template>\r\n              </a-input>\r\n            </a-input-group>\r\n          </div>\r\n\r\n        </div>\r\n      </a-col>\r\n    </a-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { MessageOutlined  } from '@ant-design/icons-vue';\r\nimport axios from \"@/axios\";\r\nimport {defineComponent} from \"vue\";\r\n// import request from \"@/utils/request\";\r\n// let socket;\r\nexport default defineComponent( {\r\n  components: {\r\n    MessageOutlined\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      user: {},\r\n      isCollapse: false,\r\n      nickname: '',\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n  },\r\n  computed: {\r\n    isTextEmpty() {\r\n      return this.text.length === 0; // 判断文本是否为空\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    onck() {\r\n      if(!this.isTextEmpty){\r\n        this.messages.push({self:true, content: this.text})\r\n        this.text = ''\r\n        this.send()\r\n      }\r\n\r\n    },\r\n    send() {\r\n        // 组装待发送的消息 json\r\n        // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n      let temptext = this.messages.at(-1)\r\n      console.log(temptext)\r\n      let message = {self:true, content: temptext.content}\r\n      axios.post('/message',message,{\r\n        headers:{\r\n          'Content-Type':'application/json',\r\n          'Authorization':localStorage.getItem('token')\r\n        }\r\n      }).then(res=>{\r\n        if(res.data.code === '200'){\r\n          console.log(res.data)\r\n          // 构建消息内容，本人消息\r\n          this.messages.push({self:false,content:res.data.data.data})\r\n        }else{\r\n          this.messages.pop()\r\n          //create error message\r\n          // this.$message.error('登录失败')\r\n        }\r\n      }).catch(err=>{\r\n        this.messages.pop()\r\n        console.log(err)\r\n      })\r\n    },\r\n    init() {\r\n      this.user = sessionStorage.getItem(\"userInfo\") ? JSON.parse(sessionStorage.getItem(\"userInfo\")) : {}\r\n      let username = this.user.nickname;\r\n      let _this = this;\r\n    }\r\n  }\r\n})\r\n</script>\r\n<style>\r\n@import \"../scss/pages/_chat.scss\";\r\n</style>\r\n"],"mappings":";;;;AAsDA,SAASA,eAAc,QAAU,uBAAuB;AACxD,OAAOC,KAAI,MAAO,SAAS;AAC3B,SAAQC,eAAe,QAAO,KAAK;AACnC;AACA;AACA,eAAeA,eAAe,CAAE;EAC9BC,UAAU,EAAE;IACVH,eAAc,EAAdA;EACF,CAAC;EAEDI,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,qEAAqE;MAChFC,IAAI,EAAE,CAAC,CAAC;MACRC,UAAU,EAAE,KAAK;MACjBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,WAAAA,YAAA,EAAG;MACZ,OAAO,IAAI,CAACJ,IAAI,CAACK,MAAK,KAAM,CAAC,EAAE;IACjC;EACF,CAAC;EACDC,OAAO,WAAAA,QAAA,EAAG;IACR,IAAI,CAACC,IAAI,CAAC;EACZ,CAAC;EACDC,OAAO,EAAE;IACPC,IAAI,WAAAA,KAAA,EAAG;MACL,IAAG,CAAC,IAAI,CAACL,WAAW,EAAC;QACnB,IAAI,CAACH,QAAQ,CAACS,IAAI,CAAC;UAACC,IAAI,EAAC,IAAI;UAAET,OAAO,EAAE,IAAI,CAACF;QAAI,CAAC;QAClD,IAAI,CAACA,IAAG,GAAI,EAAC;QACb,IAAI,CAACY,IAAI,CAAC;MACZ;IAEF,CAAC;IACDA,IAAI,WAAAA,KAAA,EAAG;MAAA,IAAAC,MAAA;MACH;MACA;MACF,IAAIC,QAAO,GAAI,IAAI,CAACb,QAAQ,CAACc,EAAE,CAAC,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACH,QAAQ;MACpB,IAAII,OAAM,GAAI;QAACP,IAAI,EAAC,IAAI;QAAET,OAAO,EAAEY,QAAQ,CAACZ;MAAO;MACnDX,KAAK,CAAC4B,IAAI,CAAC,UAAU,EAACD,OAAO,EAAC;QAC5BE,OAAO,EAAC;UACN,cAAc,EAAC,kBAAkB;UACjC,eAAe,EAACC,YAAY,CAACC,OAAO,CAAC,OAAO;QAC9C;MACF,CAAC,CAAC,CAACC,IAAI,CAAC,UAAAC,GAAG,EAAE;QACX,IAAGA,GAAG,CAAC9B,IAAI,CAAC+B,IAAG,KAAM,KAAK,EAAC;UACzBT,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC9B,IAAI;UACpB;UACAmB,MAAI,CAACZ,QAAQ,CAACS,IAAI,CAAC;YAACC,IAAI,EAAC,KAAK;YAACT,OAAO,EAACsB,GAAG,CAAC9B,IAAI,CAACA,IAAI,CAACA;UAAI,CAAC;QAC5D,CAAC,MAAI;UACHmB,MAAI,CAACZ,QAAQ,CAACyB,GAAG,CAAC;UAClB;UACA;QACF;MACF,CAAC,CAAC,SAAM,CAAC,UAAAC,GAAG,EAAE;QACZd,MAAI,CAACZ,QAAQ,CAACyB,GAAG,CAAC;QAClBV,OAAO,CAACC,GAAG,CAACU,GAAG;MACjB,CAAC;IACH,CAAC;IACDpB,IAAI,WAAAA,KAAA,EAAG;MACL,IAAI,CAACX,IAAG,GAAIgC,cAAc,CAACN,OAAO,CAAC,UAAU,IAAIO,IAAI,CAACC,KAAK,CAACF,cAAc,CAACN,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC;MACnG,IAAIS,QAAO,GAAI,IAAI,CAACnC,IAAI,CAACE,QAAQ;MACjC,IAAIkC,KAAI,GAAI,IAAI;IAClB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}