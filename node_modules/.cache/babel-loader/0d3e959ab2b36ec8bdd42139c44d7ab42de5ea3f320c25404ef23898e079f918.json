{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.last-index-of.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.index-of.js\";\n/**\n * Cut input selection into 2 part and return text before selection start\n */\nexport function getBeforeSelectionText(input) {\n  var selectionStart = input.selectionStart;\n  return input.value.slice(0, selectionStart);\n}\n/**\n * Find the last match prefix index\n */\nexport function getLastMeasureIndex(text) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var prefixList = Array.isArray(prefix) ? prefix : [prefix];\n  return prefixList.reduce(function (lastMatch, prefixStr) {\n    var lastIndex = text.lastIndexOf(prefixStr);\n    if (lastIndex > lastMatch.location) {\n      return {\n        location: lastIndex,\n        prefix: prefixStr\n      };\n    }\n    return lastMatch;\n  }, {\n    location: -1,\n    prefix: ''\n  });\n}\nfunction lower(_char) {\n  return (_char || '').toLowerCase();\n}\nfunction reduceText(text, targetText, split) {\n  var firstChar = text[0];\n  if (!firstChar || firstChar === split) {\n    return text;\n  }\n  // Reuse rest text as it can\n  var restText = text;\n  var targetTextLen = targetText.length;\n  for (var i = 0; i < targetTextLen; i += 1) {\n    if (lower(restText[i]) !== lower(targetText[i])) {\n      restText = restText.slice(i);\n      break;\n    } else if (i === targetTextLen - 1) {\n      restText = restText.slice(targetTextLen);\n    }\n  }\n  return restText;\n}\n/**\n * Paint targetText into current text:\n *  text: little@litest\n *  targetText: light\n *  => little @light test\n */\nexport function replaceWithMeasure(text, measureConfig) {\n  var measureLocation = measureConfig.measureLocation,\n    prefix = measureConfig.prefix,\n    targetText = measureConfig.targetText,\n    selectionStart = measureConfig.selectionStart,\n    split = measureConfig.split;\n  // Before text will append one space if have other text\n  var beforeMeasureText = text.slice(0, measureLocation);\n  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {\n    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);\n  }\n  if (beforeMeasureText) {\n    beforeMeasureText = \"\".concat(beforeMeasureText).concat(split);\n  }\n  // Cut duplicate string with current targetText\n  var restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);\n  if (restText.slice(0, split.length) === split) {\n    restText = restText.slice(split.length);\n  }\n  var connectedStartText = \"\".concat(beforeMeasureText).concat(prefix).concat(targetText).concat(split);\n  return {\n    text: \"\".concat(connectedStartText).concat(restText),\n    selectionLocation: connectedStartText.length\n  };\n}\nexport function setInputSelection(input, location) {\n  input.setSelectionRange(location, location);\n  /**\n   * Reset caret into view.\n   * Since this function always called by user control, it's safe to focus element.\n   */\n  input.blur();\n  input.focus();\n}\nexport function validateSearch(text, props) {\n  var split = props.split;\n  return !split || text.indexOf(split) === -1;\n}\nexport function filterOption(input, _ref) {\n  var _ref$value = _ref.value,\n    value = _ref$value === void 0 ? '' : _ref$value;\n  var lowerCase = input.toLowerCase();\n  return value.toLowerCase().indexOf(lowerCase) !== -1;\n}","map":{"version":3,"names":["getBeforeSelectionText","input","selectionStart","value","slice","getLastMeasureIndex","text","prefix","arguments","length","undefined","prefixList","Array","isArray","reduce","lastMatch","prefixStr","lastIndex","lastIndexOf","location","lower","char","toLowerCase","reduceText","targetText","split","firstChar","restText","targetTextLen","i","replaceWithMeasure","measureConfig","measureLocation","beforeMeasureText","concat","connectedStartText","selectionLocation","setInputSelection","setSelectionRange","blur","focus","validateSearch","props","indexOf","filterOption","_ref","_ref$value","lowerCase"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-mentions/src/util.js"],"sourcesContent":["/**\n * Cut input selection into 2 part and return text before selection start\n */\nexport function getBeforeSelectionText(input) {\n  const {\n    selectionStart\n  } = input;\n  return input.value.slice(0, selectionStart);\n}\n/**\n * Find the last match prefix index\n */\nexport function getLastMeasureIndex(text) {\n  let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  const prefixList = Array.isArray(prefix) ? prefix : [prefix];\n  return prefixList.reduce((lastMatch, prefixStr) => {\n    const lastIndex = text.lastIndexOf(prefixStr);\n    if (lastIndex > lastMatch.location) {\n      return {\n        location: lastIndex,\n        prefix: prefixStr\n      };\n    }\n    return lastMatch;\n  }, {\n    location: -1,\n    prefix: ''\n  });\n}\nfunction lower(char) {\n  return (char || '').toLowerCase();\n}\nfunction reduceText(text, targetText, split) {\n  const firstChar = text[0];\n  if (!firstChar || firstChar === split) {\n    return text;\n  }\n  // Reuse rest text as it can\n  let restText = text;\n  const targetTextLen = targetText.length;\n  for (let i = 0; i < targetTextLen; i += 1) {\n    if (lower(restText[i]) !== lower(targetText[i])) {\n      restText = restText.slice(i);\n      break;\n    } else if (i === targetTextLen - 1) {\n      restText = restText.slice(targetTextLen);\n    }\n  }\n  return restText;\n}\n/**\n * Paint targetText into current text:\n *  text: little@litest\n *  targetText: light\n *  => little @light test\n */\nexport function replaceWithMeasure(text, measureConfig) {\n  const {\n    measureLocation,\n    prefix,\n    targetText,\n    selectionStart,\n    split\n  } = measureConfig;\n  // Before text will append one space if have other text\n  let beforeMeasureText = text.slice(0, measureLocation);\n  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {\n    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);\n  }\n  if (beforeMeasureText) {\n    beforeMeasureText = `${beforeMeasureText}${split}`;\n  }\n  // Cut duplicate string with current targetText\n  let restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);\n  if (restText.slice(0, split.length) === split) {\n    restText = restText.slice(split.length);\n  }\n  const connectedStartText = `${beforeMeasureText}${prefix}${targetText}${split}`;\n  return {\n    text: `${connectedStartText}${restText}`,\n    selectionLocation: connectedStartText.length\n  };\n}\nexport function setInputSelection(input, location) {\n  input.setSelectionRange(location, location);\n  /**\n   * Reset caret into view.\n   * Since this function always called by user control, it's safe to focus element.\n   */\n  input.blur();\n  input.focus();\n}\nexport function validateSearch(text, props) {\n  const {\n    split\n  } = props;\n  return !split || text.indexOf(split) === -1;\n}\nexport function filterOption(input, _ref) {\n  let {\n    value = ''\n  } = _ref;\n  const lowerCase = input.toLowerCase();\n  return value.toLowerCase().indexOf(lowerCase) !== -1;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}