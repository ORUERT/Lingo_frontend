{"ast":null,"code":"import { computed } from 'vue';\nimport { useInjectMenu } from './useMenuContext';\nexport default function useDirectionStyle(level) {\n  var _useInjectMenu = useInjectMenu(),\n    mode = _useInjectMenu.mode,\n    rtl = _useInjectMenu.rtl,\n    inlineIndent = _useInjectMenu.inlineIndent;\n  return computed(function () {\n    return mode.value !== 'inline' ? null : rtl.value ? {\n      paddingRight: \"\".concat(level.value * inlineIndent.value, \"px\")\n    } : {\n      paddingLeft: \"\".concat(level.value * inlineIndent.value, \"px\")\n    };\n  });\n}","map":{"version":3,"names":["computed","useInjectMenu","useDirectionStyle","level","_useInjectMenu","mode","rtl","inlineIndent","value","paddingRight","concat","paddingLeft"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/menu/src/hooks/useDirectionStyle.js"],"sourcesContent":["import { computed } from 'vue';\nimport { useInjectMenu } from './useMenuContext';\nexport default function useDirectionStyle(level) {\n  const {\n    mode,\n    rtl,\n    inlineIndent\n  } = useInjectMenu();\n  return computed(() => mode.value !== 'inline' ? null : rtl.value ? {\n    paddingRight: `${level.value * inlineIndent.value}px`\n  } : {\n    paddingLeft: `${level.value * inlineIndent.value}px`\n  });\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,KAAK;AAC9B,SAASC,aAAa,QAAQ,kBAAkB;AAChD,eAAe,SAASC,iBAAiBA,CAACC,KAAK,EAAE;EAC/C,IAAAC,cAAA,GAIIH,aAAa,CAAC,CAAC;IAHjBI,IAAI,GAAAD,cAAA,CAAJC,IAAI;IACJC,GAAG,GAAAF,cAAA,CAAHE,GAAG;IACHC,YAAY,GAAAH,cAAA,CAAZG,YAAY;EAEd,OAAOP,QAAQ,CAAC;IAAA,OAAMK,IAAI,CAACG,KAAK,KAAK,QAAQ,GAAG,IAAI,GAAGF,GAAG,CAACE,KAAK,GAAG;MACjEC,YAAY,KAAAC,MAAA,CAAKP,KAAK,CAACK,KAAK,GAAGD,YAAY,CAACC,KAAK;IACnD,CAAC,GAAG;MACFG,WAAW,KAAAD,MAAA,CAAKP,KAAK,CAACK,KAAK,GAAGD,YAAY,CAACC,KAAK;IAClD,CAAC;EAAA,EAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}