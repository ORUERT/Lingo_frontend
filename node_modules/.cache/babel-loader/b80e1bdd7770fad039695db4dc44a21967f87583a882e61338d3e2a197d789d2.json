{"ast":null,"code":"import _toConsumableArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _slicedToArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _typeof from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nvar OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _extends(_extends({}, baseSelectPropsWithoutPrivate()), {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      \"default\": undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    virtual: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      \"default\": undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n      attrs = _ref.attrs,\n      slots = _ref.slots;\n    var mergedId = useId(toRef(props, 'id'));\n    var multiple = computed(function () {\n      return isMultiple(props.mode);\n    });\n    var childrenAsData = computed(function () {\n      return !!(!props.options && props.children);\n    });\n    var mergedFilterOption = computed(function () {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n      return props.filterOption;\n    });\n    // ========================= FieldNames =========================\n    var mergedFieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames, childrenAsData.value);\n    });\n    // =========================== Search ===========================\n    var _useMergedState = useMergedState('', {\n        value: computed(function () {\n          return props.searchValue !== undefined ? props.searchValue : props.inputValue;\n        }),\n        postState: function postState(search) {\n          return search || '';\n        }\n      }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSearchValue = _useMergedState2[0],\n      setSearchValue = _useMergedState2[1];\n    // =========================== Option ===========================\n    var parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    var valueOptions = parsedOptions.valueOptions,\n      labelOptions = parsedOptions.labelOptions,\n      mergedOptions = parsedOptions.options;\n    // ========================= Wrap Value =========================\n    var convert2LabelValues = function convert2LabelValues(draftValues) {\n      // Convert to array\n      var valueList = toArray(draftValues);\n      // Convert to labelInValue type\n      return valueList.map(function (val) {\n        var _a, _b;\n        var rawValue;\n        var rawLabel;\n        var rawKey;\n        var rawDisabled;\n        // Fill label & value\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_a = val.value) !== null && _a !== void 0 ? _a : rawKey;\n        }\n        var option = valueOptions.value.get(rawValue);\n        if (option) {\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_b = option === null || option === void 0 ? void 0 : option.key) !== null && _b !== void 0 ? _b : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n          // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option: option\n        };\n      });\n    };\n    // =========================== Values ===========================\n    var _useMergedState3 = useMergedState(props.defaultValue, {\n        value: toRef(props, 'value')\n      }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      internalValue = _useMergedState4[0],\n      setInternalValue = _useMergedState4[1];\n    // Merged value with LabelValueType\n    var rawLabeledValues = computed(function () {\n      var _a;\n      var values = convert2LabelValues(internalValue.value);\n      // combobox no need save value when it's empty\n      if (props.mode === 'combobox' && !((_a = values[0]) === null || _a === void 0 ? void 0 : _a.value)) {\n        return [];\n      }\n      return values;\n    });\n    // Fill label with cache to avoid option remove\n    var _useCache = useCache(rawLabeledValues, valueOptions),\n      _useCache2 = _slicedToArray(_useCache, 2),\n      mergedValues = _useCache2[0],\n      getMixedOption = _useCache2[1];\n    var displayValues = computed(function () {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        var firstValue = mergedValues.value[0];\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n      return mergedValues.value.map(function (item) {\n        var _a;\n        return _extends(_extends({}, item), {\n          label: (_a = typeof item.label === 'function' ? item.label() : item.label) !== null && _a !== void 0 ? _a : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n    var rawValues = computed(function () {\n      return new Set(mergedValues.value.map(function (val) {\n        return val.value;\n      }));\n    });\n    watchEffect(function () {\n      var _a;\n      if (props.mode === 'combobox') {\n        var strValue = (_a = mergedValues.value[0]) === null || _a === void 0 ? void 0 : _a.value;\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    });\n    // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n    var createTagOption = function createTagOption(val, label) {\n      var _ref2;\n      var mergedLabel = label !== null && label !== void 0 ? label : val;\n      return _ref2 = {}, _defineProperty(_ref2, mergedFieldNames.value.value, val), _defineProperty(_ref2, mergedFieldNames.value.label, mergedLabel), _ref2;\n    };\n    // Fill tag as option if mode is `tags`\n    var filledTagOptions = shallowRef();\n    watchEffect(function () {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      }\n      // >>> Tag mode\n      var cloneOptions = mergedOptions.value.slice();\n      // Check if value exist in options (include new patch item)\n      var existOptions = function existOptions(val) {\n        return valueOptions.value.has(val);\n      };\n      // Fill current value as option\n      _toConsumableArray(mergedValues.value).sort(function (a, b) {\n        return a.value < b.value ? -1 : 1;\n      }).forEach(function (item) {\n        var val = item.value;\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n      filledTagOptions.value = cloneOptions;\n    });\n    var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp'));\n    // Fill options with search value if needed\n    var filledSearchOptions = computed(function () {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(function (item) {\n        return item[props.optionFilterProp || 'value'] === mergedSearchValue.value;\n      })) {\n        return filteredOptions.value;\n      }\n      // Fill search value as option\n      return [createTagOption(mergedSearchValue.value)].concat(_toConsumableArray(filteredOptions.value));\n    });\n    var orderedFilteredOptions = computed(function () {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n      return _toConsumableArray(filledSearchOptions.value).sort(function (a, b) {\n        return props.filterSort(a, b);\n      });\n    });\n    var displayOptions = computed(function () {\n      return flattenOptions(orderedFilteredOptions.value, {\n        fieldNames: mergedFieldNames.value,\n        childrenAsData: childrenAsData.value\n      });\n    });\n    // =========================== Change ===========================\n    var triggerChange = function triggerChange(values) {\n      var labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n      if (props.onChange && (\n      // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some(function (newVal, index) {\n        var _a;\n        return ((_a = mergedValues.value[index]) === null || _a === void 0 ? void 0 : _a.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        var returnValues = props.labelInValue ? labeledValues.map(function (v) {\n          return _extends(_extends({}, v), {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(function (v) {\n          return v.value;\n        });\n        var returnOptions = labeledValues.map(function (v) {\n          return injectPropsWithOption(getMixedOption(v.value));\n        });\n        props.onChange(\n        // Value\n        multiple.value ? returnValues : returnValues[0],\n        // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    };\n    // ======================= Accessibility ========================\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeValue = _useState2[0],\n      setActiveValue = _useState2[1];\n    var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      accessibilityIndex = _useState4[0],\n      setAccessibilityIndex = _useState4[1];\n    var mergedDefaultActiveFirstOption = computed(function () {\n      return props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox';\n    });\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref3$source = _ref3.source,\n        source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n      setAccessibilityIndex(index);\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    };\n    // ========================= OptionList =========================\n    var triggerSelect = function triggerSelect(val, selected) {\n      var getSelectEnt = function getSelectEnt() {\n        var _a;\n        var option = getMixedOption(val);\n        var originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel: originLabel,\n          value: val,\n          key: (_a = option === null || option === void 0 ? void 0 : option.key) !== null && _a !== void 0 ? _a : val\n        } : val, injectPropsWithOption(option)];\n      };\n      if (selected && props.onSelect) {\n        var _getSelectEnt = getSelectEnt(),\n          _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n          wrappedValue = _getSelectEnt2[0],\n          option = _getSelectEnt2[1];\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        var _getSelectEnt3 = getSelectEnt(),\n          _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n          _wrappedValue = _getSelectEnt4[0],\n          _option = _getSelectEnt4[1];\n        props.onDeselect(_wrappedValue, _option);\n      }\n    };\n    // Used for OptionList selection\n    var onInternalSelect = function onInternalSelect(val, info) {\n      var cloneValues;\n      // Single mode always trigger select only with option list\n      var mergedSelect = multiple.value ? info.selected : true;\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [].concat(_toConsumableArray(mergedValues.value), [val]) : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(function (v) {\n          return v.value !== val;\n        });\n      }\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect);\n      // Clean search value if single or configured\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    };\n    // ======================= Display Change =======================\n    // BaseSelect display values change\n    var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n      triggerChange(nextValues);\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(function (item) {\n          triggerSelect(item.value, false);\n        });\n      }\n    };\n    // =========================== Search ===========================\n    var onInternalSearch = function onInternalSearch(searchText, info) {\n      var _a;\n      setSearchValue(searchText);\n      setActiveValue(null);\n      // [Submit] Tag mode should flush input\n      if (info.source === 'submit') {\n        var formatted = (searchText || '').trim();\n        // prevent empty tags from appearing when you click the Enter button\n        if (formatted) {\n          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), [formatted])));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n        return;\n      }\n      if (info.source !== 'blur') {\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n        (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText);\n      }\n    };\n    var onInternalSearchSplit = function onInternalSearchSplit(words) {\n      var patchValues = words;\n      if (props.mode !== 'tags') {\n        patchValues = words.map(function (word) {\n          var opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        });\n      }\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), _toConsumableArray(patchValues))));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true);\n      });\n    };\n    var realVirtual = computed(function () {\n      return props.virtual !== false && props.dropdownMatchSelectWidth !== false;\n    });\n    useProvideSelectProps(toReactive(_extends(_extends({}, parsedOptions), {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData: childrenAsData\n    })));\n    // ========================== Warning ===========================\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(function () {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n    var selectRef = ref();\n    expose({\n      focus: function focus() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      scrollTo: function scrollTo(arg) {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    var pickProps = computed(function () {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames',\n      // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue',\n      // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth',\n      // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight',\n      // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return function () {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex.value)\n      }), slots);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_extends","createVNode","_createVNode","resolveDirective","_resolveDirective","BaseSelect","baseSelectPropsWithoutPrivate","isMultiple","OptionList","useOptions","useProvideSelectProps","useId","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","toArray","useFilterOptions","useCache","computed","defineComponent","ref","shallowRef","toRef","watchEffect","PropTypes","initDefaultProps","useMergedState","useState","toReactive","omit","OMIT_DOM_PROPS","selectProps","prefixCls","String","id","backfill","type","Boolean","undefined","fieldNames","Object","inputValue","searchValue","onSearch","Function","autoClearSearchValue","onSelect","onDeselect","filterOption","filterSort","optionFilterProp","optionLabelProp","options","Array","defaultActiveFirstOption","virtual","listHeight","Number","listItemHeight","menuItemSelectedIcon","any","mode","labelInValue","value","defaultValue","onChange","children","isRawValue","_typeof","compatConfig","MODE","name","inheritAttrs","props","dropdownMatchSelectWidth","setup","_ref","expose","attrs","slots","mergedId","multiple","childrenAsData","mergedFilterOption","mergedFieldNames","_useMergedState","postState","search","_useMergedState2","_slicedToArray","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","draftValues","valueList","map","val","_a","_b","rawValue","rawLabel","rawKey","rawDisabled","key","label","option","get","disabled","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","rawValues","Set","strValue","flush","createTagOption","_ref2","mergedLabel","_defineProperty","filledTagOptions","cloneOptions","slice","existOptions","has","_toConsumableArray","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","returnValues","v","originLabel","returnOptions","_useState","_useState2","activeValue","setActiveValue","_useState3","_useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref3","arguments","_ref3$source","source","triggerSelect","selected","getSelectEnt","_getSelectEnt","_getSelectEnt2","wrappedValue","_getSelectEnt3","_getSelectEnt4","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","onInternalSearch","searchText","formatted","trim","newRawValues","from","call","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","realVirtual","process","env","NODE_ENV","selectRef","focus","blur","scrollTo","arg","pickProps"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-select/Select.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nconst OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _extends(_extends({}, baseSelectPropsWithoutPrivate()), {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      default: undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      default: undefined\n    },\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      default: undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\nfunction isRawValue(value) {\n  return !value || typeof value !== 'object';\n}\nexport default defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup(props, _ref) {\n    let {\n      expose,\n      attrs,\n      slots\n    } = _ref;\n    const mergedId = useId(toRef(props, 'id'));\n    const multiple = computed(() => isMultiple(props.mode));\n    const childrenAsData = computed(() => !!(!props.options && props.children));\n    const mergedFilterOption = computed(() => {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n      return props.filterOption;\n    });\n    // ========================= FieldNames =========================\n    const mergedFieldNames = computed(() => fillFieldNames(props.fieldNames, childrenAsData.value));\n    // =========================== Search ===========================\n    const [mergedSearchValue, setSearchValue] = useMergedState('', {\n      value: computed(() => props.searchValue !== undefined ? props.searchValue : props.inputValue),\n      postState: search => search || ''\n    });\n    // =========================== Option ===========================\n    const parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    const {\n      valueOptions,\n      labelOptions,\n      options: mergedOptions\n    } = parsedOptions;\n    // ========================= Wrap Value =========================\n    const convert2LabelValues = draftValues => {\n      // Convert to array\n      const valueList = toArray(draftValues);\n      // Convert to labelInValue type\n      return valueList.map(val => {\n        var _a, _b;\n        let rawValue;\n        let rawLabel;\n        let rawKey;\n        let rawDisabled;\n        // Fill label & value\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_a = val.value) !== null && _a !== void 0 ? _a : rawKey;\n        }\n        const option = valueOptions.value.get(rawValue);\n        if (option) {\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_b = option === null || option === void 0 ? void 0 : option.key) !== null && _b !== void 0 ? _b : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled;\n          // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option\n        };\n      });\n    };\n    // =========================== Values ===========================\n    const [internalValue, setInternalValue] = useMergedState(props.defaultValue, {\n      value: toRef(props, 'value')\n    });\n    // Merged value with LabelValueType\n    const rawLabeledValues = computed(() => {\n      var _a;\n      const values = convert2LabelValues(internalValue.value);\n      // combobox no need save value when it's empty\n      if (props.mode === 'combobox' && !((_a = values[0]) === null || _a === void 0 ? void 0 : _a.value)) {\n        return [];\n      }\n      return values;\n    });\n    // Fill label with cache to avoid option remove\n    const [mergedValues, getMixedOption] = useCache(rawLabeledValues, valueOptions);\n    const displayValues = computed(() => {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        const firstValue = mergedValues.value[0];\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n      return mergedValues.value.map(item => {\n        var _a;\n        return _extends(_extends({}, item), {\n          label: (_a = typeof item.label === 'function' ? item.label() : item.label) !== null && _a !== void 0 ? _a : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n    const rawValues = computed(() => new Set(mergedValues.value.map(val => val.value)));\n    watchEffect(() => {\n      var _a;\n      if (props.mode === 'combobox') {\n        const strValue = (_a = mergedValues.value[0]) === null || _a === void 0 ? void 0 : _a.value;\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    });\n    // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n    const createTagOption = (val, label) => {\n      const mergedLabel = label !== null && label !== void 0 ? label : val;\n      return {\n        [mergedFieldNames.value.value]: val,\n        [mergedFieldNames.value.label]: mergedLabel\n      };\n    };\n    // Fill tag as option if mode is `tags`\n    const filledTagOptions = shallowRef();\n    watchEffect(() => {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      }\n      // >>> Tag mode\n      const cloneOptions = mergedOptions.value.slice();\n      // Check if value exist in options (include new patch item)\n      const existOptions = val => valueOptions.value.has(val);\n      // Fill current value as option\n      [...mergedValues.value].sort((a, b) => a.value < b.value ? -1 : 1).forEach(item => {\n        const val = item.value;\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n      filledTagOptions.value = cloneOptions;\n    });\n    const filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp'));\n    // Fill options with search value if needed\n    const filledSearchOptions = computed(() => {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(item => item[props.optionFilterProp || 'value'] === mergedSearchValue.value)) {\n        return filteredOptions.value;\n      }\n      // Fill search value as option\n      return [createTagOption(mergedSearchValue.value), ...filteredOptions.value];\n    });\n    const orderedFilteredOptions = computed(() => {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n      return [...filledSearchOptions.value].sort((a, b) => props.filterSort(a, b));\n    });\n    const displayOptions = computed(() => flattenOptions(orderedFilteredOptions.value, {\n      fieldNames: mergedFieldNames.value,\n      childrenAsData: childrenAsData.value\n    }));\n    // =========================== Change ===========================\n    const triggerChange = values => {\n      const labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n      if (props.onChange && (\n      // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some((newVal, index) => {\n        var _a;\n        return ((_a = mergedValues.value[index]) === null || _a === void 0 ? void 0 : _a.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        const returnValues = props.labelInValue ? labeledValues.map(v => {\n          return _extends(_extends({}, v), {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(v => v.value);\n        const returnOptions = labeledValues.map(v => injectPropsWithOption(getMixedOption(v.value)));\n        props.onChange(\n        // Value\n        multiple.value ? returnValues : returnValues[0],\n        // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    };\n    // ======================= Accessibility ========================\n    const [activeValue, setActiveValue] = useState(null);\n    const [accessibilityIndex, setAccessibilityIndex] = useState(0);\n    const mergedDefaultActiveFirstOption = computed(() => props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox');\n    const onActiveValue = function (active, index) {\n      let {\n        source = 'keyboard'\n      } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      setAccessibilityIndex(index);\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    };\n    // ========================= OptionList =========================\n    const triggerSelect = (val, selected) => {\n      const getSelectEnt = () => {\n        var _a;\n        const option = getMixedOption(val);\n        const originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel,\n          value: val,\n          key: (_a = option === null || option === void 0 ? void 0 : option.key) !== null && _a !== void 0 ? _a : val\n        } : val, injectPropsWithOption(option)];\n      };\n      if (selected && props.onSelect) {\n        const [wrappedValue, option] = getSelectEnt();\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        const [wrappedValue, option] = getSelectEnt();\n        props.onDeselect(wrappedValue, option);\n      }\n    };\n    // Used for OptionList selection\n    const onInternalSelect = (val, info) => {\n      let cloneValues;\n      // Single mode always trigger select only with option list\n      const mergedSelect = multiple.value ? info.selected : true;\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [...mergedValues.value, val] : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(v => v.value !== val);\n      }\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect);\n      // Clean search value if single or configured\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    };\n    // ======================= Display Change =======================\n    // BaseSelect display values change\n    const onDisplayValuesChange = (nextValues, info) => {\n      triggerChange(nextValues);\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(item => {\n          triggerSelect(item.value, false);\n        });\n      }\n    };\n    // =========================== Search ===========================\n    const onInternalSearch = (searchText, info) => {\n      var _a;\n      setSearchValue(searchText);\n      setActiveValue(null);\n      // [Submit] Tag mode should flush input\n      if (info.source === 'submit') {\n        const formatted = (searchText || '').trim();\n        // prevent empty tags from appearing when you click the Enter button\n        if (formatted) {\n          const newRawValues = Array.from(new Set([...rawValues.value, formatted]));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n        return;\n      }\n      if (info.source !== 'blur') {\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n        (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText);\n      }\n    };\n    const onInternalSearchSplit = words => {\n      let patchValues = words;\n      if (props.mode !== 'tags') {\n        patchValues = words.map(word => {\n          const opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(val => val !== undefined);\n      }\n      const newRawValues = Array.from(new Set([...rawValues.value, ...patchValues]));\n      triggerChange(newRawValues);\n      newRawValues.forEach(newRawValue => {\n        triggerSelect(newRawValue, true);\n      });\n    };\n    const realVirtual = computed(() => props.virtual !== false && props.dropdownMatchSelectWidth !== false);\n    useProvideSelectProps(toReactive(_extends(_extends({}, parsedOptions), {\n      flattenOptions: displayOptions,\n      onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData\n    })));\n    // ========================== Warning ===========================\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n    const selectRef = ref();\n    expose({\n      focus() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur() {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      scrollTo(arg) {\n        var _a;\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    const pickProps = computed(() => {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames',\n      // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue',\n      // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth',\n      // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight',\n      // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return () => {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": `${mergedId}_list_${accessibilityIndex.value}`\n      }), slots);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}