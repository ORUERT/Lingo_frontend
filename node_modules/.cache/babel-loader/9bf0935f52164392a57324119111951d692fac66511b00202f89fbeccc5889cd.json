{"ast":null,"code":"import \"core-js/modules/es.date.now.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { computed, watchEffect } from 'vue';\nimport { updateCSS, removeCSS } from '../../vc-util/Dom/dynamicCSS';\nimport getScrollBarSize from '../../_util/getScrollBarSize';\nvar UNIQUE_ID = \"vc-util-locker-\".concat(Date.now());\nvar uuid = 0;\n/**../vc-util/Dom/dynam\n * Test usage export. Do not use in your production\n */\nexport function isBodyOverflowing() {\n  return document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth;\n}\nexport default function useScrollLocker(lock) {\n  var mergedLock = computed(function () {\n    return !!lock && !!lock.value;\n  });\n  uuid += 1;\n  var id = \"\".concat(UNIQUE_ID, \"_\").concat(uuid);\n  watchEffect(function (onClear) {\n    if (mergedLock.value) {\n      var scrollbarSize = getScrollBarSize();\n      var isOverflow = isBodyOverflowing();\n      updateCSS(\"\\nhtml body {\\n  overflow-y: hidden;\\n  \".concat(isOverflow ? \"width: calc(100% - \".concat(scrollbarSize, \"px);\") : '', \"\\n}\"), id);\n    } else {\n      removeCSS(id);\n    }\n    onClear(function () {\n      removeCSS(id);\n    });\n  }, {\n    flush: 'post'\n  });\n}","map":{"version":3,"names":["computed","watchEffect","updateCSS","removeCSS","getScrollBarSize","UNIQUE_ID","concat","Date","now","uuid","isBodyOverflowing","document","body","scrollHeight","window","innerHeight","documentElement","clientHeight","innerWidth","offsetWidth","useScrollLocker","lock","mergedLock","value","id","onClear","scrollbarSize","isOverflow","flush"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/_util/hooks/useScrollLocker.js"],"sourcesContent":["import { computed, watchEffect } from 'vue';\nimport { updateCSS, removeCSS } from '../../vc-util/Dom/dynamicCSS';\nimport getScrollBarSize from '../../_util/getScrollBarSize';\nconst UNIQUE_ID = `vc-util-locker-${Date.now()}`;\nlet uuid = 0;\n/**../vc-util/Dom/dynam\n * Test usage export. Do not use in your production\n */\nexport function isBodyOverflowing() {\n  return document.body.scrollHeight > (window.innerHeight || document.documentElement.clientHeight) && window.innerWidth > document.body.offsetWidth;\n}\nexport default function useScrollLocker(lock) {\n  const mergedLock = computed(() => !!lock && !!lock.value);\n  uuid += 1;\n  const id = `${UNIQUE_ID}_${uuid}`;\n  watchEffect(onClear => {\n    if (mergedLock.value) {\n      const scrollbarSize = getScrollBarSize();\n      const isOverflow = isBodyOverflowing();\n      updateCSS(`\nhtml body {\n  overflow-y: hidden;\n  ${isOverflow ? `width: calc(100% - ${scrollbarSize}px);` : ''}\n}`, id);\n    } else {\n      removeCSS(id);\n    }\n    onClear(() => {\n      removeCSS(id);\n    });\n  }, {\n    flush: 'post'\n  });\n}"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,KAAK;AAC3C,SAASC,SAAS,EAAEC,SAAS,QAAQ,8BAA8B;AACnE,OAAOC,gBAAgB,MAAM,8BAA8B;AAC3D,IAAMC,SAAS,qBAAAC,MAAA,CAAqBC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAE;AAChD,IAAIC,IAAI,GAAG,CAAC;AACZ;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,OAAOC,QAAQ,CAACC,IAAI,CAACC,YAAY,IAAIC,MAAM,CAACC,WAAW,IAAIJ,QAAQ,CAACK,eAAe,CAACC,YAAY,CAAC,IAAIH,MAAM,CAACI,UAAU,GAAGP,QAAQ,CAACC,IAAI,CAACO,WAAW;AACpJ;AACA,eAAe,SAASC,eAAeA,CAACC,IAAI,EAAE;EAC5C,IAAMC,UAAU,GAAGtB,QAAQ,CAAC;IAAA,OAAM,CAAC,CAACqB,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,KAAK;EAAA,EAAC;EACzDd,IAAI,IAAI,CAAC;EACT,IAAMe,EAAE,MAAAlB,MAAA,CAAMD,SAAS,OAAAC,MAAA,CAAIG,IAAI,CAAE;EACjCR,WAAW,CAAC,UAAAwB,OAAO,EAAI;IACrB,IAAIH,UAAU,CAACC,KAAK,EAAE;MACpB,IAAMG,aAAa,GAAGtB,gBAAgB,CAAC,CAAC;MACxC,IAAMuB,UAAU,GAAGjB,iBAAiB,CAAC,CAAC;MACtCR,SAAS,4CAAAI,MAAA,CAGXqB,UAAU,yBAAArB,MAAA,CAAyBoB,aAAa,YAAS,EAAE,UAC3DF,EAAE,CAAC;IACH,CAAC,MAAM;MACLrB,SAAS,CAACqB,EAAE,CAAC;IACf;IACAC,OAAO,CAAC,YAAM;MACZtB,SAAS,CAACqB,EAAE,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE;IACDI,KAAK,EAAE;EACT,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}