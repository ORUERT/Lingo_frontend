{"ast":null,"code":"import _toConsumableArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { PresetColors } from '../theme/interface';\nvar inverseColors = PresetColors.map(function (color) {\n  return \"\".concat(color, \"-inverse\");\n});\nexport var PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nexport function isPresetColor(color) {\n  var includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [].concat(_toConsumableArray(inverseColors), _toConsumableArray(PresetColors)).includes(color);\n  }\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}","map":{"version":3,"names":["PresetColors","inverseColors","map","color","concat","PresetStatusColorTypes","isPresetColor","includeInverse","arguments","length","undefined","_toConsumableArray","includes","isPresetStatusColor"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/_util/colors.js"],"sourcesContent":["import { PresetColors } from '../theme/interface';\nconst inverseColors = PresetColors.map(color => `${color}-inverse`);\nexport const PresetStatusColorTypes = ['success', 'processing', 'error', 'default', 'warning'];\n/**\n * determine if the color keyword belongs to the `Ant Design` {@link PresetColors}.\n * @param color color to be judged\n * @param includeInverse whether to include reversed colors\n */\nexport function isPresetColor(color) {\n  let includeInverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (includeInverse) {\n    return [...inverseColors, ...PresetColors].includes(color);\n  }\n  return PresetColors.includes(color);\n}\nexport function isPresetStatusColor(color) {\n  return PresetStatusColorTypes.includes(color);\n}"],"mappings":";;;;;AAAA,SAASA,YAAY,QAAQ,oBAAoB;AACjD,IAAMC,aAAa,GAAGD,YAAY,CAACE,GAAG,CAAC,UAAAC,KAAK;EAAA,UAAAC,MAAA,CAAOD,KAAK;AAAA,CAAU,CAAC;AACnE,OAAO,IAAME,sBAAsB,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC;AAC9F;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACH,KAAK,EAAE;EACnC,IAAII,cAAc,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAC7F,IAAID,cAAc,EAAE;IAClB,OAAO,GAAAH,MAAA,CAAAO,kBAAA,CAAIV,aAAa,GAAAU,kBAAA,CAAKX,YAAY,GAAEY,QAAQ,CAACT,KAAK,CAAC;EAC5D;EACA,OAAOH,YAAY,CAACY,QAAQ,CAACT,KAAK,CAAC;AACrC;AACA,OAAO,SAASU,mBAAmBA,CAACV,KAAK,EAAE;EACzC,OAAOE,sBAAsB,CAACO,QAAQ,CAACT,KAAK,CAAC;AAC/C"},"metadata":{},"sourceType":"module","externalDependencies":[]}