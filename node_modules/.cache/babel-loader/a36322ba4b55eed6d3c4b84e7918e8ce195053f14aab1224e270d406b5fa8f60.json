{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeStyle as _normalizeStyle, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  style: {\n    \"padding\": \"10px\",\n    \"margin-bottom\": \"50px\"\n  }\n};\nvar _hoisted_2 = {\n  \"class\": \"chat-box\"\n};\nvar _hoisted_3 = {\n  \"class\": \"chat-title\"\n};\nvar _hoisted_4 = [\"innerHTML\"];\nvar _hoisted_5 = {\n  \"class\": \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_message_outlined = _resolveComponent(\"message-outlined\");\n  var _component_a_input = _resolveComponent(\"a-input\");\n  var _component_a_input_group = _resolveComponent(\"a-input-group\");\n  var _component_a_col = _resolveComponent(\"a-col\");\n  var _component_a_row = _resolveComponent(\"a-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_a_row, null, {\n    \"default\": _withCtx(function () {\n      return [_createVNode(_component_a_col, {\n        \"class\": \"chat-col\",\n        span: 16\n      }, {\n        \"default\": _withCtx(function () {\n          return [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, \" Web聊天室（\" + _toDisplayString(_ctx.chatUser) + \"） \", 1 /* TEXT */), _createElementVNode(\"div\", {\n            \"class\": \"chat-content\",\n            innerHTML: _ctx.content\n          }, null, 8 /* PROPS */, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_a_input_group, null, {\n            \"default\": _withCtx(function () {\n              return [_createVNode(_component_a_input, {\n                \"class\": \"chat-a-input\",\n                value: _ctx.text,\n                \"onUpdate:value\": _cache[0] || (_cache[0] = function ($event) {\n                  return _ctx.text = $event;\n                }),\n                size: \"small\"\n              }, {\n                suffix: _withCtx(function () {\n                  return [_createVNode(_component_message_outlined, {\n                    style: _normalizeStyle({\n                      fontSize: '20px',\n                      color: _ctx.isTextEmpty ? '#808080' : '#000000'\n                    }),\n                    onClick: _ctx.onck\n                  }, null, 8 /* PROPS */, [\"style\", \"onClick\"])];\n                }),\n                _: 1 /* STABLE */\n              }, 8 /* PROPS */, [\"value\"])];\n            }),\n            _: 1 /* STABLE */\n          })])])];\n        }),\n\n        _: 1 /* STABLE */\n      })];\n    }),\n\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["style","_createElementBlock","_hoisted_1","_createVNode","_component_a_row","_component_a_col","span","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","chatUser","innerHTML","content","_hoisted_5","_component_a_input_group","_component_a_input","value","text","$event","size","suffix","_withCtx","_component_message_outlined","_normalizeStyle","fontSize","color","isTextEmpty","onClick","onck"],"sources":["C:\\Users\\zhouy\\WebstormProjects\\lingo\\src\\view\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <div  style=\"padding: 10px; margin-bottom: 50px\">\r\n    <a-row >\r\n      <a-col class=\"chat-col\" :span=\"16\">\r\n        <div class=\"chat-box\">\r\n          <div class=\"chat-title\">\r\n            Web聊天室（{{ chatUser }}）\r\n          </div>\r\n          <div class=\"chat-content\" v-html=\"content\"></div>\r\n          <div class=\"chat-input\">\r\n            <a-input-group >\r\n              <a-input class=\"chat-a-input\" v-model:value=\"text\" size=\"small\">\r\n                <template #suffix>\r\n                  <message-outlined :style=\"{fontSize: '20px', color: isTextEmpty ? '#808080' : '#000000'}\" @click=\"onck\" />\r\n                </template>\r\n              </a-input>\r\n            </a-input-group>\r\n          </div>\r\n\r\n        </div>\r\n      </a-col>\r\n    </a-row>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { MessageOutlined  } from '@ant-design/icons-vue';\r\nimport axios from \"@/axios\";\r\nimport {defineComponent} from \"vue\";\r\n// import request from \"@/utils/request\";\r\n// let socket;\r\nexport default defineComponent( {\r\n  components: {\r\n    MessageOutlined\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      user: {},\r\n      isCollapse: false,\r\n      users: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: ''\r\n    }\r\n  },\r\n  computed: {\r\n    isTextEmpty() {\r\n      return this.text.length === 0; // 判断文本是否为空\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    onck() {\r\n      if(!this.isTextEmpty()){\r\n        this.send()\r\n      }\r\n      console.log('onck')\r\n    },\r\n    send() {\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        // 组装待发送的消息 json\r\n        // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n        let message = {from: this.user.username, to: this.chatUser, text: this.text}\r\n        axios.post('/message',message,{\r\n          headers:{\r\n            'Content-Type':'application/json',\r\n            'Authorization':localStorage.getItem('token')\r\n          }\r\n        }).then(res=>{\r\n          if(res.data.status === 100){\r\n            //create message\r\n            // socket.send(JSON.stringify(message));  // 将组装好的json发送给服务端，由服务端进行转发\r\n            this.messages.push({user: this.user.username, text: this.text})\r\n            // 构建消息内容，本人消息\r\n            this.createContent(null, this.user.username, this.text)\r\n            this.text = '';\r\n          }else{\r\n            //create error message\r\n            // this.$message.error('登录失败')\r\n          }\r\n        }).catch(err=>{\r\n          console.log(err)\r\n        })\r\n      }\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"a-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"a-col a-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip left\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"a-col a-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"a-avatar a-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"a-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"a-col a-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"a-avatar a-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"a-col a-col-22\\\" style=\\\"text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip right\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      console.log(html)\r\n      this.content += html;\r\n    },\r\n    init() {\r\n      this.user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {}\r\n      let username = this.user.username;\r\n      let _this = this;\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        let socketUrl = \"ws://localhost:9090/imserver/\" + username;\r\n\r\n      }\r\n    }\r\n  }\r\n})\r\n</script>\r\n<style>\r\n@import \"../scss/pages/_chat.scss\";\r\n</style>\r\n"],"mappings":";;EACQA,KAA0C,EAA1C;IAAA;IAAA;EAAA;AAA0C;;EAGrC,SAAM;AAAU;;EACd,SAAM;AAAY;;;EAIlB,SAAM;AAAY;;;;;;;uBAR/BC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJC,YAAA,CAmBQC,gBAAA;wBAlBN;MAAA,OAiBQ,CAjBRD,YAAA,CAiBQE,gBAAA;QAjBD,SAAM,UAAU;QAAEC,IAAI,EAAE;;4BAC7B;UAAA,OAeM,CAfNC,mBAAA,CAeM,OAfNC,UAeM,GAdJD,mBAAA,CAEM,OAFNE,UAEM,EAFkB,UACf,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,QAAQ,IAAG,IACvB,iBACAL,mBAAA,CAAiD;YAA5C,SAAM,cAAc;YAACM,SAAgB,EAARF,IAAA,CAAAG;+CAClCP,mBAAA,CAQM,OARNQ,UAQM,GAPJZ,YAAA,CAMgBa,wBAAA;gCALd;cAAA,OAIU,CAJVb,YAAA,CAIUc,kBAAA;gBAJD,SAAM,cAAc;gBAASC,KAAK,EAAEP,IAAA,CAAAQ,IAAI;;yBAAJR,IAAA,CAAAQ,IAAI,GAAAC,MAAA;gBAAA;gBAAEC,IAAI,EAAC;;gBAC3CC,MAAM,EAAAC,QAAA,CACf;kBAAA,OAA0G,CAA1GpB,YAAA,CAA0GqB,2BAAA;oBAAvFxB,KAAK,EAAAyB,eAAA;sBAAAC,QAAA;sBAAAC,KAAA,EAA4BhB,IAAA,CAAAiB,WAAW;oBAAA;oBAA4BC,OAAK,EAAElB,IAAA,CAAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}