{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.reduce.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { createVNode as _createVNode } from \"vue\";\nimport classNames from '../../_util/classNames';\nimport { computed, defineComponent } from 'vue';\nimport { useInjectTable } from '../context/TableContext';\nimport HeaderRow from './HeaderRow';\nfunction parseHeaderRows(rootColumns) {\n  var rows = [];\n  function fillRowCells(columns, colIndex) {\n    var rowIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // Init rows\n    rows[rowIndex] = rows[rowIndex] || [];\n    var currentColIndex = colIndex;\n    var colSpans = columns.filter(Boolean).map(function (column) {\n      var cell = {\n        key: column.key,\n        \"class\": classNames(column.className, column[\"class\"]),\n        // children: column.title,\n        column: column,\n        colStart: currentColIndex\n      };\n      var colSpan = 1;\n      var subColumns = column.children;\n      if (subColumns && subColumns.length > 0) {\n        colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce(function (total, count) {\n          return total + count;\n        }, 0);\n        cell.hasSubColumns = true;\n      }\n      if ('colSpan' in column) {\n        colSpan = column.colSpan;\n      }\n      if ('rowSpan' in column) {\n        cell.rowSpan = column.rowSpan;\n      }\n      cell.colSpan = colSpan;\n      cell.colEnd = cell.colStart + colSpan - 1;\n      rows[rowIndex].push(cell);\n      currentColIndex += colSpan;\n      return colSpan;\n    });\n    return colSpans;\n  }\n  // Generate `rows` cell data\n  fillRowCells(rootColumns, 0);\n  // Handle `rowSpan`\n  var rowCount = rows.length;\n  var _loop = function _loop(rowIndex) {\n    rows[rowIndex].forEach(function (cell) {\n      if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n        // eslint-disable-next-line no-param-reassign\n        cell.rowSpan = rowCount - rowIndex;\n      }\n    });\n  };\n  for (var rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n    _loop(rowIndex);\n  }\n  return rows;\n}\nexport default defineComponent({\n  name: 'Header',\n  inheritAttrs: false,\n  props: ['columns', 'flattenColumns', 'stickyOffsets', 'customHeaderRow'],\n  setup: function setup(props) {\n    var tableContext = useInjectTable();\n    var rows = computed(function () {\n      return parseHeaderRows(props.columns);\n    });\n    return function () {\n      var prefixCls = tableContext.prefixCls,\n        getComponent = tableContext.getComponent;\n      var stickyOffsets = props.stickyOffsets,\n        flattenColumns = props.flattenColumns,\n        customHeaderRow = props.customHeaderRow;\n      var WrapperComponent = getComponent(['header', 'wrapper'], 'thead');\n      var trComponent = getComponent(['header', 'row'], 'tr');\n      var thComponent = getComponent(['header', 'cell'], 'th');\n      return _createVNode(WrapperComponent, {\n        \"class\": \"\".concat(prefixCls, \"-thead\")\n      }, {\n        \"default\": function _default() {\n          return [rows.value.map(function (row, rowIndex) {\n            var rowNode = _createVNode(HeaderRow, {\n              \"key\": rowIndex,\n              \"flattenColumns\": flattenColumns,\n              \"cells\": row,\n              \"stickyOffsets\": stickyOffsets,\n              \"rowComponent\": trComponent,\n              \"cellComponent\": thComponent,\n              \"customHeaderRow\": customHeaderRow,\n              \"index\": rowIndex\n            }, null);\n            return rowNode;\n          })];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"names":["createVNode","_createVNode","classNames","computed","defineComponent","useInjectTable","HeaderRow","parseHeaderRows","rootColumns","rows","fillRowCells","columns","colIndex","rowIndex","arguments","length","undefined","currentColIndex","colSpans","filter","Boolean","map","column","cell","key","className","colStart","colSpan","subColumns","children","reduce","total","count","hasSubColumns","rowSpan","colEnd","push","rowCount","_loop","forEach","name","inheritAttrs","props","setup","tableContext","prefixCls","getComponent","stickyOffsets","flattenColumns","customHeaderRow","WrapperComponent","trComponent","thComponent","concat","_default","value","row","rowNode"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-table/Header/Header.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport classNames from '../../_util/classNames';\nimport { computed, defineComponent } from 'vue';\nimport { useInjectTable } from '../context/TableContext';\nimport HeaderRow from './HeaderRow';\nfunction parseHeaderRows(rootColumns) {\n  const rows = [];\n  function fillRowCells(columns, colIndex) {\n    let rowIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    // Init rows\n    rows[rowIndex] = rows[rowIndex] || [];\n    let currentColIndex = colIndex;\n    const colSpans = columns.filter(Boolean).map(column => {\n      const cell = {\n        key: column.key,\n        class: classNames(column.className, column.class),\n        // children: column.title,\n        column,\n        colStart: currentColIndex\n      };\n      let colSpan = 1;\n      const subColumns = column.children;\n      if (subColumns && subColumns.length > 0) {\n        colSpan = fillRowCells(subColumns, currentColIndex, rowIndex + 1).reduce((total, count) => total + count, 0);\n        cell.hasSubColumns = true;\n      }\n      if ('colSpan' in column) {\n        ({\n          colSpan\n        } = column);\n      }\n      if ('rowSpan' in column) {\n        cell.rowSpan = column.rowSpan;\n      }\n      cell.colSpan = colSpan;\n      cell.colEnd = cell.colStart + colSpan - 1;\n      rows[rowIndex].push(cell);\n      currentColIndex += colSpan;\n      return colSpan;\n    });\n    return colSpans;\n  }\n  // Generate `rows` cell data\n  fillRowCells(rootColumns, 0);\n  // Handle `rowSpan`\n  const rowCount = rows.length;\n  for (let rowIndex = 0; rowIndex < rowCount; rowIndex += 1) {\n    rows[rowIndex].forEach(cell => {\n      if (!('rowSpan' in cell) && !cell.hasSubColumns) {\n        // eslint-disable-next-line no-param-reassign\n        cell.rowSpan = rowCount - rowIndex;\n      }\n    });\n  }\n  return rows;\n}\nexport default defineComponent({\n  name: 'Header',\n  inheritAttrs: false,\n  props: ['columns', 'flattenColumns', 'stickyOffsets', 'customHeaderRow'],\n  setup(props) {\n    const tableContext = useInjectTable();\n    const rows = computed(() => parseHeaderRows(props.columns));\n    return () => {\n      const {\n        prefixCls,\n        getComponent\n      } = tableContext;\n      const {\n        stickyOffsets,\n        flattenColumns,\n        customHeaderRow\n      } = props;\n      const WrapperComponent = getComponent(['header', 'wrapper'], 'thead');\n      const trComponent = getComponent(['header', 'row'], 'tr');\n      const thComponent = getComponent(['header', 'cell'], 'th');\n      return _createVNode(WrapperComponent, {\n        \"class\": `${prefixCls}-thead`\n      }, {\n        default: () => [rows.value.map((row, rowIndex) => {\n          const rowNode = _createVNode(HeaderRow, {\n            \"key\": rowIndex,\n            \"flattenColumns\": flattenColumns,\n            \"cells\": row,\n            \"stickyOffsets\": stickyOffsets,\n            \"rowComponent\": trComponent,\n            \"cellComponent\": thComponent,\n            \"customHeaderRow\": customHeaderRow,\n            \"index\": rowIndex\n          }, null);\n          return rowNode;\n        })]\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}