{"ast":null,"code":"import _toConsumableArray from \"C:/Users/zhouy/WebstormProjects/lingo/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { createVNode, render as vueRender } from 'vue';\nimport ConfirmDialog from './ConfirmDialog';\nimport ConfigProvider, { globalConfigForApi } from '../config-provider';\nimport omit from '../_util/omit';\nimport { getConfirmLocale } from './locale';\nimport destroyFns from './destroyFns';\nvar confirm = function confirm(config) {\n  var container = document.createDocumentFragment();\n  var currentConfig = _extends(_extends({}, omit(config, ['parentContext', 'appContext'])), {\n    close: close,\n    open: true\n  });\n  var confirmDialogInstance = null;\n  function destroy() {\n    if (confirmDialogInstance) {\n      // destroy\n      vueRender(null, container);\n      confirmDialogInstance.component.update();\n      confirmDialogInstance = null;\n    }\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var triggerCancel = args.some(function (param) {\n      return param && param.triggerCancel;\n    });\n    if (config.onCancel && triggerCancel) {\n      config.onCancel.apply(config, [function () {}].concat(_toConsumableArray(args.slice(1))));\n    }\n    for (var i = 0; i < destroyFns.length; i++) {\n      var fn = destroyFns[i];\n      if (fn === close) {\n        destroyFns.splice(i, 1);\n        break;\n      }\n    }\n  }\n  function close() {\n    var _this = this;\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    currentConfig = _extends(_extends({}, currentConfig), {\n      open: false,\n      afterClose: function afterClose() {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        }\n        destroy.apply(_this, args);\n      }\n    });\n    // Legacy support\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n    update(currentConfig);\n  }\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = _extends(_extends({}, currentConfig), configUpdate);\n    }\n    if (confirmDialogInstance) {\n      _extends(confirmDialogInstance.component.props, currentConfig);\n      confirmDialogInstance.component.update();\n    }\n  }\n  var Wrapper = function Wrapper(p) {\n    var global = globalConfigForApi;\n    var rootPrefixCls = global.prefixCls;\n    var prefixCls = p.prefixCls || \"\".concat(rootPrefixCls, \"-modal\");\n    var iconPrefixCls = global.iconPrefixCls;\n    var runtimeLocale = getConfirmLocale();\n    return _createVNode(ConfigProvider, _objectSpread(_objectSpread({}, global), {}, {\n      \"prefixCls\": rootPrefixCls\n    }), {\n      \"default\": function _default() {\n        return [_createVNode(ConfirmDialog, _objectSpread(_objectSpread({}, p), {}, {\n          \"rootPrefixCls\": rootPrefixCls,\n          \"prefixCls\": prefixCls,\n          \"iconPrefixCls\": iconPrefixCls,\n          \"locale\": runtimeLocale,\n          \"cancelText\": p.cancelText || runtimeLocale.cancelText\n        }), null)];\n      }\n    });\n  };\n  function render(props) {\n    var vm = createVNode(Wrapper, _extends({}, props));\n    vm.appContext = config.parentContext || config.appContext || vm.appContext;\n    vueRender(vm, container);\n    return vm;\n  }\n  confirmDialogInstance = render(currentConfig);\n  destroyFns.push(close);\n  return {\n    destroy: close,\n    update: update\n  };\n};\nexport default confirm;\nexport function withWarn(props) {\n  return _extends(_extends({}, props), {\n    type: 'warning'\n  });\n}\nexport function withInfo(props) {\n  return _extends(_extends({}, props), {\n    type: 'info'\n  });\n}\nexport function withSuccess(props) {\n  return _extends(_extends({}, props), {\n    type: 'success'\n  });\n}\nexport function withError(props) {\n  return _extends(_extends({}, props), {\n    type: 'error'\n  });\n}\nexport function withConfirm(props) {\n  return _extends(_extends({}, props), {\n    type: 'confirm'\n  });\n}","map":{"version":3,"names":["_objectSpread","_extends","createVNode","_createVNode","render","vueRender","ConfirmDialog","ConfigProvider","globalConfigForApi","omit","getConfirmLocale","destroyFns","confirm","config","container","document","createDocumentFragment","currentConfig","close","open","confirmDialogInstance","destroy","component","update","_len","arguments","length","args","Array","_key","triggerCancel","some","param","onCancel","apply","concat","_toConsumableArray","slice","i","fn","splice","_this","_len2","_key2","afterClose","visible","configUpdate","props","Wrapper","p","global","rootPrefixCls","prefixCls","iconPrefixCls","runtimeLocale","_default","cancelText","vm","appContext","parentContext","push","withWarn","type","withInfo","withSuccess","withError","withConfirm"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/modal/confirm.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode } from \"vue\";\nimport { createVNode, render as vueRender } from 'vue';\nimport ConfirmDialog from './ConfirmDialog';\nimport ConfigProvider, { globalConfigForApi } from '../config-provider';\nimport omit from '../_util/omit';\nimport { getConfirmLocale } from './locale';\nimport destroyFns from './destroyFns';\nconst confirm = config => {\n  const container = document.createDocumentFragment();\n  let currentConfig = _extends(_extends({}, omit(config, ['parentContext', 'appContext'])), {\n    close,\n    open: true\n  });\n  let confirmDialogInstance = null;\n  function destroy() {\n    if (confirmDialogInstance) {\n      // destroy\n      vueRender(null, container);\n      confirmDialogInstance.component.update();\n      confirmDialogInstance = null;\n    }\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const triggerCancel = args.some(param => param && param.triggerCancel);\n    if (config.onCancel && triggerCancel) {\n      config.onCancel(() => {}, ...args.slice(1));\n    }\n    for (let i = 0; i < destroyFns.length; i++) {\n      const fn = destroyFns[i];\n      if (fn === close) {\n        destroyFns.splice(i, 1);\n        break;\n      }\n    }\n  }\n  function close() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    currentConfig = _extends(_extends({}, currentConfig), {\n      open: false,\n      afterClose: () => {\n        if (typeof config.afterClose === 'function') {\n          config.afterClose();\n        }\n        destroy.apply(this, args);\n      }\n    });\n    // Legacy support\n    if (currentConfig.visible) {\n      delete currentConfig.visible;\n    }\n    update(currentConfig);\n  }\n  function update(configUpdate) {\n    if (typeof configUpdate === 'function') {\n      currentConfig = configUpdate(currentConfig);\n    } else {\n      currentConfig = _extends(_extends({}, currentConfig), configUpdate);\n    }\n    if (confirmDialogInstance) {\n      _extends(confirmDialogInstance.component.props, currentConfig);\n      confirmDialogInstance.component.update();\n    }\n  }\n  const Wrapper = p => {\n    const global = globalConfigForApi;\n    const rootPrefixCls = global.prefixCls;\n    const prefixCls = p.prefixCls || `${rootPrefixCls}-modal`;\n    const iconPrefixCls = global.iconPrefixCls;\n    const runtimeLocale = getConfirmLocale();\n    return _createVNode(ConfigProvider, _objectSpread(_objectSpread({}, global), {}, {\n      \"prefixCls\": rootPrefixCls\n    }), {\n      default: () => [_createVNode(ConfirmDialog, _objectSpread(_objectSpread({}, p), {}, {\n        \"rootPrefixCls\": rootPrefixCls,\n        \"prefixCls\": prefixCls,\n        \"iconPrefixCls\": iconPrefixCls,\n        \"locale\": runtimeLocale,\n        \"cancelText\": p.cancelText || runtimeLocale.cancelText\n      }), null)]\n    });\n  };\n  function render(props) {\n    const vm = createVNode(Wrapper, _extends({}, props));\n    vm.appContext = config.parentContext || config.appContext || vm.appContext;\n    vueRender(vm, container);\n    return vm;\n  }\n  confirmDialogInstance = render(currentConfig);\n  destroyFns.push(close);\n  return {\n    destroy: close,\n    update\n  };\n};\nexport default confirm;\nexport function withWarn(props) {\n  return _extends(_extends({}, props), {\n    type: 'warning'\n  });\n}\nexport function withInfo(props) {\n  return _extends(_extends({}, props), {\n    type: 'info'\n  });\n}\nexport function withSuccess(props) {\n  return _extends(_extends({}, props), {\n    type: 'success'\n  });\n}\nexport function withError(props) {\n  return _extends(_extends({}, props), {\n    type: 'error'\n  });\n}\nexport function withConfirm(props) {\n  return _extends(_extends({}, props), {\n    type: 'confirm'\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}