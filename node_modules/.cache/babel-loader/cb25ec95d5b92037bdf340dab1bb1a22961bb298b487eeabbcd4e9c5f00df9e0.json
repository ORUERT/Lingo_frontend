{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { computed, defineComponent, inject, provide } from 'vue';\nvar OverflowContextProviderKey = Symbol('OverflowContextProviderKey');\nexport var OverflowContextProvider = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'OverflowContextProvider',\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: Object\n    }\n  },\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    provide(OverflowContextProviderKey, computed(function () {\n      return props.value;\n    }));\n    return function () {\n      var _a;\n      return (_a = slots[\"default\"]) === null || _a === void 0 ? void 0 : _a.call(slots);\n    };\n  }\n});\nexport var useInjectOverflowContext = function useInjectOverflowContext() {\n  return inject(OverflowContextProviderKey, computed(function () {\n    return null;\n  }));\n};","map":{"version":3,"names":["computed","defineComponent","inject","provide","OverflowContextProviderKey","Symbol","OverflowContextProvider","compatConfig","MODE","name","inheritAttrs","props","value","type","Object","setup","_ref","slots","_a","call","useInjectOverflowContext"],"sources":["C:/Users/zhouy/WebstormProjects/lingo/node_modules/ant-design-vue/es/vc-overflow/context.js"],"sourcesContent":["import { computed, defineComponent, inject, provide } from 'vue';\nconst OverflowContextProviderKey = Symbol('OverflowContextProviderKey');\nexport const OverflowContextProvider = defineComponent({\n  compatConfig: {\n    MODE: 3\n  },\n  name: 'OverflowContextProvider',\n  inheritAttrs: false,\n  props: {\n    value: {\n      type: Object\n    }\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    provide(OverflowContextProviderKey, computed(() => props.value));\n    return () => {\n      var _a;\n      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);\n    };\n  }\n});\nexport const useInjectOverflowContext = () => {\n  return inject(OverflowContextProviderKey, computed(() => null));\n};"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,eAAe,EAAEC,MAAM,EAAEC,OAAO,QAAQ,KAAK;AAChE,IAAMC,0BAA0B,GAAGC,MAAM,CAAC,4BAA4B,CAAC;AACvE,OAAO,IAAMC,uBAAuB,GAAGL,eAAe,CAAC;EACrDM,YAAY,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACDC,IAAI,EAAE,yBAAyB;EAC/BC,YAAY,EAAE,KAAK;EACnBC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC;IACR;EACF,CAAC;EACDC,KAAK,WAAAA,MAACJ,KAAK,EAAEK,IAAI,EAAE;IACjB,IACEC,KAAK,GACHD,IAAI,CADNC,KAAK;IAEPd,OAAO,CAACC,0BAA0B,EAAEJ,QAAQ,CAAC;MAAA,OAAMW,KAAK,CAACC,KAAK;IAAA,EAAC,CAAC;IAChE,OAAO,YAAM;MACX,IAAIM,EAAE;MACN,OAAO,CAACA,EAAE,GAAGD,KAAK,WAAQ,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACC,IAAI,CAACF,KAAK,CAAC;IACjF,CAAC;EACH;AACF,CAAC,CAAC;AACF,OAAO,IAAMG,wBAAwB,GAAG,SAA3BA,wBAAwBA,CAAA,EAAS;EAC5C,OAAOlB,MAAM,CAACE,0BAA0B,EAAEJ,QAAQ,CAAC;IAAA,OAAM,IAAI;EAAA,EAAC,CAAC;AACjE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}